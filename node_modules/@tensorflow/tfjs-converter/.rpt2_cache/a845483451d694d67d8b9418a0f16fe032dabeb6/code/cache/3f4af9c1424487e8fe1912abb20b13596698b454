{"code":"var ExecutionContext = (function () {\r\n    function ExecutionContext(weightMap) {\r\n        this.weightMap = weightMap;\r\n        this.rootContext = { id: 0, frameName: '', iterationId: 0 };\r\n        this.contexts = [this.rootContext];\r\n        this.lastId = 0;\r\n        this.generateCurrentContextIds();\r\n    }\r\n    ExecutionContext.prototype.newFrame = function (id, frameName) {\r\n        return { id: id, frameName: frameName, iterationId: 0 };\r\n    };\r\n    Object.defineProperty(ExecutionContext.prototype, \"currentContext\", {\r\n        get: function () {\r\n            return this.contexts;\r\n        },\r\n        set: function (contexts) {\r\n            if (this.contexts !== contexts) {\r\n                this.contexts = contexts;\r\n                this.generateCurrentContextIds();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExecutionContext.prototype, \"currentContextId\", {\r\n        get: function () {\r\n            return this._currentContextIds[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExecutionContext.prototype, \"currentContextIds\", {\r\n        get: function () {\r\n            return this._currentContextIds;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ExecutionContext.prototype.generateCurrentContextIds = function () {\r\n        var names = [];\r\n        for (var i = 0; i < this.contexts.length - 1; i++) {\r\n            var contexts = this.contexts.slice(0, this.contexts.length - i);\r\n            names.push(this.contextIdforContexts(contexts));\r\n        }\r\n        names.push('');\r\n        this._currentContextIds = names;\r\n    };\r\n    ExecutionContext.prototype.contextIdforContexts = function (contexts) {\r\n        return contexts ?\r\n            contexts\r\n                .map(function (context) { return (context.id === 0 && context.iterationId === 0) ?\r\n                '' :\r\n                context.frameName + \"-\" + context.iterationId; })\r\n                .join('/') :\r\n            '';\r\n    };\r\n    ExecutionContext.prototype.enterFrame = function (frameId) {\r\n        if (this.contexts) {\r\n            this.lastId++;\r\n            this.contexts = this.contexts.slice();\r\n            this.contexts.push(this.newFrame(this.lastId, frameId));\r\n            this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\r\n        }\r\n    };\r\n    ExecutionContext.prototype.exitFrame = function () {\r\n        if (this.contexts && this.contexts.length > 1) {\r\n            this.contexts = this.contexts.slice();\r\n            this.contexts.splice(-1);\r\n            this.currentContextIds.shift();\r\n        }\r\n        else {\r\n            throw new Error('Cannot exit frame, the context is empty');\r\n        }\r\n    };\r\n    ExecutionContext.prototype.nextIteration = function () {\r\n        if (this.contexts && this.contexts.length > 0) {\r\n            this.contexts = this.contexts.slice();\r\n            this.lastId++;\r\n            var context = Object.assign({}, this.contexts[this.contexts.length - 1]);\r\n            context.iterationId += 1;\r\n            context.id = this.lastId;\r\n            this.contexts.splice(-1, 1, context);\r\n            this._currentContextIds.splice(0, 1, this.contextIdforContexts(this.contexts));\r\n        }\r\n        else {\r\n            throw new Error('Cannot increase frame iteration, the context is empty');\r\n        }\r\n    };\r\n    ExecutionContext.prototype.getWeight = function (name) {\r\n        return this.weightMap[name];\r\n    };\r\n    return ExecutionContext;\r\n}());\r\nexport { ExecutionContext };\r\n//# sourceMappingURL=execution_context.js.map","map":"{\"version\":3,\"file\":\"execution_context.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/executor/execution_context.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/piyu/ml/tf-web-converter/executor/execution_context.d.ts","text":"import { Tensor } from '@tensorflow/tfjs-core';\r\nimport { NamedTensorsMap } from '../data/types';\r\nexport interface ExecutionContextInfo {\r\n    id: number;\r\n    frameName: string;\r\n    iterationId: number;\r\n}\r\nexport declare class ExecutionContext {\r\n    weightMap: NamedTensorsMap;\r\n    private rootContext;\r\n    private contexts;\r\n    private lastId;\r\n    private _currentContextIds;\r\n    constructor(weightMap: NamedTensorsMap);\r\n    private newFrame(id, frameName);\r\n    currentContext: ExecutionContextInfo[];\r\n    readonly currentContextId: string;\r\n    readonly currentContextIds: string[];\r\n    private generateCurrentContextIds();\r\n    private contextIdforContexts(contexts);\r\n    enterFrame(frameId: string): void;\r\n    exitFrame(): void;\r\n    nextIteration(): void;\r\n    getWeight(name: string): Tensor[];\r\n}\r\n"}}
