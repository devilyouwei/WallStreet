{"code":"import * as proto from '../data/compiled_api';\r\nimport { getNodeNameAndIndex } from './executors/utils';\r\nimport * as arithmetic from './op_list/arithmetic.json';\r\nimport * as basicMath from './op_list/basic_math.json';\r\nimport * as control from './op_list/control.json';\r\nimport * as convolution from './op_list/convolution.json';\r\nimport * as creation from './op_list/creation.json';\r\nimport * as graph from './op_list/graph.json';\r\nimport * as image from './op_list/image.json';\r\nimport * as logical from './op_list/logical.json';\r\nimport * as matrices from './op_list/matrices.json';\r\nimport * as normalization from './op_list/normalization.json';\r\nimport * as reduction from './op_list/reduction.json';\r\nimport * as sliceJoin from './op_list/slice_join.json';\r\nimport * as transformation from './op_list/transformation.json';\r\nvar CONTROL_FLOW_OPS = ['Switch', 'Merge', 'Enter', 'Exit', 'NextIteration'];\r\nvar OperationMapper = (function () {\r\n    function OperationMapper() {\r\n        var ops = [\r\n            arithmetic, basicMath, control, convolution, creation, logical, image,\r\n            graph, matrices, normalization, reduction, sliceJoin, transformation\r\n        ];\r\n        var mappersJson = [];\r\n        if (arithmetic instanceof Object) {\r\n            mappersJson = [].concat.apply([], (ops.map(function (x) {\r\n                return Object.keys(x).map(function (key) { return x[key]; });\r\n            })));\r\n        }\r\n        else {\r\n            mappersJson = [].concat.apply([], ops);\r\n        }\r\n        this.opMappers = mappersJson.reduce(function (map, mapper) {\r\n            map[mapper.tfOpName] = mapper;\r\n            return map;\r\n        }, {});\r\n    }\r\n    Object.defineProperty(OperationMapper, \"Instance\", {\r\n        get: function () {\r\n            return this._instance || (this._instance = new this());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    OperationMapper.prototype.isControlFlow = function (node) {\r\n        return CONTROL_FLOW_OPS.some(function (op) { return op === node.op; });\r\n    };\r\n    OperationMapper.prototype.transformGraph = function (graph) {\r\n        var _this = this;\r\n        var tfNodes = graph.node;\r\n        var withControlFlow = false;\r\n        var placeholders = [];\r\n        var nodes = tfNodes.reduce(function (map, node) {\r\n            map[node.name] = _this.mapNode(node);\r\n            if (_this.isControlFlow(node))\r\n                withControlFlow = true;\r\n            if (node.op === 'Placeholder')\r\n                placeholders.push(map[node.name]);\r\n            return map;\r\n        }, {});\r\n        var inputs = [];\r\n        var outputs = [];\r\n        Object.keys(nodes).forEach(function (key) {\r\n            var node = nodes[key];\r\n            node.inputNames.forEach(function (name) {\r\n                var nodeName = getNodeNameAndIndex(name)[0];\r\n                node.inputs.push(nodes[nodeName]);\r\n                nodes[nodeName].children.push(node);\r\n            });\r\n            if (node.inputs.length === 0)\r\n                inputs.push(node);\r\n        });\r\n        Object.keys(nodes).forEach(function (key) {\r\n            var node = nodes[key];\r\n            if (node.children.length === 0)\r\n                outputs.push(node);\r\n        });\r\n        return { nodes: nodes, inputs: inputs, outputs: outputs, placeholders: placeholders, withControlFlow: withControlFlow };\r\n    };\r\n    OperationMapper.prototype.mapNode = function (node) {\r\n        var _this = this;\r\n        var mapper = this.opMappers[node.op];\r\n        if (mapper === undefined) {\r\n            throw new Error('Tensorflow Op is not supported: ' + node.op);\r\n        }\r\n        var newNode = {\r\n            name: node.name,\r\n            op: mapper.dlOpName,\r\n            category: mapper.category,\r\n            inputNames: (node.input ||\r\n                []).map(function (input) { return input.startsWith('^') ? input.substr(1) : input; }),\r\n            inputs: [],\r\n            children: [],\r\n            params: {}\r\n        };\r\n        if (!!mapper.params) {\r\n            newNode.params = mapper.params.reduce(function (map, param) {\r\n                var inputIndex = param.tfInputIndex;\r\n                var inputParamLength = param.tfInputParamLength;\r\n                var type = param.type;\r\n                var value = undefined;\r\n                if (inputIndex === undefined) {\r\n                    switch (param.type) {\r\n                        case 'string':\r\n                            value = _this.getStringParam(node.attr, param.tfParamName, param.defaultValue);\r\n                            if (value === undefined && !!param.tfParamNameDeprecated) {\r\n                                value = _this.getStringParam(node.attr, param.tfParamNameDeprecated, param.defaultValue);\r\n                            }\r\n                            break;\r\n                        case 'number':\r\n                            value = _this.getNumberParam(node.attr, param.tfParamName, param.defaultValue);\r\n                            if (value === undefined && !!param.tfParamNameDeprecated) {\r\n                                value = _this.getNumberParam(node.attr, param.tfParamNameDeprecated, param.defaultValue);\r\n                            }\r\n                            break;\r\n                        case 'number[]':\r\n                            value = _this.getNumericArrayParam(node.attr, param.tfParamName, param.defaultValue);\r\n                            if (value === undefined && !!param.tfParamNameDeprecated) {\r\n                                value = _this.getNumericArrayParam(node.attr, param.tfParamNameDeprecated, param.defaultValue);\r\n                            }\r\n                            break;\r\n                        case 'bool':\r\n                            value = _this.getBoolParam(node.attr, param.tfParamName, param.defaultValue);\r\n                            if (value === undefined && !!param.tfParamNameDeprecated) {\r\n                                value = _this.getBoolParam(node.attr, param.tfParamNameDeprecated, param.defaultValue);\r\n                            }\r\n                            break;\r\n                        case 'shape':\r\n                            value = _this.getTensorShapeParam(node.attr, param.tfParamName, param.defaultValue);\r\n                            if (value === undefined && !!param.tfParamNameDeprecated) {\r\n                                value = _this.getTensorShapeParam(node.attr, param.tfParamNameDeprecated, param.defaultValue);\r\n                            }\r\n                            break;\r\n                        case 'dtype':\r\n                            value = _this.getDtypeParam(node.attr, param.tfParamName, param.defaultValue);\r\n                            if (value === undefined && !!param.tfParamNameDeprecated) {\r\n                                value = _this.getDtypeParam(node.attr, param.tfParamNameDeprecated, param.defaultValue);\r\n                            }\r\n                            break;\r\n                        case 'tensor':\r\n                        case 'tensors':\r\n                            break;\r\n                        default:\r\n                            throw new Error(\"Unsupported param type: \" + param.type + \" for op: \" + node.op);\r\n                    }\r\n                }\r\n                map[param.dlParamName] = { value: value, inputIndex: inputIndex, type: type, inputParamLength: inputParamLength };\r\n                return map;\r\n            }, {});\r\n        }\r\n        return newNode;\r\n    };\r\n    OperationMapper.prototype.getStringParam = function (attrs, name, def, keepCase) {\r\n        if (keepCase === void 0) { keepCase = false; }\r\n        var param = attrs[name];\r\n        if (param !== undefined) {\r\n            var value = String.fromCharCode.apply(null, param.s);\r\n            return keepCase ? value : value.toLowerCase();\r\n        }\r\n        return def;\r\n    };\r\n    OperationMapper.prototype.getBoolParam = function (attrs, name, def) {\r\n        var param = attrs[name];\r\n        return param ? param.b : def;\r\n    };\r\n    OperationMapper.prototype.getNumberParam = function (attrs, name, def) {\r\n        var param = attrs[name];\r\n        var value = (param ? ((param.f !== undefined) ? param.f : param.i) : def);\r\n        return (typeof value === 'number') ? value : value['toInt']();\r\n    };\r\n    OperationMapper.prototype.getDtypeParam = function (attrs, name, def) {\r\n        var param = attrs[name];\r\n        if (param && param.type) {\r\n            switch (param.type) {\r\n                case proto.tensorflow.DataType.DT_FLOAT:\r\n                    return 'float32';\r\n                case proto.tensorflow.DataType.DT_INT32:\r\n                    return 'int32';\r\n                case proto.tensorflow.DataType.DT_BOOL:\r\n                    return 'bool';\r\n                default:\r\n                    return def;\r\n            }\r\n        }\r\n        return def;\r\n    };\r\n    OperationMapper.prototype.getTensorShapeParam = function (attrs, name, def) {\r\n        var param = attrs[name];\r\n        if (param && param.shape) {\r\n            return param.shape.dim.map(function (dim) { return dim.size; });\r\n        }\r\n        return def;\r\n    };\r\n    OperationMapper.prototype.getNumericArrayParam = function (attrs, name, def) {\r\n        var param = attrs[name];\r\n        if (param) {\r\n            return ((param.list.f && param.list.f.length ? param.list.f :\r\n                param.list.i))\r\n                .map(function (v) { return (typeof v === 'number') ? v : v['toInt'](); });\r\n        }\r\n        return def;\r\n    };\r\n    return OperationMapper;\r\n}());\r\nexport { OperationMapper };\r\n//# sourceMappingURL=operation_mapper.js.map","map":"{\"version\":3,\"file\":\"operation_mapper.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/operations/operation_mapper.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/piyu/ml/tf-web-converter/operations/operation_mapper.d.ts","text":"import * as proto from '../data/compiled_api';\r\nimport { Graph } from './types';\r\nexport declare class OperationMapper {\r\n    private static _instance;\r\n    private opMappers;\r\n    static readonly Instance: OperationMapper;\r\n    private constructor();\r\n    private isControlFlow(node);\r\n    transformGraph(graph: proto.tensorflow.IGraphDef): Graph;\r\n    private mapNode(node);\r\n    private getStringParam(attrs, name, def, keepCase?);\r\n    private getBoolParam(attrs, name, def);\r\n    private getNumberParam(attrs, name, def);\r\n    private getDtypeParam(attrs, name, def);\r\n    private getTensorShapeParam(attrs, name, def?);\r\n    private getNumericArrayParam(attrs, name, def);\r\n}\r\n"}}
