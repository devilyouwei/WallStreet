{"code":"export function getParamValue(paramName, node, tensorMap, context) {\r\n    var param = node.params[paramName];\r\n    if (param && param.inputIndex !== undefined) {\r\n        if (param.type === 'tensor') {\r\n            return getTensor(node.inputNames[param.inputIndex], tensorMap, context);\r\n        }\r\n        if (param.type === 'tensors') {\r\n            var inputs = param.inputIndex === 0 ?\r\n                (param.inputParamLength === 0 ?\r\n                    node.inputNames :\r\n                    node.inputNames.slice(param.inputIndex, -param.inputParamLength)) :\r\n                node.inputNames.splice(param.inputIndex);\r\n            return inputs.map(function (name) { return getTensor(name, tensorMap, context); });\r\n        }\r\n        var data = Array.prototype.slice.call(getTensor(node.inputNames.slice(param.inputIndex)[0], tensorMap, context)\r\n            .dataSync());\r\n        return param.type === 'number' ? data[0] : data;\r\n    }\r\n    return param && param.value;\r\n}\r\nexport function getTensor(name, tensorsMap, context) {\r\n    var _a = parseNodeName(name), nodeName = _a[0], index = _a[1];\r\n    var contextId = context.currentContextIds.find(function (contextId) {\r\n        return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\r\n    });\r\n    return contextId !== undefined ?\r\n        tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\r\n        undefined;\r\n}\r\nexport function getNodeNameAndIndex(inputName, context) {\r\n    var _a = parseNodeName(inputName), nodeName = _a[0], index = _a[1];\r\n    return [\r\n        getNodeNameWithContextId(nodeName, context && context.currentContextId),\r\n        index\r\n    ];\r\n}\r\nfunction getNodeNameWithContextId(name, contextId) {\r\n    return !!contextId ? name + \"-\" + contextId : name;\r\n}\r\nexport function parseNodeName(name) {\r\n    var index = name.lastIndexOf(':');\r\n    if (index === -1)\r\n        return [name, 0];\r\n    var nodeName = name.substring(0, index);\r\n    return [nodeName, Number(name.substring(index + 1))];\r\n}\r\nexport function split(arr, size) {\r\n    var res = [];\r\n    for (var i = 0; i < arr.length; i += size) {\r\n        res.push(arr.slice(i, i + size));\r\n    }\r\n    return res;\r\n}\r\n//# sourceMappingURL=utils.js.map","map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/operations/executors/utils.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/piyu/ml/tf-web-converter/operations/executors/utils.d.ts","text":"import * as tf from '@tensorflow/tfjs';\r\nimport { NamedTensorsMap } from '../../data/types';\r\nimport { ExecutionContext } from '../../executor/execution_context';\r\nimport { Node, ValueType } from '../types';\r\nexport declare function getParamValue(paramName: string, node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext): ValueType;\r\nexport declare function getTensor(name: string, tensorsMap: NamedTensorsMap, context: ExecutionContext): tf.Tensor;\r\nexport declare function getNodeNameAndIndex(inputName: string, context?: ExecutionContext): [string, number];\r\nexport declare function parseNodeName(name: string): [string, number];\r\nexport declare function split(arr: number[], size: number): number[][];\r\n"}}
