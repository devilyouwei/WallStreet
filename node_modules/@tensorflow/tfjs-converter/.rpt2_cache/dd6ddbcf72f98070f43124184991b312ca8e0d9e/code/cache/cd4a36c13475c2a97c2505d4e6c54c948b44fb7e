{"code":"import * as tfc from '@tensorflow/tfjs-core';\r\nimport { getParamValue, split } from './utils';\r\nexport var executeOp = function (node, tensorMap, context) {\r\n    switch (node.op) {\r\n        case 'cast': {\r\n            return [tfc.cast(getParamValue('x', node, tensorMap, context), getParamValue('dtype', node, tensorMap, context))];\r\n        }\r\n        case 'expandDims': {\r\n            var axis = node.params['axis'].value;\r\n            return [tfc.expandDims(getParamValue('x', node, tensorMap, context), axis)];\r\n        }\r\n        case 'squeeze': {\r\n            var axis = node.params['axis'].value;\r\n            return [tfc.squeeze(getParamValue('x', node, tensorMap, context), axis)];\r\n        }\r\n        case 'reshape': {\r\n            return [tfc.reshape(getParamValue('x', node, tensorMap, context), getParamValue('shape', node, tensorMap, context))];\r\n        }\r\n        case 'pad': {\r\n            return [tfc.pad(getParamValue('x', node, tensorMap, context), split(getParamValue('padding', node, tensorMap, context), 2), getParamValue('constantValue', node, tensorMap, context))];\r\n        }\r\n        default:\r\n            throw TypeError(\"Node type \" + node.op + \" is not implemented\");\r\n    }\r\n};\r\nexport var CATEGORY = 'transformation';\r\n//# sourceMappingURL=transformation_executor.js.map","map":"{\"version\":3,\"file\":\"transformation_executor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/operations/executors/transformation_executor.ts\"],\"names\":[],\"mappings\":\"AAiBA,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAO7C,OAAO,EAAC,aAAa,EAAE,KAAK,EAAC,MAAM,SAAS,CAAC;AAE7C,MAAM,CAAC,IAAI,SAAS,GAAe,UAAC,IAAU,EAAE,SAA0B,EACtC,OAAyB;IAE3D,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAChB,KAAK,MAAM,EAAE,CAAC;YACZ,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CACZ,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAe,EAC1D,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CACzB,CAAC,CAAC,CAAC;QAC/B,CAAC;QACD,KAAK,YAAY,EAAE,CAAC;YAClB,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAe,CAAC;YACjD,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,CAClB,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAe,EAAE,IAAI,CAAC,CAAC,CAAC;QACzE,CAAC;QACD,KAAK,SAAS,EAAE,CAAC;YACf,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAiB,CAAC;YACnD,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CACf,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAe,EAAE,IAAI,CAAC,CAAC,CAAC;QACzE,CAAC;QAED,KAAK,SAAS,EAAE,CAAC;YACf,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CACf,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAe,EAC1D,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAa,CAAC,CAAC,CAAC;QACrE,CAAC;QACD,KAAK,KAAK,EAAE,CAAC;YACX,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CACX,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAe,EAC1D,KAAK,CACD,aAAa,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAa,EAC9D,CAAC,CAA4B,EACjC,aAAa,CAAC,eAAe,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAW,CAAC,CAAC,CAAC;QAC3E,CAAC;QACD;YACE,MAAM,SAAS,CAAC,eAAa,IAAI,CAAC,EAAE,wBAAqB,CAAC,CAAC;IAC/D,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,QAAQ,GAAG,gBAAgB,CAAC\"}","dts":{"name":"/usr/local/google/home/piyu/ml/tfjs-converter/operations/executors/transformation_executor.d.ts","text":"import { OpExecutor } from './types';\r\nexport declare let executeOp: OpExecutor;\r\nexport declare const CATEGORY = \"transformation\";\r\n"}}
