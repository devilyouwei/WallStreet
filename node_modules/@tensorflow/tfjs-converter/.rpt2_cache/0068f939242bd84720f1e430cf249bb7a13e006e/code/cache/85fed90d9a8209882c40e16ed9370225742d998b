{"code":"import * as tf from '@tensorflow/tfjs';\r\nimport { getParamValue } from './utils';\r\nexport var executeOp = function (node, tensorMap, context) {\r\n    switch (node.op) {\r\n        case 'add': {\r\n            return [tf.add(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\r\n        }\r\n        case 'mod':\r\n            return [tf.mod(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\r\n        case 'mul':\r\n            return [tf.mul(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\r\n        case 'div': {\r\n            return [tf.div(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\r\n        }\r\n        case 'sub': {\r\n            return [tf.sub(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\r\n        }\r\n        case 'minimum': {\r\n            return [tf.minimum(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\r\n        }\r\n        case 'maximum': {\r\n            return [tf.maximum(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\r\n        }\r\n        case 'pow': {\r\n            return [tf.pow(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\r\n        }\r\n        case 'squaredDifference': {\r\n            return [tf.squaredDifference(getParamValue('a', node, tensorMap, context), getParamValue('b', node, tensorMap, context))];\r\n        }\r\n        default:\r\n            throw TypeError(\"Node type \" + node.op + \" is not implemented\");\r\n    }\r\n};\r\nexport var CATEGORY = 'arithmetic';\r\n//# sourceMappingURL=arithmetic_executor.js.map","map":"{\"version\":3,\"file\":\"arithmetic_executor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/operations/executors/arithmetic_executor.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/piyu/ml/tfjs-converter/operations/executors/arithmetic_executor.d.ts","text":"import { OpExecutor } from './types';\r\nexport declare let executeOp: OpExecutor;\r\nexport declare const CATEGORY = \"arithmetic\";\r\n"}}
