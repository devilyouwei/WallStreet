{"code":"import * as tf from '@tensorflow/tfjs';\r\nimport { getParamValue, getTensor } from './utils';\r\nexport var executeOp = function (node, tensorMap, context) {\r\n    switch (node.op) {\r\n        case 'abs':\r\n            return [tf.abs(getParamValue('x', node, tensorMap, context))];\r\n        case 'acos':\r\n            return [tf.acos(getParamValue('x', node, tensorMap, context))];\r\n        case 'acosh':\r\n            return [tf.acosh(getParamValue('x', node, tensorMap, context))];\r\n        case 'asin':\r\n            return [tf.asin(getParamValue('x', node, tensorMap, context))];\r\n        case 'asinh':\r\n            return [tf.asinh(getParamValue('x', node, tensorMap, context))];\r\n        case 'atan':\r\n            return [tf.atan(getParamValue('x', node, tensorMap, context))];\r\n        case 'atanh':\r\n            return [tf.atanh(getParamValue('x', node, tensorMap, context))];\r\n        case 'ceil':\r\n            return [tf.ceil(getParamValue('x', node, tensorMap, context))];\r\n        case 'cos':\r\n            return [tf.cos(getParamValue('x', node, tensorMap, context))];\r\n        case 'cosh':\r\n            return [tf.cosh(getParamValue('x', node, tensorMap, context))];\r\n        case 'elu':\r\n            return [tf.elu(getParamValue('x', node, tensorMap, context))];\r\n        case 'erf':\r\n            return [tf.erf(getParamValue('x', node, tensorMap, context))];\r\n        case 'exp':\r\n            return [tf.exp(getParamValue('x', node, tensorMap, context))];\r\n        case 'expm1': {\r\n            return [tf.expm1(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'floor':\r\n            return [tf.floor(getParamValue('x', node, tensorMap, context))];\r\n        case 'log':\r\n            return [tf.log(getParamValue('x', node, tensorMap, context))];\r\n        case 'log1p': {\r\n            return [tf.log1p(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'neg':\r\n            return [tf.neg(getParamValue('x', node, tensorMap, context))];\r\n        case 'reciprocal': {\r\n            return [tf.reciprocal(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'relu':\r\n            return [tf.relu(getParamValue('x', node, tensorMap, context))];\r\n        case 'round': {\r\n            return [tf.round(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'selu':\r\n            return [tf.selu(getParamValue('x', node, tensorMap, context))];\r\n        case 'sigmoid':\r\n            return [tf.sigmoid(getParamValue('x', node, tensorMap, context))];\r\n        case 'sin':\r\n            return [tf.sin(getParamValue('x', node, tensorMap, context))];\r\n        case 'sign': {\r\n            return [tf.sign(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'sinh': {\r\n            return [tf.sinh(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'softplus': {\r\n            return [tf.softplus(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'sqrt': {\r\n            return [tf.sqrt(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'square': {\r\n            return [tf.square(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'tanh': {\r\n            return [tf.tanh(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        case 'tan':\r\n            return [tf.tan(getParamValue('x', node, tensorMap, context))];\r\n        case 'clipByValue':\r\n            return [tf.clipByValue(getParamValue('x', node, tensorMap, context), getParamValue('clipValueMin', node, tensorMap, context), getParamValue('clipValueMax', node, tensorMap, context))];\r\n        case 'rsqrt':\r\n            return [tf.div(tf.scalar(1.0, 'float32'), tf.sqrt(getTensor(node.inputNames[0], tensorMap, context)))];\r\n        default:\r\n            throw TypeError(\"Node type \" + node.op + \" is not implemented\");\r\n    }\r\n};\r\nexport var CATEGORY = 'basic_math';\r\n//# sourceMappingURL=basic_math_executor.js.map","map":"{\"version\":3,\"file\":\"basic_math_executor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/operations/executors/basic_math_executor.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/piyu/ml/tf-web-converter/operations/executors/basic_math_executor.d.ts","text":"import { OpExecutor } from './types';\r\nexport declare let executeOp: OpExecutor;\r\nexport declare const CATEGORY = \"basic_math\";\r\n"}}
