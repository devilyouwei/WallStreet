{"code":"import * as arithmetic from './executors/arithmetic_executor';\r\nimport * as basicMath from './executors/basic_math_executor';\r\nimport * as control from './executors/control_executor';\r\nimport * as convolution from './executors/convolution_executor';\r\nimport * as creation from './executors/creation_executor';\r\nimport * as graph from './executors/graph_executor';\r\nimport * as image from './executors/image_executor';\r\nimport * as logical from './executors/logical_executor';\r\nimport * as matrices from './executors/matrices_executor';\r\nimport * as normalization from './executors/normalization_executor';\r\nimport * as reduction from './executors/reduction_executor';\r\nimport * as sliceJoin from './executors/slice_join_executor';\r\nimport * as transformation from './executors/transformation_executor';\r\nexport function executeOp(node, tensorMap, context) {\r\n    switch (node.category) {\r\n        case 'arithmetic':\r\n            return arithmetic.executeOp(node, tensorMap, context);\r\n        case 'basic_math':\r\n            return basicMath.executeOp(node, tensorMap, context);\r\n        case 'control':\r\n            return control.executeOp(node, tensorMap, context);\r\n        case 'convolution':\r\n            return convolution.executeOp(node, tensorMap, context);\r\n        case 'creation':\r\n            return creation.executeOp(node, tensorMap, context);\r\n        case 'image':\r\n            return image.executeOp(node, tensorMap, context);\r\n        case 'graph':\r\n            return graph.executeOp(node, tensorMap, context);\r\n        case 'logical':\r\n            return logical.executeOp(node, tensorMap, context);\r\n        case 'matrices':\r\n            return matrices.executeOp(node, tensorMap, context);\r\n        case 'normalization':\r\n            return normalization.executeOp(node, tensorMap, context);\r\n        case 'reduction':\r\n            return reduction.executeOp(node, tensorMap, context);\r\n        case 'slice_join':\r\n            return sliceJoin.executeOp(node, tensorMap, context);\r\n        case 'transformation':\r\n            return transformation.executeOp(node, tensorMap, context);\r\n        default:\r\n            throw TypeError(\"Node type \" + node.op + \" is not implemented\");\r\n    }\r\n}\r\n//# sourceMappingURL=operation_executor.js.map","map":"{\"version\":3,\"file\":\"operation_executor.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/operations/operation_executor.ts\"],\"names\":[],\"mappings\":\"AAsBA,OAAO,KAAK,UAAU,MAAM,iCAAiC,CAAC;AAC9D,OAAO,KAAK,SAAS,MAAM,iCAAiC,CAAC;AAC7D,OAAO,KAAK,OAAO,MAAM,8BAA8B,CAAC;AACxD,OAAO,KAAK,WAAW,MAAM,kCAAkC,CAAC;AAChE,OAAO,KAAK,QAAQ,MAAM,+BAA+B,CAAC;AAC1D,OAAO,KAAK,KAAK,MAAM,4BAA4B,CAAC;AACpD,OAAO,KAAK,KAAK,MAAM,4BAA4B,CAAC;AACpD,OAAO,KAAK,OAAO,MAAM,8BAA8B,CAAC;AACxD,OAAO,KAAK,QAAQ,MAAM,+BAA+B,CAAC;AAC1D,OAAO,KAAK,aAAa,MAAM,oCAAoC,CAAC;AACpE,OAAO,KAAK,SAAS,MAAM,gCAAgC,CAAC;AAC5D,OAAO,KAAK,SAAS,MAAM,iCAAiC,CAAC;AAC7D,OAAO,KAAK,cAAc,MAAM,qCAAqC,CAAC;AAQtE,MAAM,oBACF,IAAU,EAAE,SAA0B,EACtC,OAAyB;IAC3B,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtB,KAAK,YAAY;YACf,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACxD,KAAK,YAAY;YACf,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACvD,KAAK,SAAS;YACZ,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACrD,KAAK,aAAa;YAChB,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACzD,KAAK,UAAU;YACb,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACtD,KAAK,OAAO;YACV,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACnD,KAAK,OAAO;YACV,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACnD,KAAK,SAAS;YACZ,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACrD,KAAK,UAAU;YACb,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACtD,KAAK,eAAe;YAClB,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAC3D,KAAK,WAAW;YACd,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACvD,KAAK,YAAY;YACf,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACvD,KAAK,gBAAgB;YACnB,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAC5D;YACE,MAAM,SAAS,CAAC,eAAa,IAAI,CAAC,EAAE,wBAAqB,CAAC,CAAC;IAC/D,CAAC;AACH,CAAC\"}","dts":{"name":"/usr/local/google/home/piyu/ml/tf-web-converter/operations/operation_executor.d.ts","text":"import * as tf from '@tensorflow/tfjs';\r\nimport { NamedTensorsMap } from '../data/types';\r\nimport { ExecutionContext } from '../executor/execution_context';\r\nimport { Node } from './types';\r\nexport declare function executeOp(node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext): tf.Tensor[] | Promise<tf.Tensor[]>;\r\n"}}
