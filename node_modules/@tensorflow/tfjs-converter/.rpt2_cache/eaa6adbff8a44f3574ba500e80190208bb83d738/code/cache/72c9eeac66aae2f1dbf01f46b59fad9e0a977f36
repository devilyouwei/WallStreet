{"code":"import * as tf from '@tensorflow/tfjs';\r\nimport { getParamValue } from './utils';\r\nexport var executeOp = function (node, tensorMap, context) {\r\n    switch (node.op) {\r\n        case 'batchNormalization': {\r\n            return [tf.batchNormalization(getParamValue('x', node, tensorMap, context), getParamValue('mean', node, tensorMap, context), getParamValue('variance', node, tensorMap, context), getParamValue('epsilon', node, tensorMap, context), getParamValue('scale', node, tensorMap, context), getParamValue('offset', node, tensorMap, context))];\r\n        }\r\n        case 'localResponseNormalization': {\r\n            return [tf.localResponseNormalization(getParamValue('x', node, tensorMap, context), getParamValue('radius', node, tensorMap, context), getParamValue('bias', node, tensorMap, context), getParamValue('alpha', node, tensorMap, context), getParamValue('beta', node, tensorMap, context))];\r\n        }\r\n        case 'softmax': {\r\n            return [tf.softmax(getParamValue('x', node, tensorMap, context))];\r\n        }\r\n        default:\r\n            throw TypeError(\"Node type \" + node.op + \" is not implemented\");\r\n    }\r\n};\r\nexport var CATEGORY = 'normalization';\r\n//# sourceMappingURL=normalization_executor.js.map","map":"{\"version\":3,\"file\":\"normalization_executor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/operations/executors/normalization_executor.ts\"],\"names\":[],\"mappings\":\"AAiBA,OAAO,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAOvC,OAAO,EAAC,aAAa,EAAC,MAAM,SAAS,CAAC;AAEtC,MAAM,CAAC,IAAI,SAAS,GAAe,UAAC,IAAU,EAAE,SAA0B,EACtC,OAAyB;IAC3D,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAChB,KAAK,oBAAoB,EAAE,CAAC;YAC1B,MAAM,CAAC,CAAC,EAAE,CAAC,kBAAkB,CACzB,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAc,EACzD,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAc,EAC5D,aAAa,CAAC,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAc,EAChE,aAAa,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAW,EAC5D,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAc,EAC7D,aAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAc,CAAC,CAAC,CAAC;QACvE,CAAC;QACD,KAAK,4BAA4B,EAAE,CAAC;YAClC,MAAM,CAAC,CAAC,EAAE,CAAC,0BAA0B,CACjC,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAC5B,EACf,aAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAW,EAC3D,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAW,EACzD,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAW,EAC1D,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAW,CAAC,CAAC,CAAC;QAClE,CAAC;QACD,KAAK,SAAS,EAAE,CAAC;YACf,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CACd,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAc,CAAC,CAAC,CAAC;QAClE,CAAC;QACD;YACE,MAAM,SAAS,CAAC,eAAa,IAAI,CAAC,EAAE,wBAAqB,CAAC,CAAC;IAC/D,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,QAAQ,GAAG,eAAe,CAAC\"}","dts":{"name":"/usr/local/google/home/piyu/ml/tf-web-converter/operations/executors/normalization_executor.d.ts","text":"import { OpExecutor } from './types';\r\nexport declare let executeOp: OpExecutor;\r\nexport declare const CATEGORY = \"normalization\";\r\n"}}
