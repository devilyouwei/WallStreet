{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc, eye, linalg, ones, randomUniform, scalar, serialization, tidy, truncatedNormal, zeros } from '@tensorflow/tfjs-core';\r\nimport * as K from './backend/tfjs_backend';\r\nimport { checkDataFormat } from './common';\r\nimport { NotImplementedError, ValueError } from './errors';\r\nimport { checkStringTypeUnionValue, deserializeKerasObject, serializeKerasObject } from './utils/generic_utils';\r\nimport { arrayProd } from './utils/math_utils';\r\nexport var VALID_FAN_MODE_VALUES = ['fanIn', 'fanOut', 'fanAvg'];\r\nexport function checkFanMode(value) {\r\n    checkStringTypeUnionValue(VALID_FAN_MODE_VALUES, 'FanMode', value);\r\n}\r\nexport var VALID_DISTRIBUTION_VALUES = ['normal', 'uniform'];\r\nexport function checkDistribution(value) {\r\n    checkStringTypeUnionValue(VALID_DISTRIBUTION_VALUES, 'Distribution', value);\r\n}\r\nvar Initializer = (function (_super) {\r\n    tslib_1.__extends(Initializer, _super);\r\n    function Initializer() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Initializer.prototype.fromConfigUsesCustomObjects = function () {\r\n        return false;\r\n    };\r\n    Initializer.prototype.getConfig = function () {\r\n        return {};\r\n    };\r\n    Initializer = tslib_1.__decorate([\r\n        doc({ heading: 'Initializers', subheading: 'Classes', namespace: 'initializers' })\r\n    ], Initializer);\r\n    return Initializer;\r\n}(serialization.Serializable));\r\nexport { Initializer };\r\nvar Zeros = (function (_super) {\r\n    tslib_1.__extends(Zeros, _super);\r\n    function Zeros() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Zeros.prototype.apply = function (shape, dtype) {\r\n        return zeros(shape, dtype);\r\n    };\r\n    Zeros.className = 'Zeros';\r\n    return Zeros;\r\n}(Initializer));\r\nexport { Zeros };\r\nserialization.SerializationMap.register(Zeros);\r\nvar Ones = (function (_super) {\r\n    tslib_1.__extends(Ones, _super);\r\n    function Ones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Ones.prototype.apply = function (shape, dtype) {\r\n        return ones(shape, dtype);\r\n    };\r\n    Ones.className = 'Ones';\r\n    return Ones;\r\n}(Initializer));\r\nexport { Ones };\r\nserialization.SerializationMap.register(Ones);\r\nvar Constant = (function (_super) {\r\n    tslib_1.__extends(Constant, _super);\r\n    function Constant(config) {\r\n        var _this = _super.call(this) || this;\r\n        _this.value = config.value;\r\n        return _this;\r\n    }\r\n    Constant.prototype.apply = function (shape, dtype) {\r\n        var _this = this;\r\n        return tidy(function () { return K.scalarTimesArray(scalar(_this.value), ones(shape, dtype)); });\r\n    };\r\n    Constant.prototype.getConfig = function () {\r\n        return {\r\n            value: this.value,\r\n        };\r\n    };\r\n    Constant.className = 'Constant';\r\n    return Constant;\r\n}(Initializer));\r\nexport { Constant };\r\nserialization.SerializationMap.register(Constant);\r\nvar RandomUniform = (function (_super) {\r\n    tslib_1.__extends(RandomUniform, _super);\r\n    function RandomUniform(config) {\r\n        var _this = _super.call(this) || this;\r\n        _this.DEFAULT_MINVAL = -0.05;\r\n        _this.DEFAULT_MAXVAL = 0.05;\r\n        _this.minval = config.minval || _this.DEFAULT_MINVAL;\r\n        _this.maxval = config.maxval || _this.DEFAULT_MAXVAL;\r\n        _this.seed = config.seed;\r\n        return _this;\r\n    }\r\n    RandomUniform.prototype.apply = function (shape, dtype) {\r\n        return randomUniform(shape, this.minval, this.maxval, dtype);\r\n    };\r\n    RandomUniform.prototype.getConfig = function () {\r\n        return { minval: this.minval, maxval: this.maxval, seed: this.seed };\r\n    };\r\n    RandomUniform.className = 'RandomUniform';\r\n    return RandomUniform;\r\n}(Initializer));\r\nexport { RandomUniform };\r\nserialization.SerializationMap.register(RandomUniform);\r\nvar RandomNormal = (function (_super) {\r\n    tslib_1.__extends(RandomNormal, _super);\r\n    function RandomNormal(config) {\r\n        var _this = _super.call(this) || this;\r\n        _this.DEFAULT_MEAN = 0.;\r\n        _this.DEFAULT_STDDEV = 0.05;\r\n        _this.mean = config.mean || _this.DEFAULT_MEAN;\r\n        _this.stddev = config.stddev || _this.DEFAULT_STDDEV;\r\n        _this.seed = config.seed;\r\n        return _this;\r\n    }\r\n    RandomNormal.prototype.apply = function (shape, dtype) {\r\n        if (dtype === 'bool') {\r\n            throw new NotImplementedError(\"randomNormal does not support dType bool.\");\r\n        }\r\n        return K.randomNormal(shape, this.mean, this.stddev, dtype, this.seed);\r\n    };\r\n    RandomNormal.prototype.getConfig = function () {\r\n        return { mean: this.mean, stddev: this.stddev, seed: this.seed };\r\n    };\r\n    RandomNormal.className = 'RandomNormal';\r\n    return RandomNormal;\r\n}(Initializer));\r\nexport { RandomNormal };\r\nserialization.SerializationMap.register(RandomNormal);\r\nvar TruncatedNormal = (function (_super) {\r\n    tslib_1.__extends(TruncatedNormal, _super);\r\n    function TruncatedNormal(config) {\r\n        var _this = _super.call(this) || this;\r\n        _this.DEFAULT_MEAN = 0.;\r\n        _this.DEFAULT_STDDEV = 0.05;\r\n        _this.mean = config.mean || _this.DEFAULT_MEAN;\r\n        _this.stddev = config.stddev || _this.DEFAULT_STDDEV;\r\n        _this.seed = config.seed;\r\n        return _this;\r\n    }\r\n    TruncatedNormal.prototype.apply = function (shape, dtype) {\r\n        if (dtype === 'bool') {\r\n            throw new NotImplementedError(\"truncatedNormal does not support dType bool.\");\r\n        }\r\n        return truncatedNormal(shape, this.mean, this.stddev, dtype, this.seed);\r\n    };\r\n    TruncatedNormal.prototype.getConfig = function () {\r\n        return { mean: this.mean, stddev: this.stddev, seed: this.seed };\r\n    };\r\n    TruncatedNormal.className = 'TruncatedNormal';\r\n    return TruncatedNormal;\r\n}(Initializer));\r\nexport { TruncatedNormal };\r\nserialization.SerializationMap.register(TruncatedNormal);\r\nvar Identity = (function (_super) {\r\n    tslib_1.__extends(Identity, _super);\r\n    function Identity(config) {\r\n        var _this = _super.call(this) || this;\r\n        _this.gain = config.gain != null ? scalar(config.gain) : K.getScalar(1.0);\r\n        return _this;\r\n    }\r\n    Identity.prototype.apply = function (shape, dtype) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            if (shape.length !== 2 || shape[0] !== shape[1]) {\r\n                throw new ValueError('Identity matrix initializer can only be used for' +\r\n                    ' 2D square matrices.');\r\n            }\r\n            else {\r\n                return K.scalarTimesArray(_this.gain, eye(shape[0]));\r\n            }\r\n        });\r\n    };\r\n    Identity.prototype.getConfig = function () {\r\n        return { gain: this.gain.get() };\r\n    };\r\n    Identity.className = 'Identity';\r\n    return Identity;\r\n}(Initializer));\r\nexport { Identity };\r\nserialization.SerializationMap.register(Identity);\r\nfunction computeFans(shape, dataFormat) {\r\n    if (dataFormat === void 0) { dataFormat = 'channelsLast'; }\r\n    var fanIn;\r\n    var fanOut;\r\n    checkDataFormat(dataFormat);\r\n    if (shape.length === 2) {\r\n        fanIn = shape[0];\r\n        fanOut = shape[1];\r\n    }\r\n    else if ([3, 4, 5].indexOf(shape.length) !== -1) {\r\n        if (dataFormat === 'channelsFirst') {\r\n            var receptiveFieldSize = arrayProd(shape, 2);\r\n            fanIn = shape[1] * receptiveFieldSize;\r\n            fanOut = shape[0] * receptiveFieldSize;\r\n        }\r\n        else if (dataFormat === 'channelsLast') {\r\n            var receptiveFieldSize = arrayProd(shape, 0, shape.length - 2);\r\n            fanIn = shape[shape.length - 2] * receptiveFieldSize;\r\n            fanOut = shape[shape.length - 1] * receptiveFieldSize;\r\n        }\r\n    }\r\n    else {\r\n        var shapeProd = arrayProd(shape);\r\n        fanIn = Math.sqrt(shapeProd);\r\n        fanOut = Math.sqrt(shapeProd);\r\n    }\r\n    return [fanIn, fanOut];\r\n}\r\nvar VarianceScaling = (function (_super) {\r\n    tslib_1.__extends(VarianceScaling, _super);\r\n    function VarianceScaling(config) {\r\n        var _this = _super.call(this) || this;\r\n        if (config.scale < 0.0) {\r\n            throw new ValueError(\"scale must be a positive float. Got: \" + config.scale);\r\n        }\r\n        _this.scale = config.scale == null ? 1.0 : config.scale;\r\n        _this.mode = config.mode;\r\n        checkFanMode(_this.mode);\r\n        _this.distribution = config.distribution;\r\n        checkDistribution(_this.distribution);\r\n        _this.seed = config.seed;\r\n        return _this;\r\n    }\r\n    VarianceScaling.prototype.apply = function (shape, dtype) {\r\n        var fans = computeFans(shape);\r\n        var fanIn = fans[0];\r\n        var fanOut = fans[1];\r\n        var scale = this.scale;\r\n        if (this.mode === 'fanIn') {\r\n            scale /= Math.max(1, fanIn);\r\n        }\r\n        else if (this.mode === 'fanOut') {\r\n            scale /= Math.max(1, fanOut);\r\n        }\r\n        else {\r\n            scale /= Math.max(1, (fanIn + fanOut) / 2);\r\n        }\r\n        if (this.distribution === 'normal') {\r\n            var stddev = Math.sqrt(scale);\r\n            if (dtype === 'bool') {\r\n                throw new NotImplementedError(this.getClassName() + \" does not support dType bool.\");\r\n            }\r\n            return truncatedNormal(shape, 0, stddev, dtype, this.seed);\r\n        }\r\n        else {\r\n            var limit = Math.sqrt(3 * scale);\r\n            return randomUniform(shape, -limit, limit, dtype);\r\n        }\r\n    };\r\n    VarianceScaling.prototype.getConfig = function () {\r\n        return {\r\n            scale: this.scale,\r\n            mode: this.mode,\r\n            distribution: this.distribution,\r\n            seed: this.seed\r\n        };\r\n    };\r\n    VarianceScaling.className = 'VarianceScaling';\r\n    return VarianceScaling;\r\n}(Initializer));\r\nexport { VarianceScaling };\r\nserialization.SerializationMap.register(VarianceScaling);\r\nvar GlorotUniform = (function (_super) {\r\n    tslib_1.__extends(GlorotUniform, _super);\r\n    function GlorotUniform(config) {\r\n        return _super.call(this, {\r\n            scale: 1.0,\r\n            mode: 'fanAvg',\r\n            distribution: 'uniform',\r\n            seed: config == null ? null : config.seed\r\n        }) || this;\r\n    }\r\n    GlorotUniform.prototype.getClassName = function () {\r\n        return VarianceScaling.className;\r\n    };\r\n    return GlorotUniform;\r\n}(VarianceScaling));\r\nexport { GlorotUniform };\r\nvar GlorotNormal = (function (_super) {\r\n    tslib_1.__extends(GlorotNormal, _super);\r\n    function GlorotNormal(config) {\r\n        return _super.call(this, {\r\n            scale: 1.0,\r\n            mode: 'fanAvg',\r\n            distribution: 'normal',\r\n            seed: config == null ? null : config.seed\r\n        }) || this;\r\n    }\r\n    GlorotNormal.prototype.getClassName = function () {\r\n        return VarianceScaling.className;\r\n    };\r\n    return GlorotNormal;\r\n}(VarianceScaling));\r\nexport { GlorotNormal };\r\nvar HeNormal = (function (_super) {\r\n    tslib_1.__extends(HeNormal, _super);\r\n    function HeNormal(config) {\r\n        return _super.call(this, {\r\n            scale: 2.0,\r\n            mode: 'fanIn',\r\n            distribution: 'normal',\r\n            seed: config == null ? null : config.seed\r\n        }) || this;\r\n    }\r\n    HeNormal.prototype.getClassName = function () {\r\n        return VarianceScaling.className;\r\n    };\r\n    return HeNormal;\r\n}(VarianceScaling));\r\nexport { HeNormal };\r\nvar LeCunNormal = (function (_super) {\r\n    tslib_1.__extends(LeCunNormal, _super);\r\n    function LeCunNormal(config) {\r\n        return _super.call(this, {\r\n            scale: 1.0,\r\n            mode: 'fanIn',\r\n            distribution: 'normal',\r\n            seed: config == null ? null : config.seed\r\n        }) || this;\r\n    }\r\n    LeCunNormal.prototype.getClassName = function () {\r\n        return VarianceScaling.className;\r\n    };\r\n    return LeCunNormal;\r\n}(VarianceScaling));\r\nexport { LeCunNormal };\r\nvar Orthogonal = (function (_super) {\r\n    tslib_1.__extends(Orthogonal, _super);\r\n    function Orthogonal(config) {\r\n        var _this = _super.call(this) || this;\r\n        _this.DEFAULT_GAIN = 1;\r\n        _this.gain = config.gain == null ? _this.DEFAULT_GAIN : config.gain;\r\n        _this.seed = config.seed;\r\n        if (_this.seed != null) {\r\n            throw new NotImplementedError('Random seed is not implemented for Orthogonal Initializer yet.');\r\n        }\r\n        return _this;\r\n    }\r\n    Orthogonal.prototype.apply = function (shape, dtype) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            if (shape.length !== 2) {\r\n                throw new NotImplementedError('The Orthogonal Initializer does not support non-2D shapes yet.');\r\n            }\r\n            if (shape[0] * shape[1] > 2000) {\r\n                console.warn(\"Orthogonal initializer is being called on a matrix with more \" +\r\n                    (\"than 2000 (\" + shape[0] * shape[1] + \") elements: \") +\r\n                    \"Slowness may result.\");\r\n            }\r\n            var normalizedShape = shape[0] > shape[1] ? [shape[1], shape[0]] : shape;\r\n            var a = K.randomNormal(normalizedShape, 0, 1, 'float32');\r\n            var q = linalg.gramSchmidt(a);\r\n            if (shape[0] > shape[1]) {\r\n                q = q.transpose();\r\n            }\r\n            return K.scalarTimesArray(K.getScalar(_this.gain), q);\r\n        });\r\n    };\r\n    Orthogonal.prototype.getConfig = function () {\r\n        return {\r\n            gain: this.gain,\r\n            seed: this.seed,\r\n        };\r\n    };\r\n    Orthogonal.className = 'Orthogonal';\r\n    return Orthogonal;\r\n}(Initializer));\r\nexport { Orthogonal };\r\nserialization.SerializationMap.register(Orthogonal);\r\nexport var INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\r\n    'constant': 'Constant',\r\n    'glorotNormal': 'GlorotNormal',\r\n    'glorotUniform': 'GlorotUniform',\r\n    'heNormal': 'HeNormal',\r\n    'identity': 'Identity',\r\n    'leCunNormal': 'LeCunNormal',\r\n    'ones': 'Ones',\r\n    'orthogonal': 'Orthogonal',\r\n    'randomNormal': 'RandomNormal',\r\n    'randomUniform': 'RandomUniform',\r\n    'truncatedNormal': 'TruncatedNormal',\r\n    'varianceScaling': 'VarianceScaling',\r\n    'zeros': 'Zeros'\r\n};\r\nfunction deserializeInitializer(config, customObjects) {\r\n    if (customObjects === void 0) { customObjects = {}; }\r\n    return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'initializer');\r\n}\r\nexport function serializeInitializer(initializer) {\r\n    return serializeKerasObject(initializer);\r\n}\r\nexport function getInitializer(identifier) {\r\n    if (typeof identifier === 'string') {\r\n        var className = identifier in INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\r\n            INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\r\n            identifier;\r\n        if (className === 'GlorotUniform') {\r\n            return new GlorotUniform();\r\n        }\r\n        else if (className === 'GlorotNormal') {\r\n            return new GlorotNormal();\r\n        }\r\n        else if (className === 'HeNormal') {\r\n            return new HeNormal();\r\n        }\r\n        else if (className === 'LeCunNormal') {\r\n            return new LeCunNormal();\r\n        }\r\n        else {\r\n            var config = { className: className, config: {} };\r\n            return deserializeInitializer(config);\r\n        }\r\n    }\r\n    else if (identifier instanceof Initializer) {\r\n        return identifier;\r\n    }\r\n    else {\r\n        return deserializeInitializer(identifier);\r\n    }\r\n}\r\n//# sourceMappingURL=initializers.js.map","map":"{\"version\":3,\"file\":\"initializers.js\",\"sourceRoot\":\"\",\"sources\":[\"src/initializers.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/initializers.d.ts","text":"import { DataType, serialization, Tensor } from '@tensorflow/tfjs-core';\r\nimport { Shape } from './types';\r\nexport declare type FanMode = 'fanIn' | 'fanOut' | 'fanAvg';\r\nexport declare const VALID_FAN_MODE_VALUES: string[];\r\nexport declare function checkFanMode(value?: string): void;\r\nexport declare type Distribution = 'normal' | 'uniform';\r\nexport declare const VALID_DISTRIBUTION_VALUES: string[];\r\nexport declare function checkDistribution(value?: string): void;\r\nexport declare abstract class Initializer extends serialization.Serializable {\r\n    fromConfigUsesCustomObjects(): boolean;\r\n    abstract apply(shape: Shape, dtype?: DataType): Tensor;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport declare class Zeros extends Initializer {\r\n    static className: string;\r\n    apply(shape: Shape, dtype?: DataType): Tensor;\r\n}\r\nexport declare class Ones extends Initializer {\r\n    static className: string;\r\n    apply(shape: Shape, dtype?: DataType): Tensor;\r\n}\r\nexport interface ConstantConfig {\r\n    value: number;\r\n}\r\nexport declare class Constant extends Initializer {\r\n    static className: string;\r\n    private value;\r\n    constructor(config: ConstantConfig);\r\n    apply(shape: Shape, dtype?: DataType): Tensor;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface RandomUniformConfig {\r\n    minval?: number;\r\n    maxval?: number;\r\n    seed?: number;\r\n}\r\nexport declare class RandomUniform extends Initializer {\r\n    static className: string;\r\n    readonly DEFAULT_MINVAL: number;\r\n    readonly DEFAULT_MAXVAL: number;\r\n    private minval;\r\n    private maxval;\r\n    private seed;\r\n    constructor(config: RandomUniformConfig);\r\n    apply(shape: Shape, dtype?: DataType): Tensor;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface RandomNormalConfig {\r\n    mean?: number;\r\n    stddev?: number;\r\n    seed?: number;\r\n}\r\nexport declare class RandomNormal extends Initializer {\r\n    static className: string;\r\n    readonly DEFAULT_MEAN: number;\r\n    readonly DEFAULT_STDDEV: number;\r\n    private mean;\r\n    private stddev;\r\n    private seed;\r\n    constructor(config: RandomNormalConfig);\r\n    apply(shape: Shape, dtype?: DataType): Tensor;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface TruncatedNormalConfig {\r\n    mean?: number;\r\n    stddev?: number;\r\n    seed?: number;\r\n}\r\nexport declare class TruncatedNormal extends Initializer {\r\n    static className: string;\r\n    readonly DEFAULT_MEAN: number;\r\n    readonly DEFAULT_STDDEV: number;\r\n    private mean;\r\n    private stddev;\r\n    private seed;\r\n    constructor(config: TruncatedNormalConfig);\r\n    apply(shape: Shape, dtype?: DataType): Tensor;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface IdentityConfig {\r\n    gain?: number;\r\n}\r\nexport declare class Identity extends Initializer {\r\n    static className: string;\r\n    private gain;\r\n    constructor(config: IdentityConfig);\r\n    apply(shape: Shape, dtype?: DataType): Tensor;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface VarianceScalingConfig {\r\n    scale: number;\r\n    mode: FanMode;\r\n    distribution: Distribution;\r\n    seed?: number;\r\n}\r\nexport declare class VarianceScaling extends Initializer {\r\n    static className: string;\r\n    private scale;\r\n    private mode;\r\n    private distribution;\r\n    private seed;\r\n    constructor(config: VarianceScalingConfig);\r\n    apply(shape: Shape, dtype?: DataType): Tensor;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface SeedOnlyInitializerConfig {\r\n    seed?: number;\r\n}\r\nexport declare class GlorotUniform extends VarianceScaling {\r\n    constructor(config?: SeedOnlyInitializerConfig);\r\n    getClassName(): string;\r\n}\r\nexport declare class GlorotNormal extends VarianceScaling {\r\n    constructor(config?: SeedOnlyInitializerConfig);\r\n    getClassName(): string;\r\n}\r\nexport declare class HeNormal extends VarianceScaling {\r\n    constructor(config?: SeedOnlyInitializerConfig);\r\n    getClassName(): string;\r\n}\r\nexport declare class LeCunNormal extends VarianceScaling {\r\n    constructor(config?: SeedOnlyInitializerConfig);\r\n    getClassName(): string;\r\n}\r\nexport interface OrthogonalConfig extends SeedOnlyInitializerConfig {\r\n    gain?: number;\r\n}\r\nexport declare class Orthogonal extends Initializer {\r\n    static className: string;\r\n    readonly DEFAULT_GAIN: number;\r\n    protected readonly gain: number;\r\n    protected readonly seed: number;\r\n    constructor(config?: OrthogonalConfig);\r\n    apply(shape: Shape, dtype?: DataType): Tensor;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport declare type InitializerIdentifier = 'constant' | 'glorotNormal' | 'glorotUniform' | 'heNormal' | 'identity' | 'leCunNormal' | 'ones' | 'orthogonal' | 'randomNormal' | 'randomUniform' | 'truncatedNormal' | 'varianceScaling' | 'zeros' | string;\r\nexport declare const INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP: {\r\n    [identifier in InitializerIdentifier]: string;\r\n};\r\nexport declare function serializeInitializer(initializer: Initializer): serialization.ConfigDictValue;\r\nexport declare function getInitializer(identifier: InitializerIdentifier | Initializer | serialization.ConfigDict): Initializer;\r\n"}}
