{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as tfc from '@tensorflow/tfjs-core';\r\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\r\nimport { imageDataFormat } from '../backend/common';\r\nimport * as K from '../backend/tfjs_backend';\r\nimport { checkDataFormat } from '../common';\r\nimport { getConstraint } from '../constraints';\r\nimport { ValueError } from '../errors';\r\nimport { getInitializer } from '../initializers';\r\nimport { getRegularizer } from '../regularizers';\r\nimport { convOutputLength } from '../utils/conv_utils';\r\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/generic_utils';\r\nimport { Conv2D, preprocessConv2DInput } from './convolutional';\r\nexport function depthwiseConv2d(x, depthwiseKernel, strides, padding, dataFormat, dilationRate) {\r\n    if (strides === void 0) { strides = [1, 1]; }\r\n    if (padding === void 0) { padding = 'valid'; }\r\n    return tidy(function () {\r\n        if (dataFormat == null) {\r\n            dataFormat = imageDataFormat();\r\n        }\r\n        checkDataFormat(dataFormat);\r\n        var y = preprocessConv2DInput(x, dataFormat);\r\n        if (x.rank !== 4) {\r\n            throw new ValueError(\"Input for depthwiseConv2d is required to be 4-D, but is instead \" +\r\n                (x.rank + \"-D\"));\r\n        }\r\n        if (depthwiseKernel.rank !== 4) {\r\n            throw new ValueError(\"depthwiseKernel is required to be 4-D, but is instead \" +\r\n                (depthwiseKernel.rank + \"-D\"));\r\n        }\r\n        y = tfc.depthwiseConv2d(y, depthwiseKernel, strides, padding === 'same' ? 'same' : 'valid', 'NHWC', dilationRate);\r\n        if (dataFormat === 'channelsFirst') {\r\n            y = tfc.transpose(y, [0, 3, 1, 2]);\r\n        }\r\n        return y;\r\n    });\r\n}\r\nvar DepthwiseConv2D = (function (_super) {\r\n    tslib_1.__extends(DepthwiseConv2D, _super);\r\n    function DepthwiseConv2D(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.depthwiseKernel = null;\r\n        _this.depthMultiplier =\r\n            config.depthMultiplier == null ? 1 : config.depthMultiplier;\r\n        _this.depthwiseInitializer = getInitializer(config.depthwiseInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\r\n        _this.depthwiseConstraint = getConstraint(config.depthwiseConstraint);\r\n        _this.depthwiseRegularizer = getRegularizer(config.depthwiseRegularizer);\r\n        return _this;\r\n    }\r\n    DepthwiseConv2D.prototype.build = function (inputShape) {\r\n        inputShape = getExactlyOneShape(inputShape);\r\n        if (inputShape.length < 4) {\r\n            throw new ValueError(\"Inputs to DepthwiseConv2D should have rank 4. \" +\r\n                (\"Received input shape: \" + JSON.stringify(inputShape) + \".\"));\r\n        }\r\n        var channelAxis = this.dataFormat === 'channelsFirst' ? 1 : 3;\r\n        if (inputShape[channelAxis] == null || inputShape[channelAxis] < 0) {\r\n            throw new ValueError('The channel dimension of the inputs to DepthwiseConv2D should ' +\r\n                (\"be defined, but is not (\" + inputShape[channelAxis] + \").\"));\r\n        }\r\n        var inputDim = inputShape[channelAxis];\r\n        var depthwiseKernelShape = [\r\n            this.kernelSize[0], this.kernelSize[1], inputDim, this.depthMultiplier\r\n        ];\r\n        this.depthwiseKernel = this.addWeight('depthwise_kernel', depthwiseKernelShape, null, this.depthwiseInitializer, this.depthwiseRegularizer, true, this.depthwiseConstraint);\r\n        if (this.useBias) {\r\n            this.bias = this.addWeight('bias', [inputDim * this.depthMultiplier], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\r\n        }\r\n        else {\r\n            this.bias = null;\r\n        }\r\n        this.built = true;\r\n    };\r\n    DepthwiseConv2D.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            inputs = getExactlyOneTensor(inputs);\r\n            var outputs = depthwiseConv2d(inputs, _this.depthwiseKernel.read(), _this.strides, _this.padding, _this.dataFormat, null);\r\n            if (_this.useBias) {\r\n                outputs = K.biasAdd(outputs, _this.bias.read(), _this.dataFormat);\r\n            }\r\n            if (_this.activation != null) {\r\n                outputs = _this.activation.apply(outputs);\r\n            }\r\n            return outputs;\r\n        });\r\n    };\r\n    DepthwiseConv2D.prototype.computeOutputShape = function (inputShape) {\r\n        inputShape = getExactlyOneShape(inputShape);\r\n        var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\r\n        var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\r\n        var outFilters = this.dataFormat === 'channelsFirst' ?\r\n            inputShape[1] * this.depthMultiplier :\r\n            inputShape[3] * this.depthMultiplier;\r\n        var outRows = convOutputLength(rows, this.kernelSize[0], this.padding, this.strides[0]);\r\n        var outCols = convOutputLength(cols, this.kernelSize[1], this.padding, this.strides[1]);\r\n        if (this.dataFormat === 'channelsFirst') {\r\n            return [inputShape[0], outFilters, outRows, outCols];\r\n        }\r\n        else {\r\n            return [inputShape[0], outRows, outCols, outFilters];\r\n        }\r\n    };\r\n    DepthwiseConv2D.className = 'DepthwiseConv2D';\r\n    return DepthwiseConv2D;\r\n}(Conv2D));\r\nexport { DepthwiseConv2D };\r\nserialization.SerializationMap.register(DepthwiseConv2D);\r\n//# sourceMappingURL=convolutional_depthwise.js.map","map":"{\"version\":3,\"file\":\"convolutional_depthwise.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/layers/convolutional_depthwise.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/layers/convolutional_depthwise.d.ts","text":"import { Tensor } from '@tensorflow/tfjs-core';\r\nimport { DataFormat } from '../common';\r\nimport { Constraint, ConstraintIdentifier } from '../constraints';\r\nimport { Initializer, InitializerIdentifier } from '../initializers';\r\nimport { Regularizer, RegularizerIdentifier } from '../regularizers';\r\nimport { Kwargs, Shape } from '../types';\r\nimport { BaseConvLayerConfig, Conv2D } from './convolutional';\r\nexport declare function depthwiseConv2d(x: Tensor, depthwiseKernel: Tensor, strides?: [number, number], padding?: string, dataFormat?: DataFormat, dilationRate?: [number, number]): Tensor;\r\nexport interface DepthwiseConv2DLayerConfig extends BaseConvLayerConfig {\r\n    kernelSize: number | [number, number];\r\n    depthMultiplier?: number;\r\n    depthwiseInitializer?: InitializerIdentifier | Initializer;\r\n    depthwiseConstraint?: ConstraintIdentifier | Constraint;\r\n    depthwiseRegularizer?: RegularizerIdentifier | Regularizer;\r\n}\r\nexport declare class DepthwiseConv2D extends Conv2D {\r\n    static className: string;\r\n    private readonly depthMultiplier;\r\n    private readonly depthwiseInitializer;\r\n    private readonly depthwiseConstraint;\r\n    private readonly depthwiseRegularizer;\r\n    private depthwiseKernel;\r\n    constructor(config: DepthwiseConv2DLayerConfig);\r\n    build(inputShape: Shape | Shape[]): void;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    computeOutputShape(inputShape: Shape | Shape[]): Shape | Shape[];\r\n}\r\n"}}
