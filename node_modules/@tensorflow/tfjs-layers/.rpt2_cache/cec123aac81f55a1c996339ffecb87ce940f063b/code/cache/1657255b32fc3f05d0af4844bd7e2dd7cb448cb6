{"code":"import * as tfc from '@tensorflow/tfjs-core';\r\nimport { scalar, tensor1d } from '@tensorflow/tfjs-core';\r\nimport { ValueError } from '../errors';\r\nexport function isInteger(x) {\r\n    return x === parseInt(x.toString(), 10);\r\n}\r\nexport function arrayProd(array, begin, end) {\r\n    if (begin == null) {\r\n        begin = 0;\r\n    }\r\n    if (end == null) {\r\n        end = array.length;\r\n    }\r\n    var prod = 1;\r\n    for (var i = begin; i < end; ++i) {\r\n        prod *= array[i];\r\n    }\r\n    return prod;\r\n}\r\nfunction toArray1D(array) {\r\n    array = Array.isArray(array) ? new Float32Array(array) : array;\r\n    return tensor1d(array);\r\n}\r\nexport function min(array) {\r\n    return tfc.min(toArray1D(array)).dataSync()[0];\r\n}\r\nexport function max(array) {\r\n    return tfc.max(toArray1D(array)).dataSync()[0];\r\n}\r\nexport function sum(array) {\r\n    return tfc.sum(toArray1D(array)).dataSync()[0];\r\n}\r\nexport function mean(array) {\r\n    return sum(array) / array.length;\r\n}\r\nexport function variance(array) {\r\n    var demeaned = tfc.sub(toArray1D(array), scalar(mean(array)));\r\n    var sumSquare = tfc.sum(tfc.mulStrict(demeaned, demeaned)).dataSync()[0];\r\n    return sumSquare / array.length;\r\n}\r\nexport function median(array) {\r\n    var arraySorted = array.slice().sort(function (a, b) { return a - b; });\r\n    var lowIdx = Math.floor((arraySorted.length - 1) / 2);\r\n    var highIdx = Math.ceil((arraySorted.length - 1) / 2);\r\n    if (lowIdx === highIdx) {\r\n        return arraySorted[lowIdx];\r\n    }\r\n    return (arraySorted[lowIdx] + arraySorted[highIdx]) / 2;\r\n}\r\nexport function range(begin, end) {\r\n    if (end < begin) {\r\n        throw new ValueError(\"end (\" + end + \") < begin (\" + begin + \") is forbidden.\");\r\n    }\r\n    var out = [];\r\n    for (var i = begin; i < end; ++i) {\r\n        out.push(i);\r\n    }\r\n    return out;\r\n}\r\n//# sourceMappingURL=math_utils.js.map","map":"{\"version\":3,\"file\":\"math_utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/utils/math_utils.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/utils/math_utils.d.ts","text":"export declare type ArrayTypes = Uint8Array | Int32Array | Float32Array;\r\nexport declare function isInteger(x: number): boolean;\r\nexport declare function arrayProd(array: number[] | ArrayTypes, begin?: number, end?: number): number;\r\nexport declare function min(array: number[] | Float32Array): number;\r\nexport declare function max(array: number[] | Float32Array): number;\r\nexport declare function sum(array: number[] | Float32Array): number;\r\nexport declare function mean(array: number[] | Float32Array): number;\r\nexport declare function variance(array: number[] | Float32Array): number;\r\nexport declare function median(array: number[] | Float32Array): number;\r\nexport declare function range(begin: number, end: number): number[];\r\n"}}
