{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc, io, serialization } from '@tensorflow/tfjs-core';\r\nimport * as K from './backend/tfjs_backend';\r\nimport { getSourceInputs, Input, Node } from './engine/topology';\r\nimport { Model } from './engine/training';\r\nimport { RuntimeError, ValueError } from './errors';\r\nimport { deserialize } from './layers/serialization';\r\nimport * as generic_utils from './utils/generic_utils';\r\nimport { convertPythonicToTs } from './utils/serialization_utils';\r\nexport function modelFromJSON(modelAndWeightsConfig, customObjects) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var modelTopology, tsConfig, model, weightValues, uniqueWeightValues, _i, _a, weight, skipMismatches, isNamedTensorMap;\r\n        return tslib_1.__generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    modelTopology = modelAndWeightsConfig.modelTopology;\r\n                    if (modelTopology['model_config'] != null) {\r\n                        modelTopology = modelTopology['model_config'];\r\n                    }\r\n                    tsConfig = convertPythonicToTs(modelTopology);\r\n                    model = deserialize(tsConfig, customObjects);\r\n                    if (!(modelAndWeightsConfig.weightsManifest != null)) return [3, 2];\r\n                    return [4, io.loadWeights(modelAndWeightsConfig.weightsManifest, modelAndWeightsConfig.pathPrefix, model.weights.map(function (weight) { return weight.originalName; }))];\r\n                case 1:\r\n                    weightValues = _b.sent();\r\n                    uniqueWeightValues = {};\r\n                    for (_i = 0, _a = model.weights; _i < _a.length; _i++) {\r\n                        weight = _a[_i];\r\n                        uniqueWeightValues[weight.originalName] =\r\n                            weightValues[weight.originalName];\r\n                    }\r\n                    skipMismatches = null;\r\n                    isNamedTensorMap = true;\r\n                    model.loadWeights(uniqueWeightValues, skipMismatches, isNamedTensorMap);\r\n                    _b.label = 2;\r\n                case 2: return [2, model];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function loadModelInternal(pathOrIOHandler) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var handlers;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            if (typeof pathOrIOHandler === 'string') {\r\n                handlers = io.getLoadHandlers(pathOrIOHandler);\r\n                if (handlers.length === 0) {\r\n                    return [2, loadModelFromPath(pathOrIOHandler)];\r\n                }\r\n                else if (handlers.length > 1) {\r\n                    throw new ValueError(\"Found more than one (\" + handlers.length + \") load handlers for \" +\r\n                        (\"URL '\" + pathOrIOHandler + \"'\"));\r\n                }\r\n                pathOrIOHandler = handlers[0];\r\n            }\r\n            return [2, loadModelFromIOHandler(pathOrIOHandler)];\r\n        });\r\n    });\r\n}\r\nexport function loadModelFromIOHandler(handler, customObjects) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var artifacts, model, skipMismatch, isNamedTensorMap;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (handler.load == null) {\r\n                        throw new ValueError('Cannot proceed with model loading because the IOHandler provided ' +\r\n                            'does not have the `load` method implemented.');\r\n                    }\r\n                    return [4, handler.load()];\r\n                case 1:\r\n                    artifacts = _a.sent();\r\n                    model = deserialize(convertPythonicToTs(artifacts.modelTopology), customObjects);\r\n                    if (artifacts.weightData != null) {\r\n                        if (artifacts.weightSpecs == null) {\r\n                            throw new ValueError('Model artifacts contains weight data, but not weight specs. ' +\r\n                                'Therefore loading of weights cannot proceed.');\r\n                        }\r\n                        skipMismatch = false;\r\n                        isNamedTensorMap = true;\r\n                        model.loadWeights(io.decodeWeights(artifacts.weightData, artifacts.weightSpecs), skipMismatch, isNamedTensorMap);\r\n                    }\r\n                    return [2, model];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function loadModelFromPath(modelConfigPath) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var modelConfigRequest, modelConfig;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4, fetch(modelConfigPath)];\r\n                case 1:\r\n                    modelConfigRequest = _a.sent();\r\n                    return [4, modelConfigRequest.json()];\r\n                case 2:\r\n                    modelConfig = _a.sent();\r\n                    if (modelConfig['modelTopology'] == null) {\r\n                        throw new ValueError('Missing field \"modelTopology\" from model JSON at path' +\r\n                            modelConfigPath);\r\n                    }\r\n                    if (modelConfig['weightsManifest'] == null) {\r\n                        throw new ValueError('Missing field \"weightsManifest\" from model JSON at path' +\r\n                            modelConfigPath);\r\n                    }\r\n                    modelConfig.pathPrefix =\r\n                        modelConfigPath.substring(0, modelConfigPath.lastIndexOf('/'));\r\n                    return [2, modelFromJSON(modelConfig)];\r\n            }\r\n        });\r\n    });\r\n}\r\nvar Sequential = (function (_super) {\r\n    tslib_1.__extends(Sequential, _super);\r\n    function Sequential(config) {\r\n        var _this = _super.call(this, { inputs: [], outputs: [] }) || this;\r\n        config = config || {};\r\n        _this.trainable = true;\r\n        _this._updatable = true;\r\n        _this.built = false;\r\n        _this.name = (config.name != null) ? config.name : K.getUid('sequential_');\r\n        if (config.layers != null) {\r\n            for (var _i = 0, _a = config.layers; _i < _a.length; _i++) {\r\n                var layer = _a[_i];\r\n                _this.add(layer);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Sequential_1 = Sequential;\r\n    Sequential.prototype.add = function (layer) {\r\n        if (this.outputs.length === 0) {\r\n            if (layer.inboundNodes.length === 0) {\r\n                if (layer.batchInputShape == null) {\r\n                    throw new ValueError('The first layer in a Sequential model must ' +\r\n                        'get an `inputShape` or `batchInputShape` argument.');\r\n                }\r\n                var x = Input({\r\n                    batchShape: layer.batchInputShape,\r\n                    dtype: layer.dtype,\r\n                    name: layer.name + '_input'\r\n                });\r\n                layer.apply(x);\r\n            }\r\n            if (layer.inboundNodes.length !== 1) {\r\n                throw new ValueError('A layer added to a Sequential model must not already be ' +\r\n                    (\"connected somewhere else. Model received layer \" + layer.name + \" \") +\r\n                    (\"which has \" + layer.inboundNodes.length + \" pre-existing inbound \") +\r\n                    'connections.');\r\n            }\r\n            if (layer.inboundNodes[0].outputTensors.length !== 1) {\r\n                throw new ValueError('All layers in a Sequential model ' +\r\n                    'should have a single output tensor. ' +\r\n                    'For multi-output layers, ' +\r\n                    'use the functional API.');\r\n            }\r\n            this.outputs = [layer.inboundNodes[0].outputTensors[0]];\r\n            this.inputs = getSourceInputs(this.outputs[0]);\r\n            new Node({\r\n                outboundLayer: this,\r\n                inboundLayers: [],\r\n                nodeIndices: [],\r\n                tensorIndices: [],\r\n                inputTensors: this.inputs,\r\n                outputTensors: this.outputs,\r\n                inputMasks: generic_utils.pyListRepeat(null, this.inputs.length),\r\n                outputMasks: [null],\r\n                inputShapes: this.inputs.map(function (x) { return x.shape; }),\r\n                outputShapes: this.outputs[0].shape\r\n            });\r\n        }\r\n        else {\r\n            var outputTensor = layer.apply(this.outputs[0]);\r\n            if (Array.isArray(outputTensor)) {\r\n                throw new TypeError('All layers in a Sequential model ' +\r\n                    'should have a single output tensor. ' +\r\n                    'For multi-output layers, ' +\r\n                    'use the functional API.');\r\n            }\r\n            this.outputs = [outputTensor];\r\n            this.inboundNodes[0].outputTensors = this.outputs;\r\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\r\n        }\r\n        this.layers.push(layer);\r\n        this.built = false;\r\n    };\r\n    Sequential.prototype.pop = function () {\r\n        if (this.layers.length === 0) {\r\n            throw new TypeError('There are no layers in the model.');\r\n        }\r\n        this.layers.pop();\r\n        if (this.layers.length === 0) {\r\n            this.outputs = [];\r\n            this.inboundNodes = [];\r\n            this.outboundNodes = [];\r\n        }\r\n        else {\r\n            var lastLayerIndex = this.layers.length - 1;\r\n            this.layers[lastLayerIndex].outboundNodes = [];\r\n            this.outputs = [this.layers[lastLayerIndex].output];\r\n            this.inboundNodes[0].outputTensors = this.outputs;\r\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\r\n        }\r\n    };\r\n    Sequential.prototype.call = function (inputs, kwargs) {\r\n        if (this.model == null) {\r\n            this.build();\r\n        }\r\n        return this.model.call(inputs, kwargs);\r\n    };\r\n    Sequential.prototype.build = function (inputShape) {\r\n        generic_utils.getExactlyOneShape(inputShape);\r\n        if (this.inputs.length === 0 || this.outputs.length === 0) {\r\n            throw new TypeError('Sequential model cannot be built: model is empty.' +\r\n                ' Add some layers first.');\r\n        }\r\n        this.model = new Model({\r\n            inputs: this.inputs,\r\n            outputs: this.outputs[0],\r\n            name: this.name + '_model'\r\n        });\r\n        this.model.trainable = this.trainable;\r\n        this.model.updatable = this.updatable;\r\n        this.supportsMasking = this.model.supportsMasking;\r\n        this.inputLayers = this.model.inputLayers;\r\n        this.inputLayersNodeIndices = this.model.inputLayersNodeIndices;\r\n        this.inputLayersTensorIndices = this.model.inputLayersTensorIndices;\r\n        this.outputLayers = this.model.outputLayers;\r\n        this.outputLayersNodeIndices = this.model.outputLayersNodeIndices;\r\n        this.outputLayersTensorIndices = this.model.outputLayersTensorIndices;\r\n        this.nodesByDepth = this.model.nodesByDepth;\r\n        this.containerNodes = this.model.containerNodes;\r\n        this.outputNames = this.model.outputNames;\r\n        this.inputNames = this.model.inputNames;\r\n        this.built = true;\r\n    };\r\n    Sequential.prototype.setWeights = function (weights) {\r\n        if (this.model == null) {\r\n            this.build();\r\n        }\r\n        this.model.setWeights(weights);\r\n    };\r\n    Object.defineProperty(Sequential.prototype, \"updatable\", {\r\n        get: function () {\r\n            return this._updatable;\r\n        },\r\n        set: function (value) {\r\n            if (this.built) {\r\n                this.model.updatable = value;\r\n            }\r\n            this._updatable = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Sequential.prototype.evaluate = function (x, y, config) {\r\n        if (config === void 0) { config = {}; }\r\n        if (!this.built) {\r\n            throw new RuntimeError('The model needs to be compiled before being used.');\r\n        }\r\n        return this.model.evaluate(x, y, config);\r\n    };\r\n    Sequential.prototype.predict = function (x, config) {\r\n        if (config === void 0) { config = {}; }\r\n        if (this.model == null) {\r\n            this.build();\r\n        }\r\n        return this.model.predict(x, config);\r\n    };\r\n    Sequential.prototype.predictOnBatch = function (x) {\r\n        if (this.model == null) {\r\n            this.build();\r\n        }\r\n        return this.model.predictOnBatch(x);\r\n    };\r\n    Sequential.prototype.compile = function (config) {\r\n        this.build();\r\n        this.model.compile(config);\r\n        this.optimizer = this.model.optimizer;\r\n        this.loss = this.model.loss;\r\n        this.metrics = this.model.metrics;\r\n        this.metricsTensors = this.model.metricsTensors;\r\n        this.metricsNames = this.model.metricsNames;\r\n    };\r\n    Sequential.prototype.fit = function (x, y, config) {\r\n        if (config === void 0) { config = {}; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (!this.built) {\r\n                    throw new RuntimeError('The model needs to be compiled before ' +\r\n                        'being used.');\r\n                }\r\n                return [2, this.model.fit(x, y, config)];\r\n            });\r\n        });\r\n    };\r\n    Sequential.fromConfig = function (cls, config) {\r\n        var model = new cls({});\r\n        if (!(model instanceof Sequential_1)) {\r\n            throw new ValueError(\"Sequential.fromConfig called on non-Sequential input: \" + model);\r\n        }\r\n        if (!(config instanceof Array)) {\r\n            throw new ValueError(\"Sequential.fromConfig called without an array of configs\");\r\n        }\r\n        if (!(config[0].className != null) || config[0]['className'] === 'Merge') {\r\n            throw new ValueError('Legacy serialization format not supported yet.');\r\n        }\r\n        for (var _i = 0, _a = config; _i < _a.length; _i++) {\r\n            var conf = _a[_i];\r\n            var layer = deserialize(conf);\r\n            model.add(layer);\r\n        }\r\n        return model;\r\n    };\r\n    Sequential.prototype.getConfig = function () {\r\n        var config = [];\r\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\r\n            var layer = _a[_i];\r\n            config.push({\r\n                className: layer.getClassName(),\r\n                config: layer.getConfig(),\r\n            });\r\n        }\r\n        return config;\r\n    };\r\n    Sequential.className = 'Sequential';\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Classes' })\r\n    ], Sequential.prototype, \"add\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\r\n    ], Sequential.prototype, \"evaluate\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [1] })\r\n    ], Sequential.prototype, \"predict\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\r\n    ], Sequential.prototype, \"fit\", null);\r\n    Sequential = Sequential_1 = tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Classes' })\r\n    ], Sequential);\r\n    return Sequential;\r\n    var Sequential_1;\r\n}(Model));\r\nexport { Sequential };\r\nserialization.SerializationMap.register(Sequential);\r\n//# sourceMappingURL=models.js.map","map":"{\"version\":3,\"file\":\"models.js\",\"sourceRoot\":\"\",\"sources\":[\"src/models.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/models.d.ts","text":"import { io, Scalar, serialization, Tensor } from '@tensorflow/tfjs-core';\r\nimport { History } from './callbacks';\r\nimport { Layer } from './engine/topology';\r\nimport { Model, ModelCompileConfig, ModelEvaluateConfig, ModelFitConfig, ModelPredictConfig } from './engine/training';\r\nimport { Kwargs, Shape } from './types';\r\nimport { JsonDict } from './types';\r\nexport declare function modelFromJSON(modelAndWeightsConfig: ModelAndWeightsConfig, customObjects?: serialization.ConfigDict): Promise<Model>;\r\nexport interface ModelAndWeightsConfig {\r\n    modelTopology: JsonDict;\r\n    weightsManifest?: io.WeightsManifestConfig;\r\n    pathPrefix?: string;\r\n}\r\nexport declare function loadModelInternal(pathOrIOHandler: string | io.IOHandler): Promise<Model>;\r\nexport declare function loadModelFromIOHandler(handler: io.IOHandler, customObjects?: serialization.ConfigDict): Promise<Model>;\r\nexport declare function loadModelFromPath(modelConfigPath: string): Promise<Model>;\r\nexport interface SequentialConfig {\r\n    layers?: Layer[];\r\n    name?: string;\r\n}\r\nexport declare class Sequential extends Model {\r\n    static className: string;\r\n    private model;\r\n    private _updatable;\r\n    constructor(config?: SequentialConfig);\r\n    add(layer: Layer): void;\r\n    pop(): void;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    build(inputShape?: Shape | Shape[]): void;\r\n    setWeights(weights: Tensor[]): void;\r\n    updatable: boolean;\r\n    evaluate(x: Tensor | Tensor[], y: Tensor | Tensor[], config?: ModelEvaluateConfig): Scalar | Scalar[];\r\n    predict(x: Tensor | Tensor[], config?: ModelPredictConfig): Tensor | Tensor[];\r\n    predictOnBatch(x: Tensor): Tensor | Tensor[];\r\n    compile(config: ModelCompileConfig): void;\r\n    fit(x: Tensor | Tensor[] | {\r\n        [inputName: string]: Tensor;\r\n    }, y: Tensor | Tensor[] | {\r\n        [inputName: string]: Tensor;\r\n    }, config?: ModelFitConfig): Promise<History>;\r\n    static fromConfig<T extends serialization.Serializable>(cls: serialization.SerializableConstructor<T>, config: serialization.ConfigDict): T;\r\n    getConfig(): any;\r\n}\r\n"}}
