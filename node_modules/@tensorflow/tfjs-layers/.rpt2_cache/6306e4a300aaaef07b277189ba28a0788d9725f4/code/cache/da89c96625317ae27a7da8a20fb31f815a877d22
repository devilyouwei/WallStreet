{"code":"import * as tslib_1 from \"tslib\";\r\nimport { doc } from '@tensorflow/tfjs-core';\r\nimport { MaxNorm, MinMaxNorm, NonNeg, UnitNorm } from './constraints';\r\nimport { Input, InputLayer, Layer } from './engine/topology';\r\nimport { Model } from './engine/training';\r\nimport { Constant, GlorotNormal, GlorotUniform, HeNormal, Identity, LeCunNormal, Ones, Orthogonal, RandomNormal, RandomUniform, TruncatedNormal, VarianceScaling, Zeros } from './initializers';\r\nimport { ELU, LeakyReLU, Softmax, ThresholdedReLU } from './layers/advanced_activations';\r\nimport { Conv1D, Conv2D, Conv2DTranspose, Cropping2D, SeparableConv2D, UpSampling2D } from './layers/convolutional';\r\nimport { DepthwiseConv2D } from './layers/convolutional_depthwise';\r\nimport { Activation, Dense, Dropout, Flatten, RepeatVector, Reshape } from './layers/core';\r\nimport { Embedding } from './layers/embeddings';\r\nimport { Add, Average, Concatenate, Maximum, Minimum, Multiply } from './layers/merge';\r\nimport { BatchNormalization } from './layers/normalization';\r\nimport { ZeroPadding2D } from './layers/padding';\r\nimport { AveragePooling1D, AveragePooling2D, GlobalAveragePooling1D, GlobalAveragePooling2D, GlobalMaxPooling1D, GlobalMaxPooling2D, MaxPooling1D, MaxPooling2D } from './layers/pooling';\r\nimport { GRU, GRUCell, LSTM, LSTMCell, RNN, RNNCell, SimpleRNN, SimpleRNNCell, StackedRNNCells } from './layers/recurrent';\r\nimport { Bidirectional, TimeDistributed } from './layers/wrappers';\r\nimport { categoricalCrossentropy, cosineProximity, meanAbsoluteError, meanAbsolutePercentageError, meanSquaredError } from './losses';\r\nimport { binaryAccuracy, binaryCrossentropy, categoricalAccuracy } from './metrics';\r\nimport { loadModelInternal, Sequential } from './models';\r\nimport { l1, L1L2, l2 } from './regularizers';\r\nvar ModelExports = (function () {\r\n    function ModelExports() {\r\n    }\r\n    ModelExports.model = function (config) {\r\n        return new Model(config);\r\n    };\r\n    ModelExports.sequential = function (config) {\r\n        return new Sequential(config);\r\n    };\r\n    ModelExports.loadModel = function (pathOrIOHandler) {\r\n        return loadModelInternal(pathOrIOHandler);\r\n    };\r\n    ModelExports.input = function (config) {\r\n        return Input(config);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Creation', configParamIndices: [0] })\r\n    ], ModelExports, \"model\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Models', subheading: 'Creation', configParamIndices: [0] })\r\n    ], ModelExports, \"sequential\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Models',\r\n            subheading: 'Loading',\r\n            useDocsFrom: 'loadModelInternal'\r\n        })\r\n    ], ModelExports, \"loadModel\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Models',\r\n            subheading: 'Inputs',\r\n            useDocsFrom: 'Input',\r\n            configParamIndices: [0]\r\n        })\r\n    ], ModelExports, \"input\", null);\r\n    return ModelExports;\r\n}());\r\nexport { ModelExports };\r\nvar LayerExports = (function () {\r\n    function LayerExports() {\r\n    }\r\n    LayerExports.inputLayer = function (config) {\r\n        return new InputLayer(config);\r\n    };\r\n    LayerExports.elu = function (config) {\r\n        return new ELU(config);\r\n    };\r\n    LayerExports.leakyReLU = function (config) {\r\n        return new LeakyReLU(config);\r\n    };\r\n    LayerExports.softmax = function (config) {\r\n        return new Softmax(config);\r\n    };\r\n    LayerExports.thresholdedReLU = function (config) {\r\n        return new ThresholdedReLU(config);\r\n    };\r\n    LayerExports.conv1d = function (config) {\r\n        return new Conv1D(config);\r\n    };\r\n    LayerExports.conv2d = function (config) {\r\n        return new Conv2D(config);\r\n    };\r\n    LayerExports.conv2dTranspose = function (config) {\r\n        return new Conv2DTranspose(config);\r\n    };\r\n    LayerExports.separableConv2d = function (config) {\r\n        return new SeparableConv2D(config);\r\n    };\r\n    LayerExports.cropping2D = function (config) {\r\n        return new Cropping2D(config);\r\n    };\r\n    LayerExports.upSampling2d = function (config) {\r\n        return new UpSampling2D(config);\r\n    };\r\n    LayerExports.depthwiseConv2d = function (config) {\r\n        return new DepthwiseConv2D(config);\r\n    };\r\n    LayerExports.activation = function (config) {\r\n        return new Activation(config);\r\n    };\r\n    LayerExports.dense = function (config) {\r\n        return new Dense(config);\r\n    };\r\n    LayerExports.dropout = function (config) {\r\n        return new Dropout(config);\r\n    };\r\n    LayerExports.flatten = function (config) {\r\n        return new Flatten(config);\r\n    };\r\n    LayerExports.repeatVector = function (config) {\r\n        return new RepeatVector(config);\r\n    };\r\n    LayerExports.reshape = function (config) {\r\n        return new Reshape(config);\r\n    };\r\n    LayerExports.embedding = function (config) {\r\n        return new Embedding(config);\r\n    };\r\n    LayerExports.add = function (config) {\r\n        return new Add(config);\r\n    };\r\n    LayerExports.average = function (config) {\r\n        return new Average(config);\r\n    };\r\n    LayerExports.concatenate = function (config) {\r\n        return new Concatenate(config);\r\n    };\r\n    LayerExports.maximum = function (config) {\r\n        return new Maximum(config);\r\n    };\r\n    LayerExports.minimum = function (config) {\r\n        return new Minimum(config);\r\n    };\r\n    LayerExports.multiply = function (config) {\r\n        return new Multiply(config);\r\n    };\r\n    LayerExports.batchNormalization = function (config) {\r\n        return new BatchNormalization(config);\r\n    };\r\n    LayerExports.zeroPadding2d = function (config) {\r\n        return new ZeroPadding2D(config);\r\n    };\r\n    LayerExports.averagePooling1d = function (config) {\r\n        return new AveragePooling1D(config);\r\n    };\r\n    LayerExports.avgPool1d = function (config) {\r\n        return LayerExports.averagePooling1d(config);\r\n    };\r\n    LayerExports.avgPooling1d = function (config) {\r\n        return LayerExports.averagePooling1d(config);\r\n    };\r\n    LayerExports.averagePooling2d = function (config) {\r\n        return new AveragePooling2D(config);\r\n    };\r\n    LayerExports.avgPool2d = function (config) {\r\n        return LayerExports.averagePooling2d(config);\r\n    };\r\n    LayerExports.avgPooling2d = function (config) {\r\n        return LayerExports.averagePooling2d(config);\r\n    };\r\n    LayerExports.globalAveragePooling1d = function (config) {\r\n        return new GlobalAveragePooling1D(config);\r\n    };\r\n    LayerExports.globalAveragePooling2d = function (config) {\r\n        return new GlobalAveragePooling2D(config);\r\n    };\r\n    LayerExports.globalMaxPooling1d = function (config) {\r\n        return new GlobalMaxPooling1D(config);\r\n    };\r\n    LayerExports.globalMaxPooling2d = function (config) {\r\n        return new GlobalMaxPooling2D(config);\r\n    };\r\n    LayerExports.maxPooling1d = function (config) {\r\n        return new MaxPooling1D(config);\r\n    };\r\n    LayerExports.maxPooling2d = function (config) {\r\n        return new MaxPooling2D(config);\r\n    };\r\n    LayerExports.gru = function (config) {\r\n        return new GRU(config);\r\n    };\r\n    LayerExports.gruCell = function (config) {\r\n        return new GRUCell(config);\r\n    };\r\n    LayerExports.lstm = function (config) {\r\n        return new LSTM(config);\r\n    };\r\n    LayerExports.lstmCell = function (config) {\r\n        return new LSTMCell(config);\r\n    };\r\n    LayerExports.simpleRNN = function (config) {\r\n        return new SimpleRNN(config);\r\n    };\r\n    LayerExports.simpleRNNCell = function (config) {\r\n        return new SimpleRNNCell(config);\r\n    };\r\n    LayerExports.rnn = function (config) {\r\n        return new RNN(config);\r\n    };\r\n    LayerExports.stackedRNNCells = function (config) {\r\n        return new StackedRNNCells(config);\r\n    };\r\n    LayerExports.bidirectional = function (config) {\r\n        return new Bidirectional(config);\r\n    };\r\n    LayerExports.timeDistributed = function (config) {\r\n        return new TimeDistributed(config);\r\n    };\r\n    LayerExports.Layer = Layer;\r\n    LayerExports.RNN = RNN;\r\n    LayerExports.RNNCell = RNNCell;\r\n    LayerExports.input = ModelExports.input;\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Inputs',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'InputLayer',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"inputLayer\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Advanced Activation',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'ELU',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"elu\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Advanced Activation',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'LeakyReLU',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"leakyReLU\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Advanced Activation',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Softmax',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"softmax\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Advanced Activation',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'ThresholdedReLU',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"thresholdedReLU\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Convolutional',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Conv1D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"conv1d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Convolutional',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Conv2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"conv2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Convolutional',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Conv2DTranspose',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"conv2dTranspose\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Convolutional',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'SeparableConv2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"separableConv2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Convolutional',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Cropping2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"cropping2D\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Convolutional',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'UpSampling2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"upSampling2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Convolutional',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'DepthwiseConv2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"depthwiseConv2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Basic',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Activation',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"activation\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Basic',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Dense',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"dense\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Basic',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Dropout',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"dropout\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Basic',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Flatten',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"flatten\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Basic',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'RepeatVector',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"repeatVector\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Basic',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Reshape',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"reshape\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Basic',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Embedding',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"embedding\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Merge',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Add',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"add\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Merge',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Average',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"average\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Merge',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Concatenate',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"concatenate\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Merge',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Maximum',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"maximum\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Merge',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Minimum',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"minimum\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Merge',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Multiply',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"multiply\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Normalization',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'BatchNormalization',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"batchNormalization\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Padding',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'ZeroPadding2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"zeroPadding2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Pooling',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'AveragePooling1D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"averagePooling1d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Pooling',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'AveragePooling2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"averagePooling2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Pooling',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'GlobalAveragePooling1D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"globalAveragePooling1d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Pooling',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'GlobalAveragePooling2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"globalAveragePooling2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Pooling',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'GlobalMaxPooling1D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"globalMaxPooling1d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Pooling',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'GlobalMaxPooling2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"globalMaxPooling2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Pooling',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'MaxPooling1D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"maxPooling1d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Pooling',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'MaxPooling2D',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"maxPooling2d\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Recurrent',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'GRU',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"gru\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Recurrent',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'GRUCell',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"gruCell\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Recurrent',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'LSTM',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"lstm\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Recurrent',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'LSTMCell',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"lstmCell\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Recurrent',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'SimpleRNN',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"simpleRNN\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Recurrent',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'SimpleRNNCell',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"simpleRNNCell\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Recurrent',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'RNN',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"rnn\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Recurrent',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'RNN',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"stackedRNNCells\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Wrapper',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'Bidirectional',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"bidirectional\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Layers',\r\n            subheading: 'Wrapper',\r\n            namespace: 'layers',\r\n            useDocsFrom: 'TimeDistributed',\r\n            configParamIndices: [0]\r\n        })\r\n    ], LayerExports, \"timeDistributed\", null);\r\n    return LayerExports;\r\n}());\r\nexport { LayerExports };\r\nvar ConstraintExports = (function () {\r\n    function ConstraintExports() {\r\n    }\r\n    ConstraintExports.maxNorm = function (config) {\r\n        return new MaxNorm(config);\r\n    };\r\n    ConstraintExports.unitNorm = function (config) {\r\n        return new UnitNorm(config);\r\n    };\r\n    ConstraintExports.nonNeg = function () {\r\n        return new NonNeg();\r\n    };\r\n    ConstraintExports.minMaxNorm = function (config) {\r\n        return new MinMaxNorm(config);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Constraints',\r\n            namespace: 'constraints',\r\n            useDocsFrom: 'MaxNorm',\r\n            configParamIndices: [0]\r\n        })\r\n    ], ConstraintExports, \"maxNorm\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Constraints',\r\n            namespace: 'constraints',\r\n            useDocsFrom: 'UnitNorm',\r\n            configParamIndices: [0]\r\n        })\r\n    ], ConstraintExports, \"unitNorm\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Constraints', namespace: 'constraints', useDocsFrom: 'NonNeg' })\r\n    ], ConstraintExports, \"nonNeg\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Constraints',\r\n            namespace: 'constraints',\r\n            useDocsFrom: 'MinMaxNormConfig',\r\n            configParamIndices: [0]\r\n        })\r\n    ], ConstraintExports, \"minMaxNorm\", null);\r\n    return ConstraintExports;\r\n}());\r\nexport { ConstraintExports };\r\nvar InitializerExports = (function () {\r\n    function InitializerExports() {\r\n    }\r\n    InitializerExports.zeros = function () {\r\n        return new Zeros();\r\n    };\r\n    InitializerExports.ones = function () {\r\n        return new Ones();\r\n    };\r\n    InitializerExports.constant = function (config) {\r\n        return new Constant(config);\r\n    };\r\n    InitializerExports.randomUniform = function (config) {\r\n        return new RandomUniform(config);\r\n    };\r\n    InitializerExports.randomNormal = function (config) {\r\n        return new RandomNormal(config);\r\n    };\r\n    InitializerExports.truncatedNormal = function (config) {\r\n        return new TruncatedNormal(config);\r\n    };\r\n    InitializerExports.identity = function (config) {\r\n        return new Identity(config);\r\n    };\r\n    InitializerExports.varianceScaling = function (config) {\r\n        return new VarianceScaling(config);\r\n    };\r\n    InitializerExports.glorotUniform = function (config) {\r\n        return new GlorotUniform(config);\r\n    };\r\n    InitializerExports.glorotNormal = function (config) {\r\n        return new GlorotNormal(config);\r\n    };\r\n    InitializerExports.heNormal = function (config) {\r\n        return new HeNormal(config);\r\n    };\r\n    InitializerExports.leCunNormal = function (config) {\r\n        return new LeCunNormal(config);\r\n    };\r\n    InitializerExports.orthogonal = function (config) {\r\n        return new Orthogonal(config);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'Zeros'\r\n        })\r\n    ], InitializerExports, \"zeros\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Initializers', namespace: 'initializers', useDocsFrom: 'Ones' })\r\n    ], InitializerExports, \"ones\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'Constant',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"constant\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'RandomUniform',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"randomUniform\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'RandomNormal',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"randomNormal\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'TruncatedNormal',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"truncatedNormal\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'Identity',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"identity\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'VarianceScaling',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"varianceScaling\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'GlorotUniform',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"glorotUniform\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'GlorotNormal',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"glorotNormal\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'HeNormal',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"heNormal\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'LeCunNormal',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"leCunNormal\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Initializers',\r\n            namespace: 'initializers',\r\n            useDocsFrom: 'Orthogonal',\r\n            configParamIndices: [0]\r\n        })\r\n    ], InitializerExports, \"orthogonal\", null);\r\n    return InitializerExports;\r\n}());\r\nexport { InitializerExports };\r\nvar MetricExports = (function () {\r\n    function MetricExports() {\r\n    }\r\n    MetricExports.binaryAccuracy = function (yTrue, yPred) {\r\n        return binaryAccuracy(yTrue, yPred);\r\n    };\r\n    MetricExports.binaryCrossentropy = function (yTrue, yPred) {\r\n        return binaryCrossentropy(yTrue, yPred);\r\n    };\r\n    MetricExports.categoricalAccuracy = function (yTrue, yPred) {\r\n        return categoricalAccuracy(yTrue, yPred);\r\n    };\r\n    MetricExports.categoricalCrossentropy = function (yTrue, yPred) {\r\n        return categoricalCrossentropy(yTrue, yPred);\r\n    };\r\n    MetricExports.cosineProximity = function (yTrue, yPred) {\r\n        return cosineProximity(yTrue, yPred);\r\n    };\r\n    MetricExports.prototype.meanAbsoluteError = function (yTrue, yPred) {\r\n        return meanAbsoluteError(yTrue, yPred);\r\n    };\r\n    MetricExports.prototype.meanAbsolutePercentageError = function (yTrue, yPred) {\r\n        return meanAbsolutePercentageError(yTrue, yPred);\r\n    };\r\n    MetricExports.prototype.MAPE = function (yTrue, yPred) {\r\n        return meanAbsolutePercentageError(yTrue, yPred);\r\n    };\r\n    MetricExports.prototype.mape = function (yTrue, yPred) {\r\n        return meanAbsolutePercentageError(yTrue, yPred);\r\n    };\r\n    MetricExports.meanSquaredError = function (yTrue, yPred) {\r\n        return meanSquaredError(yTrue, yPred);\r\n    };\r\n    MetricExports.MSE = function (yTrue, yPred) {\r\n        return meanSquaredError(yTrue, yPred);\r\n    };\r\n    MetricExports.mse = function (yTrue, yPred) {\r\n        return meanSquaredError(yTrue, yPred);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Metrics',\r\n            namespace: 'metrics',\r\n            useDocsFrom: 'meanAbsoluteError'\r\n        })\r\n    ], MetricExports.prototype, \"meanAbsoluteError\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Metrics',\r\n            namespace: 'metrics',\r\n            useDocsFrom: 'meanAbsolutePercentageError'\r\n        })\r\n    ], MetricExports.prototype, \"meanAbsolutePercentageError\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Metrics', namespace: 'metrics', useDocsFrom: 'binaryAccuracy' })\r\n    ], MetricExports, \"binaryAccuracy\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Metrics',\r\n            namespace: 'metrics',\r\n            useDocsFrom: 'binaryCrossentropy'\r\n        })\r\n    ], MetricExports, \"binaryCrossentropy\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Metrics',\r\n            namespace: 'metrics',\r\n            useDocsFrom: 'categoricalAccuracy'\r\n        })\r\n    ], MetricExports, \"categoricalAccuracy\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Metrics',\r\n            namespace: 'metrics',\r\n            useDocsFrom: 'categoricalCrossentropy'\r\n        })\r\n    ], MetricExports, \"categoricalCrossentropy\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Metrics',\r\n            namespace: 'metrics',\r\n            useDocsFrom: 'cosineProximity'\r\n        })\r\n    ], MetricExports, \"cosineProximity\", null);\r\n    tslib_1.__decorate([\r\n        doc({\r\n            heading: 'Metrics',\r\n            namespace: 'metrics',\r\n            useDocsFrom: 'meanSquaredError'\r\n        })\r\n    ], MetricExports, \"meanSquaredError\", null);\r\n    return MetricExports;\r\n}());\r\nexport { MetricExports };\r\nvar RegularizerExports = (function () {\r\n    function RegularizerExports() {\r\n    }\r\n    RegularizerExports.l1l2 = function (config) {\r\n        return new L1L2(config);\r\n    };\r\n    RegularizerExports.l1 = function (config) {\r\n        return l1(config);\r\n    };\r\n    RegularizerExports.l2 = function (config) {\r\n        return l2(config);\r\n    };\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Regularizers', namespace: 'regularizers', useDocsFrom: 'L1L2' })\r\n    ], RegularizerExports, \"l1l2\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Regularizers', namespace: 'regularizers', useDocsFrom: 'L1L2' })\r\n    ], RegularizerExports, \"l1\", null);\r\n    tslib_1.__decorate([\r\n        doc({ heading: 'Regularizers', namespace: 'regularizers', useDocsFrom: 'L1L2' })\r\n    ], RegularizerExports, \"l2\", null);\r\n    return RegularizerExports;\r\n}());\r\nexport { RegularizerExports };\r\n//# sourceMappingURL=exports.js.map","map":"{\"version\":3,\"file\":\"exports.js\",\"sourceRoot\":\"\",\"sources\":[\"src/exports.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/exports.d.ts","text":"import { io, Tensor } from '@tensorflow/tfjs-core';\r\nimport { Constraint, MaxNormConfig, MinMaxNormConfig, UnitNormConfig } from './constraints';\r\nimport { ContainerConfig, InputConfig, InputLayerConfig, Layer, LayerConfig } from './engine/topology';\r\nimport { Model } from './engine/training';\r\nimport { ConstantConfig, IdentityConfig, Initializer, OrthogonalConfig, RandomNormalConfig, RandomUniformConfig, SeedOnlyInitializerConfig, TruncatedNormalConfig, VarianceScalingConfig, Zeros } from './initializers';\r\nimport { ELULayerConfig, LeakyReLULayerConfig, SoftmaxLayerConfig, ThresholdedReLULayerConfig } from './layers/advanced_activations';\r\nimport { ConvLayerConfig, Cropping2DLayerConfig, SeparableConvLayerConfig, UpSampling2DLayerConfig } from './layers/convolutional';\r\nimport { DepthwiseConv2DLayerConfig } from './layers/convolutional_depthwise';\r\nimport { ActivationLayerConfig, DenseLayerConfig, DropoutLayerConfig, RepeatVectorLayerConfig, ReshapeLayerConfig } from './layers/core';\r\nimport { EmbeddingLayerConfig } from './layers/embeddings';\r\nimport { ConcatenateLayerConfig } from './layers/merge';\r\nimport { BatchNormalizationLayerConfig } from './layers/normalization';\r\nimport { ZeroPadding2DLayerConfig } from './layers/padding';\r\nimport { GlobalPooling2DLayerConfig, Pooling1DLayerConfig, Pooling2DLayerConfig } from './layers/pooling';\r\nimport { GRUCellLayerConfig, GRULayerConfig, LSTMCellLayerConfig, LSTMLayerConfig, RNN, RNNCell, RNNLayerConfig, SimpleRNNCellLayerConfig, SimpleRNNLayerConfig, StackedRNNCellsConfig } from './layers/recurrent';\r\nimport { BidirectionalLayerConfig, Wrapper, WrapperLayerConfig } from './layers/wrappers';\r\nimport { Sequential, SequentialConfig } from './models';\r\nimport { L1Config, L1L2Config, L2Config, Regularizer } from './regularizers';\r\nimport { SymbolicTensor } from './types';\r\nexport declare class ModelExports {\r\n    static model(config: ContainerConfig): Model;\r\n    static sequential(config?: SequentialConfig): Sequential;\r\n    static loadModel(pathOrIOHandler: string | io.IOHandler): Promise<Model>;\r\n    static input(config: InputConfig): SymbolicTensor;\r\n}\r\nexport declare class LayerExports {\r\n    static Layer: typeof Layer;\r\n    static RNN: typeof RNN;\r\n    static RNNCell: typeof RNNCell;\r\n    static inputLayer(config: InputLayerConfig): Layer;\r\n    static input: typeof ModelExports.input;\r\n    static elu(config?: ELULayerConfig): Layer;\r\n    static leakyReLU(config?: LeakyReLULayerConfig): Layer;\r\n    static softmax(config?: SoftmaxLayerConfig): Layer;\r\n    static thresholdedReLU(config?: ThresholdedReLULayerConfig): Layer;\r\n    static conv1d(config: ConvLayerConfig): Layer;\r\n    static conv2d(config: ConvLayerConfig): Layer;\r\n    static conv2dTranspose(config: ConvLayerConfig): Layer;\r\n    static separableConv2d(config: SeparableConvLayerConfig): Layer;\r\n    static cropping2D(config: Cropping2DLayerConfig): Layer;\r\n    static upSampling2d(config: UpSampling2DLayerConfig): Layer;\r\n    static depthwiseConv2d(config: DepthwiseConv2DLayerConfig): Layer;\r\n    static activation(config: ActivationLayerConfig): Layer;\r\n    static dense(config: DenseLayerConfig): Layer;\r\n    static dropout(config: DropoutLayerConfig): Layer;\r\n    static flatten(config?: LayerConfig): Layer;\r\n    static repeatVector(config: RepeatVectorLayerConfig): Layer;\r\n    static reshape(config: ReshapeLayerConfig): Layer;\r\n    static embedding(config: EmbeddingLayerConfig): Layer;\r\n    static add(config?: LayerConfig): Layer;\r\n    static average(config?: LayerConfig): Layer;\r\n    static concatenate(config?: ConcatenateLayerConfig): Layer;\r\n    static maximum(config?: LayerConfig): Layer;\r\n    static minimum(config?: LayerConfig): Layer;\r\n    static multiply(config?: LayerConfig): Layer;\r\n    static batchNormalization(config: BatchNormalizationLayerConfig): Layer;\r\n    static zeroPadding2d(config?: ZeroPadding2DLayerConfig): Layer;\r\n    static averagePooling1d(config: Pooling1DLayerConfig): Layer;\r\n    static avgPool1d(config: Pooling1DLayerConfig): Layer;\r\n    static avgPooling1d(config: Pooling1DLayerConfig): Layer;\r\n    static averagePooling2d(config: Pooling2DLayerConfig): Layer;\r\n    static avgPool2d(config: Pooling2DLayerConfig): Layer;\r\n    static avgPooling2d(config: Pooling2DLayerConfig): Layer;\r\n    static globalAveragePooling1d(config: LayerConfig): Layer;\r\n    static globalAveragePooling2d(config: GlobalPooling2DLayerConfig): Layer;\r\n    static globalMaxPooling1d(config: LayerConfig): Layer;\r\n    static globalMaxPooling2d(config: GlobalPooling2DLayerConfig): Layer;\r\n    static maxPooling1d(config: Pooling1DLayerConfig): Layer;\r\n    static maxPooling2d(config: Pooling2DLayerConfig): Layer;\r\n    static gru(config: GRULayerConfig): Layer;\r\n    static gruCell(config: GRUCellLayerConfig): RNNCell;\r\n    static lstm(config: LSTMLayerConfig): Layer;\r\n    static lstmCell(config: LSTMCellLayerConfig): RNNCell;\r\n    static simpleRNN(config: SimpleRNNLayerConfig): Layer;\r\n    static simpleRNNCell(config: SimpleRNNCellLayerConfig): RNNCell;\r\n    static rnn(config: RNNLayerConfig): Layer;\r\n    static stackedRNNCells(config: StackedRNNCellsConfig): RNNCell;\r\n    static bidirectional(config: BidirectionalLayerConfig): Wrapper;\r\n    static timeDistributed(config: WrapperLayerConfig): Layer;\r\n}\r\nexport declare class ConstraintExports {\r\n    static maxNorm(config: MaxNormConfig): Constraint;\r\n    static unitNorm(config: UnitNormConfig): Constraint;\r\n    static nonNeg(): Constraint;\r\n    static minMaxNorm(config: MinMaxNormConfig): Constraint;\r\n}\r\nexport declare class InitializerExports {\r\n    static zeros(): Zeros;\r\n    static ones(): Initializer;\r\n    static constant(config: ConstantConfig): Initializer;\r\n    static randomUniform(config: RandomUniformConfig): Initializer;\r\n    static randomNormal(config: RandomNormalConfig): Initializer;\r\n    static truncatedNormal(config: TruncatedNormalConfig): Initializer;\r\n    static identity(config: IdentityConfig): Initializer;\r\n    static varianceScaling(config: VarianceScalingConfig): Initializer;\r\n    static glorotUniform(config: SeedOnlyInitializerConfig): Initializer;\r\n    static glorotNormal(config: SeedOnlyInitializerConfig): Initializer;\r\n    static heNormal(config: SeedOnlyInitializerConfig): Initializer;\r\n    static leCunNormal(config: SeedOnlyInitializerConfig): Initializer;\r\n    static orthogonal(config: OrthogonalConfig): Initializer;\r\n}\r\nexport declare class MetricExports {\r\n    static binaryAccuracy(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    static binaryCrossentropy(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    static categoricalAccuracy(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    static categoricalCrossentropy(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    static cosineProximity(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    meanAbsoluteError(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    meanAbsolutePercentageError(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    MAPE(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    mape(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    static meanSquaredError(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    static MSE(yTrue: Tensor, yPred: Tensor): Tensor;\r\n    static mse(yTrue: Tensor, yPred: Tensor): Tensor;\r\n}\r\nexport declare class RegularizerExports {\r\n    static l1l2(config?: L1L2Config): Regularizer;\r\n    static l1(config?: L1Config): Regularizer;\r\n    static l2(config?: L2Config): Regularizer;\r\n}\r\n"}}
