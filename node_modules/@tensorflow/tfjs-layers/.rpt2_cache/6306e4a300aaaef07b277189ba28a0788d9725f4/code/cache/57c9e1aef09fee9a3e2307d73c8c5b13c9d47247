{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as tfc from '@tensorflow/tfjs-core';\r\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\r\nimport { imageDataFormat } from '../backend/common';\r\nimport * as K from '../backend/tfjs_backend';\r\nimport { checkDataFormat, checkPaddingMode, checkPoolMode } from '../common';\r\nimport { InputSpec } from '../engine/topology';\r\nimport { Layer } from '../engine/topology';\r\nimport { NotImplementedError, ValueError } from '../errors';\r\nimport { convOutputLength } from '../utils/conv_utils';\r\nimport * as generic_utils from '../utils/generic_utils';\r\nimport { preprocessConv2DInput } from './convolutional';\r\nexport function pool2d(x, poolSize, strides, padding, dataFormat, poolMode) {\r\n    return tidy(function () {\r\n        checkDataFormat(dataFormat);\r\n        checkPoolMode(poolMode);\r\n        checkPaddingMode(padding);\r\n        if (strides == null) {\r\n            strides = [1, 1];\r\n        }\r\n        if (padding == null) {\r\n            padding = 'valid';\r\n        }\r\n        if (dataFormat == null) {\r\n            dataFormat = imageDataFormat();\r\n        }\r\n        if (poolMode == null) {\r\n            poolMode = 'max';\r\n        }\r\n        x = preprocessConv2DInput(x, dataFormat);\r\n        var y;\r\n        var paddingString = (padding === 'same') ? 'same' : 'valid';\r\n        if (poolMode === 'max') {\r\n            y = tfc.maxPool(x, poolSize, strides, paddingString);\r\n        }\r\n        else {\r\n            y = tfc.avgPool(x, poolSize, strides, paddingString);\r\n        }\r\n        if (dataFormat === 'channelsFirst') {\r\n            y = tfc.transpose(y, [0, 3, 1, 2]);\r\n        }\r\n        return y;\r\n    });\r\n}\r\nvar Pooling1D = (function (_super) {\r\n    tslib_1.__extends(Pooling1D, _super);\r\n    function Pooling1D(config) {\r\n        var _this = this;\r\n        if (config.poolSize == null) {\r\n            config.poolSize = 2;\r\n        }\r\n        _this = _super.call(this, config) || this;\r\n        if (typeof config.poolSize === 'number') {\r\n            _this.poolSize = [config.poolSize];\r\n        }\r\n        else if (Array.isArray(config.poolSize) &&\r\n            config.poolSize.length === 1 &&\r\n            typeof config.poolSize[0] === 'number') {\r\n            _this.poolSize = config.poolSize;\r\n        }\r\n        else {\r\n            throw new ValueError(\"poolSize for 1D convolutional layer must be a number or an \" +\r\n                \"Array of a single number, but received \" +\r\n                (\"\" + JSON.stringify(config.poolSize)));\r\n        }\r\n        if (config.strides == null) {\r\n            _this.strides = _this.poolSize;\r\n        }\r\n        else {\r\n            if (typeof config.strides === 'number') {\r\n                _this.strides = [config.strides];\r\n            }\r\n            else if (Array.isArray(config.strides) &&\r\n                config.strides.length === 1 &&\r\n                typeof config.strides[0] === 'number') {\r\n                _this.strides = config.strides;\r\n            }\r\n            else {\r\n                throw new ValueError(\"strides for 1D convolutional layer must be a number or an \" +\r\n                    \"Array of a single number, but received \" +\r\n                    (\"\" + JSON.stringify(config.strides)));\r\n            }\r\n        }\r\n        _this.padding = config.padding == null ? 'valid' : config.padding;\r\n        checkPaddingMode(_this.padding);\r\n        _this.inputSpec = [new InputSpec({ ndim: 3 })];\r\n        return _this;\r\n    }\r\n    Pooling1D.prototype.computeOutputShape = function (inputShape) {\r\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\r\n        var length = convOutputLength(inputShape[1], this.poolSize[0], this.padding, this.strides[0]);\r\n        return [inputShape[0], length, inputShape[2]];\r\n    };\r\n    Pooling1D.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            _this.invokeCallHook(inputs, kwargs);\r\n            inputs = K.expandDims(generic_utils.getExactlyOneTensor(inputs), 2);\r\n            var output = _this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), [_this.poolSize[0], 1], [_this.strides[0], 1], _this.padding, 'channelsLast');\r\n            return tfc.squeeze(output, [2]);\r\n        });\r\n    };\r\n    Pooling1D.prototype.getConfig = function () {\r\n        var config = {\r\n            poolSize: this.poolSize,\r\n            padding: this.padding,\r\n            strides: this.strides,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    return Pooling1D;\r\n}(Layer));\r\nexport { Pooling1D };\r\nvar MaxPooling1D = (function (_super) {\r\n    tslib_1.__extends(MaxPooling1D, _super);\r\n    function MaxPooling1D(config) {\r\n        return _super.call(this, config) || this;\r\n    }\r\n    MaxPooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\r\n        checkDataFormat(dataFormat);\r\n        checkPaddingMode(padding);\r\n        return pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\r\n    };\r\n    MaxPooling1D.className = 'MaxPooling1D';\r\n    return MaxPooling1D;\r\n}(Pooling1D));\r\nexport { MaxPooling1D };\r\nserialization.SerializationMap.register(MaxPooling1D);\r\nvar AveragePooling1D = (function (_super) {\r\n    tslib_1.__extends(AveragePooling1D, _super);\r\n    function AveragePooling1D(config) {\r\n        return _super.call(this, config) || this;\r\n    }\r\n    AveragePooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\r\n        checkDataFormat(dataFormat);\r\n        checkPaddingMode(padding);\r\n        return pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\r\n    };\r\n    AveragePooling1D.className = 'AveragePooling1D';\r\n    return AveragePooling1D;\r\n}(Pooling1D));\r\nexport { AveragePooling1D };\r\nserialization.SerializationMap.register(AveragePooling1D);\r\nvar Pooling2D = (function (_super) {\r\n    tslib_1.__extends(Pooling2D, _super);\r\n    function Pooling2D(config) {\r\n        var _this = this;\r\n        if (config.poolSize == null) {\r\n            config.poolSize = [2, 2];\r\n        }\r\n        _this = _super.call(this, config) || this;\r\n        _this.poolSize = Array.isArray(config.poolSize) ?\r\n            config.poolSize :\r\n            [config.poolSize, config.poolSize];\r\n        _this.strides = config.strides == null ? _this.poolSize : config.strides;\r\n        _this.padding = config.padding == null ? 'valid' : config.padding;\r\n        _this.dataFormat =\r\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\r\n        checkDataFormat(_this.dataFormat);\r\n        checkPaddingMode(_this.padding);\r\n        _this.inputSpec = [new InputSpec({ ndim: 4 })];\r\n        return _this;\r\n    }\r\n    Pooling2D.prototype.computeOutputShape = function (inputShape) {\r\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\r\n        var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\r\n        var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\r\n        rows =\r\n            convOutputLength(rows, this.poolSize[0], this.padding, this.strides[0]);\r\n        cols =\r\n            convOutputLength(cols, this.poolSize[1], this.padding, this.strides[1]);\r\n        if (this.dataFormat === 'channelsFirst') {\r\n            return [inputShape[0], inputShape[1], rows, cols];\r\n        }\r\n        else {\r\n            return [inputShape[0], rows, cols, inputShape[3]];\r\n        }\r\n    };\r\n    Pooling2D.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            _this.invokeCallHook(inputs, kwargs);\r\n            return _this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), _this.poolSize, _this.strides, _this.padding, _this.dataFormat);\r\n        });\r\n    };\r\n    Pooling2D.prototype.getConfig = function () {\r\n        var config = {\r\n            poolSize: this.poolSize,\r\n            padding: this.padding,\r\n            strides: this.strides,\r\n            dataFormat: this.dataFormat\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    return Pooling2D;\r\n}(Layer));\r\nexport { Pooling2D };\r\nvar MaxPooling2D = (function (_super) {\r\n    tslib_1.__extends(MaxPooling2D, _super);\r\n    function MaxPooling2D(config) {\r\n        return _super.call(this, config) || this;\r\n    }\r\n    MaxPooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\r\n        checkDataFormat(dataFormat);\r\n        checkPaddingMode(padding);\r\n        return pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\r\n    };\r\n    MaxPooling2D.className = 'MaxPooling2D';\r\n    return MaxPooling2D;\r\n}(Pooling2D));\r\nexport { MaxPooling2D };\r\nserialization.SerializationMap.register(MaxPooling2D);\r\nvar AveragePooling2D = (function (_super) {\r\n    tslib_1.__extends(AveragePooling2D, _super);\r\n    function AveragePooling2D(config) {\r\n        return _super.call(this, config) || this;\r\n    }\r\n    AveragePooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\r\n        checkDataFormat(dataFormat);\r\n        checkPaddingMode(padding);\r\n        return pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\r\n    };\r\n    AveragePooling2D.className = 'AveragePooling2D';\r\n    return AveragePooling2D;\r\n}(Pooling2D));\r\nexport { AveragePooling2D };\r\nserialization.SerializationMap.register(AveragePooling2D);\r\nvar GlobalPooling1D = (function (_super) {\r\n    tslib_1.__extends(GlobalPooling1D, _super);\r\n    function GlobalPooling1D(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.inputSpec = [new InputSpec({ ndim: 3 })];\r\n        return _this;\r\n    }\r\n    GlobalPooling1D.prototype.computeOutputShape = function (inputShape) {\r\n        return [inputShape[0], inputShape[2]];\r\n    };\r\n    GlobalPooling1D.prototype.call = function (inputs, kwargs) {\r\n        throw new NotImplementedError();\r\n    };\r\n    return GlobalPooling1D;\r\n}(Layer));\r\nexport { GlobalPooling1D };\r\nvar GlobalAveragePooling1D = (function (_super) {\r\n    tslib_1.__extends(GlobalAveragePooling1D, _super);\r\n    function GlobalAveragePooling1D(config) {\r\n        return _super.call(this, config) || this;\r\n    }\r\n    GlobalAveragePooling1D.prototype.call = function (inputs, kwargs) {\r\n        return tidy(function () {\r\n            var input = generic_utils.getExactlyOneTensor(inputs);\r\n            return tfc.mean(input, 1);\r\n        });\r\n    };\r\n    GlobalAveragePooling1D.className = 'GlobalAveragePooling1D';\r\n    return GlobalAveragePooling1D;\r\n}(GlobalPooling1D));\r\nexport { GlobalAveragePooling1D };\r\nserialization.SerializationMap.register(GlobalAveragePooling1D);\r\nvar GlobalMaxPooling1D = (function (_super) {\r\n    tslib_1.__extends(GlobalMaxPooling1D, _super);\r\n    function GlobalMaxPooling1D(config) {\r\n        return _super.call(this, config) || this;\r\n    }\r\n    GlobalMaxPooling1D.prototype.call = function (inputs, kwargs) {\r\n        return tidy(function () {\r\n            var input = generic_utils.getExactlyOneTensor(inputs);\r\n            return tfc.max(input, 1);\r\n        });\r\n    };\r\n    GlobalMaxPooling1D.className = 'GlobalMaxPooling1D';\r\n    return GlobalMaxPooling1D;\r\n}(GlobalPooling1D));\r\nexport { GlobalMaxPooling1D };\r\nserialization.SerializationMap.register(GlobalMaxPooling1D);\r\nvar GlobalPooling2D = (function (_super) {\r\n    tslib_1.__extends(GlobalPooling2D, _super);\r\n    function GlobalPooling2D(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.dataFormat =\r\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\r\n        checkDataFormat(_this.dataFormat);\r\n        _this.inputSpec = [new InputSpec({ ndim: 4 })];\r\n        return _this;\r\n    }\r\n    GlobalPooling2D.prototype.computeOutputShape = function (inputShape) {\r\n        inputShape = inputShape;\r\n        if (this.dataFormat === 'channelsLast') {\r\n            return [inputShape[0], inputShape[3]];\r\n        }\r\n        else {\r\n            return [inputShape[0], inputShape[1]];\r\n        }\r\n    };\r\n    GlobalPooling2D.prototype.call = function (inputs, kwargs) {\r\n        throw new NotImplementedError();\r\n    };\r\n    GlobalPooling2D.prototype.getConfig = function () {\r\n        var config = { dataFormat: this.dataFormat };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    return GlobalPooling2D;\r\n}(Layer));\r\nexport { GlobalPooling2D };\r\nvar GlobalAveragePooling2D = (function (_super) {\r\n    tslib_1.__extends(GlobalAveragePooling2D, _super);\r\n    function GlobalAveragePooling2D() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GlobalAveragePooling2D.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            var input = generic_utils.getExactlyOneTensor(inputs);\r\n            if (_this.dataFormat === 'channelsLast') {\r\n                return tfc.mean(input, [1, 2]);\r\n            }\r\n            else {\r\n                return tfc.mean(input, [2, 3]);\r\n            }\r\n        });\r\n    };\r\n    GlobalAveragePooling2D.className = 'GlobalAveragePooling2D';\r\n    return GlobalAveragePooling2D;\r\n}(GlobalPooling2D));\r\nexport { GlobalAveragePooling2D };\r\nserialization.SerializationMap.register(GlobalAveragePooling2D);\r\nvar GlobalMaxPooling2D = (function (_super) {\r\n    tslib_1.__extends(GlobalMaxPooling2D, _super);\r\n    function GlobalMaxPooling2D() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    GlobalMaxPooling2D.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            var input = generic_utils.getExactlyOneTensor(inputs);\r\n            if (_this.dataFormat === 'channelsLast') {\r\n                return tfc.max(input, [1, 2]);\r\n            }\r\n            else {\r\n                return tfc.max(input, [2, 3]);\r\n            }\r\n        });\r\n    };\r\n    GlobalMaxPooling2D.className = 'GlobalMaxPooling2D';\r\n    return GlobalMaxPooling2D;\r\n}(GlobalPooling2D));\r\nexport { GlobalMaxPooling2D };\r\nserialization.SerializationMap.register(GlobalMaxPooling2D);\r\n//# sourceMappingURL=pooling.js.map","map":"{\"version\":3,\"file\":\"pooling.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/layers/pooling.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/layers/pooling.d.ts","text":"import { serialization, Tensor } from '@tensorflow/tfjs-core';\r\nimport { DataFormat, PaddingMode, PoolMode } from '../common';\r\nimport { Layer, LayerConfig } from '../engine/topology';\r\nimport { Kwargs, Shape } from '../types';\r\nexport declare function pool2d(x: Tensor, poolSize: [number, number], strides?: [number, number], padding?: PaddingMode, dataFormat?: DataFormat, poolMode?: PoolMode): Tensor;\r\nexport interface Pooling1DLayerConfig extends LayerConfig {\r\n    poolSize?: number;\r\n    strides?: number;\r\n    padding?: PaddingMode;\r\n}\r\nexport declare abstract class Pooling1D extends Layer {\r\n    protected readonly poolSize: [number];\r\n    protected readonly strides: [number];\r\n    protected readonly padding: PaddingMode;\r\n    constructor(config: Pooling1DLayerConfig);\r\n    computeOutputShape(inputShape: Shape | Shape[]): Shape | Shape[];\r\n    protected abstract poolingFunction(inputs: Tensor, poolSize: [number, number], strides: [number, number], padding: PaddingMode, dataFormat: DataFormat): Tensor;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport declare class MaxPooling1D extends Pooling1D {\r\n    static className: string;\r\n    constructor(config: Pooling1DLayerConfig);\r\n    protected poolingFunction(inputs: Tensor, poolSize: [number, number], strides: [number, number], padding: PaddingMode, dataFormat: DataFormat): Tensor;\r\n}\r\nexport declare class AveragePooling1D extends Pooling1D {\r\n    static className: string;\r\n    constructor(config: Pooling1DLayerConfig);\r\n    protected poolingFunction(inputs: Tensor, poolSize: [number, number], strides: [number, number], padding: PaddingMode, dataFormat: DataFormat): Tensor;\r\n}\r\nexport interface Pooling2DLayerConfig extends LayerConfig {\r\n    poolSize?: number | [number, number];\r\n    strides?: [number, number];\r\n    padding?: PaddingMode;\r\n    dataFormat?: DataFormat;\r\n}\r\nexport declare abstract class Pooling2D extends Layer {\r\n    protected readonly poolSize: [number, number];\r\n    protected readonly strides: [number, number];\r\n    protected readonly padding: PaddingMode;\r\n    protected readonly dataFormat: DataFormat;\r\n    constructor(config: Pooling2DLayerConfig);\r\n    computeOutputShape(inputShape: Shape | Shape[]): Shape | Shape[];\r\n    protected abstract poolingFunction(inputs: Tensor, poolSize: [number, number], strides: [number, number], padding: PaddingMode, dataFormat: DataFormat): Tensor;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport declare class MaxPooling2D extends Pooling2D {\r\n    static className: string;\r\n    constructor(config: Pooling2DLayerConfig);\r\n    protected poolingFunction(inputs: Tensor, poolSize: [number, number], strides: [number, number], padding: PaddingMode, dataFormat: DataFormat): Tensor;\r\n}\r\nexport declare class AveragePooling2D extends Pooling2D {\r\n    static className: string;\r\n    constructor(config: Pooling2DLayerConfig);\r\n    protected poolingFunction(inputs: Tensor, poolSize: [number, number], strides: [number, number], padding: PaddingMode, dataFormat: DataFormat): Tensor;\r\n}\r\nexport declare abstract class GlobalPooling1D extends Layer {\r\n    constructor(config: LayerConfig);\r\n    computeOutputShape(inputShape: Shape): Shape;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n}\r\nexport declare class GlobalAveragePooling1D extends GlobalPooling1D {\r\n    static className: string;\r\n    constructor(config: LayerConfig);\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n}\r\nexport declare class GlobalMaxPooling1D extends GlobalPooling1D {\r\n    static className: string;\r\n    constructor(config: LayerConfig);\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n}\r\nexport interface GlobalPooling2DLayerConfig extends LayerConfig {\r\n    dataFormat?: DataFormat;\r\n}\r\nexport declare abstract class GlobalPooling2D extends Layer {\r\n    protected dataFormat: DataFormat;\r\n    constructor(config: GlobalPooling2DLayerConfig);\r\n    computeOutputShape(inputShape: Shape | Shape[]): Shape | Shape[];\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport declare class GlobalAveragePooling2D extends GlobalPooling2D {\r\n    static className: string;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n}\r\nexport declare class GlobalMaxPooling2D extends GlobalPooling2D {\r\n    static className: string;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n}\r\n"}}
