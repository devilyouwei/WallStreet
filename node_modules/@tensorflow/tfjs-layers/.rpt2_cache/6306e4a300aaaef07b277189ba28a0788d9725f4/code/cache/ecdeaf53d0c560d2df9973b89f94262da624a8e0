{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as tfc from '@tensorflow/tfjs-core';\r\nimport { serialization, tidy } from '@tensorflow/tfjs-core';\r\nimport * as K from './backend/tfjs_backend';\r\nimport { deserializeKerasObject } from './utils/generic_utils';\r\nvar Activation = (function (_super) {\r\n    tslib_1.__extends(Activation, _super);\r\n    function Activation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Activation.prototype.getConfig = function () {\r\n        return {};\r\n    };\r\n    return Activation;\r\n}(serialization.Serializable));\r\nexport { Activation };\r\nvar Elu = (function (_super) {\r\n    tslib_1.__extends(Elu, _super);\r\n    function Elu() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Elu.prototype.apply = function (x, alpha) {\r\n        if (alpha === void 0) { alpha = 1; }\r\n        return K.elu(x, alpha);\r\n    };\r\n    Elu.className = 'elu';\r\n    return Elu;\r\n}(Activation));\r\nexport { Elu };\r\nserialization.SerializationMap.register(Elu);\r\nvar Selu = (function (_super) {\r\n    tslib_1.__extends(Selu, _super);\r\n    function Selu() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Selu.prototype.apply = function (x) {\r\n        return tfc.selu(x);\r\n    };\r\n    Selu.className = 'selu';\r\n    return Selu;\r\n}(Activation));\r\nexport { Selu };\r\nserialization.SerializationMap.register(Selu);\r\nvar Relu = (function (_super) {\r\n    tslib_1.__extends(Relu, _super);\r\n    function Relu() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Relu.prototype.apply = function (x) {\r\n        return tfc.relu(x);\r\n    };\r\n    Relu.className = 'relu';\r\n    return Relu;\r\n}(Activation));\r\nexport { Relu };\r\nserialization.SerializationMap.register(Relu);\r\nvar Relu6 = (function (_super) {\r\n    tslib_1.__extends(Relu6, _super);\r\n    function Relu6() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Relu6.prototype.apply = function (x) {\r\n        return tidy(function () { return tfc.minimum(K.getScalar(6.0), tfc.relu(x)); });\r\n    };\r\n    Relu6.className = 'relu6';\r\n    return Relu6;\r\n}(Activation));\r\nexport { Relu6 };\r\nserialization.SerializationMap.register(Relu6);\r\nvar Linear = (function (_super) {\r\n    tslib_1.__extends(Linear, _super);\r\n    function Linear() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Linear.prototype.apply = function (x) {\r\n        return x;\r\n    };\r\n    Linear.className = 'linear';\r\n    return Linear;\r\n}(Activation));\r\nexport { Linear };\r\nserialization.SerializationMap.register(Linear);\r\nvar Sigmoid = (function (_super) {\r\n    tslib_1.__extends(Sigmoid, _super);\r\n    function Sigmoid() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Sigmoid.prototype.apply = function (x) {\r\n        return tfc.sigmoid(x);\r\n    };\r\n    Sigmoid.className = 'sigmoid';\r\n    return Sigmoid;\r\n}(Activation));\r\nexport { Sigmoid };\r\nserialization.SerializationMap.register(Sigmoid);\r\nvar HardSigmoid = (function (_super) {\r\n    tslib_1.__extends(HardSigmoid, _super);\r\n    function HardSigmoid() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HardSigmoid.prototype.apply = function (x) {\r\n        return K.hardSigmoid(x);\r\n    };\r\n    HardSigmoid.className = 'hardSigmoid';\r\n    return HardSigmoid;\r\n}(Activation));\r\nexport { HardSigmoid };\r\nserialization.SerializationMap.register(HardSigmoid);\r\nvar Softplus = (function (_super) {\r\n    tslib_1.__extends(Softplus, _super);\r\n    function Softplus() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Softplus.prototype.apply = function (x) {\r\n        return tfc.softplus(x);\r\n    };\r\n    Softplus.className = 'softplus';\r\n    return Softplus;\r\n}(Activation));\r\nexport { Softplus };\r\nserialization.SerializationMap.register(Softplus);\r\nvar Softsign = (function (_super) {\r\n    tslib_1.__extends(Softsign, _super);\r\n    function Softsign() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Softsign.prototype.apply = function (x) {\r\n        return K.softsign(x);\r\n    };\r\n    Softsign.className = 'softsign';\r\n    return Softsign;\r\n}(Activation));\r\nexport { Softsign };\r\nserialization.SerializationMap.register(Softsign);\r\nvar Tanh = (function (_super) {\r\n    tslib_1.__extends(Tanh, _super);\r\n    function Tanh() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Tanh.prototype.apply = function (x) {\r\n        return tfc.tanh(x);\r\n    };\r\n    Tanh.className = 'tanh';\r\n    return Tanh;\r\n}(Activation));\r\nexport { Tanh };\r\nserialization.SerializationMap.register(Tanh);\r\nvar Softmax = (function (_super) {\r\n    tslib_1.__extends(Softmax, _super);\r\n    function Softmax() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Softmax.prototype.apply = function (x, axis) {\r\n        if (axis === void 0) { axis = (-1); }\r\n        return tfc.softmax(x, axis);\r\n    };\r\n    Softmax.className = 'softmax';\r\n    return Softmax;\r\n}(Activation));\r\nexport { Softmax };\r\nserialization.SerializationMap.register(Softmax);\r\nexport function serializeActivation(activation) {\r\n    return activation.getClassName();\r\n}\r\nexport function deserializeActivation(config, customObjects) {\r\n    if (customObjects === void 0) { customObjects = {}; }\r\n    return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'activation');\r\n}\r\nexport function getActivation(identifier) {\r\n    if (identifier == null) {\r\n        var config = { className: 'linear', config: {} };\r\n        return deserializeActivation(config);\r\n    }\r\n    if (typeof identifier === 'string') {\r\n        var config = { className: identifier, config: {} };\r\n        return deserializeActivation(config);\r\n    }\r\n    else if (identifier instanceof Activation) {\r\n        return identifier;\r\n    }\r\n    else {\r\n        return deserializeActivation(identifier);\r\n    }\r\n}\r\n//# sourceMappingURL=activations.js.map","map":"{\"version\":3,\"file\":\"activations.js\",\"sourceRoot\":\"\",\"sources\":[\"src/activations.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/activations.d.ts","text":"import { serialization, Tensor } from '@tensorflow/tfjs-core';\r\nexport declare abstract class Activation extends serialization.Serializable {\r\n    abstract apply(tensor: Tensor, axis?: number): Tensor;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport declare type ActivationIdentifier = 'elu' | 'hardSigmoid' | 'linear' | 'relu' | 'relu6' | 'selu' | 'sigmoid' | 'softmax' | 'softplus' | 'softsign' | 'tanh' | string;\r\nexport declare class Elu extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor, alpha?: number): Tensor;\r\n}\r\nexport declare class Selu extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor): Tensor;\r\n}\r\nexport declare class Relu extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor): Tensor;\r\n}\r\nexport declare class Relu6 extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor): Tensor;\r\n}\r\nexport declare class Linear extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor): Tensor;\r\n}\r\nexport declare class Sigmoid extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor): Tensor;\r\n}\r\nexport declare class HardSigmoid extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor): Tensor;\r\n}\r\nexport declare class Softplus extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor): Tensor;\r\n}\r\nexport declare class Softsign extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor): Tensor;\r\n}\r\nexport declare class Tanh extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor): Tensor;\r\n}\r\nexport declare class Softmax extends Activation {\r\n    static readonly className: string;\r\n    apply(x: Tensor, axis?: number): Tensor;\r\n}\r\nexport declare function serializeActivation(activation: Activation): string;\r\nexport declare function deserializeActivation(config: serialization.ConfigDict, customObjects?: serialization.ConfigDict): Activation;\r\nexport declare function getActivation(identifier: ActivationIdentifier | serialization.ConfigDict | Activation): Activation;\r\n"}}
