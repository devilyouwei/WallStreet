{"code":"import * as tslib_1 from \"tslib\";\r\nimport { serialization, tidy, util } from '@tensorflow/tfjs-core';\r\nimport { getActivation, serializeActivation } from '../activations';\r\nimport * as K from '../backend/tfjs_backend';\r\nimport { getConstraint, serializeConstraint } from '../constraints';\r\nimport { Layer } from '../engine/topology';\r\nimport { NotImplementedError, ValueError } from '../errors';\r\nimport { getInitializer, serializeInitializer } from '../initializers';\r\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\r\nimport * as generic_utils from '../utils/generic_utils';\r\nimport { getExactlyOneTensor } from '../utils/generic_utils';\r\nimport * as math_utils from '../utils/math_utils';\r\nvar Dropout = (function (_super) {\r\n    tslib_1.__extends(Dropout, _super);\r\n    function Dropout(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.rate = Math.max(Math.min(config.rate, 1), 0);\r\n        _this.rateScalar = K.getScalar(_this.rate);\r\n        _this.noiseShape = config.noiseShape;\r\n        _this.seed = config.seed;\r\n        if (_this.seed != null) {\r\n            throw new NotImplementedError('Non-default seed is not implemented in Dropout layer yet: ' +\r\n                _this.seed);\r\n        }\r\n        _this.supportsMasking = true;\r\n        return _this;\r\n    }\r\n    Dropout.prototype.getNoiseShape = function (input) {\r\n        if (this.noiseShape == null) {\r\n            return this.noiseShape;\r\n        }\r\n        var inputShape = input.shape;\r\n        var noiseShape = [];\r\n        for (var i = 0; i < this.noiseShape.length; ++i) {\r\n            noiseShape.push(this.noiseShape[i] == null ? inputShape[i] : this.noiseShape[i]);\r\n        }\r\n        return noiseShape;\r\n    };\r\n    Dropout.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            _this.invokeCallHook(inputs, kwargs);\r\n            var input = generic_utils.getExactlyOneTensor(inputs);\r\n            if (_this.noiseShape != null &&\r\n                !util.arraysEqual(input.shape, _this.noiseShape)) {\r\n                throw new NotImplementedError('Non-default noise shape is not implemented in Dropout ' +\r\n                    'layer yet: ' + JSON.stringify(_this.noiseShape));\r\n            }\r\n            if (0 < _this.rate && _this.rate < 1) {\r\n                var training = kwargs['training'] == null ? false : kwargs['training'];\r\n                var noiseShape_1 = _this.getNoiseShape(input);\r\n                var output = K.inTrainPhase(function () { return K.dropout(input, _this.rateScalar, noiseShape_1, _this.seed); }, function () { return input; }, training);\r\n                return output;\r\n            }\r\n            return inputs;\r\n        });\r\n    };\r\n    Dropout.prototype.getConfig = function () {\r\n        var config = {\r\n            rate: this.rate,\r\n            noiseShape: this.noiseShape,\r\n            seed: this.seed,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    Dropout.className = 'Dropout';\r\n    return Dropout;\r\n}(Layer));\r\nexport { Dropout };\r\nserialization.SerializationMap.register(Dropout);\r\nvar Dense = (function (_super) {\r\n    tslib_1.__extends(Dense, _super);\r\n    function Dense(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.activation = null;\r\n        _this.useBias = true;\r\n        _this.kernel = null;\r\n        _this.bias = null;\r\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\r\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\r\n        if (config.batchInputShape == null && config.inputShape == null &&\r\n            config.inputDim != null) {\r\n            var batchSize = null;\r\n            if (config.batchSize != null) {\r\n                batchSize = config.batchSize;\r\n            }\r\n            _this.batchInputShape = [batchSize, config.inputDim];\r\n        }\r\n        _this.units = config.units;\r\n        _this.activation = getActivation(config.activation);\r\n        if (config.useBias != null) {\r\n            _this.useBias = config.useBias;\r\n        }\r\n        _this.kernelInitializer = getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\r\n        _this.biasInitializer =\r\n            getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\r\n        _this.kernelConstraint = getConstraint(config.kernelConstraint);\r\n        _this.biasConstraint = getConstraint(config.biasConstraint);\r\n        _this.kernelRegularizer = getRegularizer(config.kernelRegularizer);\r\n        _this.biasRegularizer = getRegularizer(config.biasRegularizer);\r\n        _this.activityRegularizer = getRegularizer(config.activityRegularizer);\r\n        _this.inputSpec = [{ minNDim: 2 }];\r\n        return _this;\r\n    }\r\n    Dense.prototype.build = function (inputShape) {\r\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\r\n        var inputLastDim = inputShape[inputShape.length - 1];\r\n        if (this.kernel == null) {\r\n            this.kernel = this.addWeight('kernel', [inputLastDim, this.units], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\r\n            if (this.useBias) {\r\n                this.bias = this.addWeight('bias', [this.units], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\r\n            }\r\n        }\r\n        this.inputSpec = [{ minNDim: 2, axes: (_a = {}, _a[-1] = inputLastDim, _a) }];\r\n        this.built = true;\r\n        var _a;\r\n    };\r\n    Dense.prototype.computeOutputShape = function (inputShape) {\r\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\r\n        var outputShape = inputShape.slice();\r\n        outputShape[outputShape.length - 1] = this.units;\r\n        return outputShape;\r\n    };\r\n    Dense.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            _this.invokeCallHook(inputs, kwargs);\r\n            var input = generic_utils.getExactlyOneTensor(inputs);\r\n            var output = K.dot(input, _this.kernel.read());\r\n            if (_this.bias != null) {\r\n                output = K.biasAdd(output, _this.bias.read());\r\n            }\r\n            if (_this.activation != null) {\r\n                output = _this.activation.apply(output);\r\n            }\r\n            return output;\r\n        });\r\n    };\r\n    Dense.prototype.getConfig = function () {\r\n        var config = {\r\n            units: this.units,\r\n            activation: serializeActivation(this.activation),\r\n            useBias: this.useBias,\r\n            kernelInitializer: serializeInitializer(this.kernelInitializer),\r\n            biasInitializer: serializeInitializer(this.biasInitializer),\r\n            kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\r\n            biasRegularizer: serializeRegularizer(this.biasRegularizer),\r\n            activityRegularizer: serializeRegularizer(this.activityRegularizer),\r\n            kernelConstraint: serializeConstraint(this.kernelConstraint),\r\n            biasConstraint: serializeConstraint(this.biasConstraint)\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    Dense.className = 'Dense';\r\n    return Dense;\r\n}(Layer));\r\nexport { Dense };\r\nserialization.SerializationMap.register(Dense);\r\nvar Flatten = (function (_super) {\r\n    tslib_1.__extends(Flatten, _super);\r\n    function Flatten(config) {\r\n        var _this = _super.call(this, config || {}) || this;\r\n        _this.inputSpec = [{ minNDim: 3 }];\r\n        return _this;\r\n    }\r\n    Flatten.prototype.computeOutputShape = function (inputShape) {\r\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\r\n        for (var _i = 0, _a = inputShape.slice(1); _i < _a.length; _i++) {\r\n            var dim = _a[_i];\r\n            if (dim == null) {\r\n                throw new ValueError(\"The shape of the input to \\\"Flatten\\\" is not fully defined \" +\r\n                    (\"(got \" + inputShape.slice(1) + \"). Make sure to pass a complete \") +\r\n                    \"\\\"input_shape\\\" or \\\"batch_input_shape\\\" argument to the first \" +\r\n                    \"layer in your model.\");\r\n            }\r\n        }\r\n        return [inputShape[0], math_utils.arrayProd(inputShape, 1)];\r\n    };\r\n    Flatten.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            _this.invokeCallHook(inputs, kwargs);\r\n            return K.batchFlatten(generic_utils.getExactlyOneTensor(inputs));\r\n        });\r\n    };\r\n    Flatten.className = 'Flatten';\r\n    return Flatten;\r\n}(Layer));\r\nexport { Flatten };\r\nserialization.SerializationMap.register(Flatten);\r\nvar Activation = (function (_super) {\r\n    tslib_1.__extends(Activation, _super);\r\n    function Activation(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.supportsMasking = true;\r\n        _this.activation = getActivation(config.activation);\r\n        return _this;\r\n    }\r\n    Activation.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            _this.invokeCallHook(inputs, kwargs);\r\n            var input = generic_utils.getExactlyOneTensor(inputs);\r\n            return _this.activation.apply(input);\r\n        });\r\n    };\r\n    Activation.prototype.getConfig = function () {\r\n        var config = { activation: serializeActivation(this.activation) };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    Activation.className = 'Activation';\r\n    return Activation;\r\n}(Layer));\r\nexport { Activation };\r\nserialization.SerializationMap.register(Activation);\r\nvar RepeatVector = (function (_super) {\r\n    tslib_1.__extends(RepeatVector, _super);\r\n    function RepeatVector(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.n = config.n;\r\n        _this.inputSpec = [{ ndim: 2 }];\r\n        return _this;\r\n    }\r\n    RepeatVector.prototype.computeOutputShape = function (inputShape) {\r\n        return [inputShape[0], this.n, inputShape[1]];\r\n    };\r\n    RepeatVector.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            inputs = getExactlyOneTensor(inputs);\r\n            return K.repeat(inputs, _this.n);\r\n        });\r\n    };\r\n    RepeatVector.prototype.getConfig = function () {\r\n        var config = {\r\n            n: this.n,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    RepeatVector.className = 'RepeatVector';\r\n    return RepeatVector;\r\n}(Layer));\r\nexport { RepeatVector };\r\nserialization.SerializationMap.register(RepeatVector);\r\nvar Reshape = (function (_super) {\r\n    tslib_1.__extends(Reshape, _super);\r\n    function Reshape(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.targetShape = config.targetShape;\r\n        for (var i = 0; i < _this.targetShape.length; ++i) {\r\n            if (_this.isUnknown(_this.targetShape[i])) {\r\n                _this.targetShape[i] = null;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Reshape.prototype.isUnknown = function (dim) {\r\n        return dim < 0 || dim == null;\r\n    };\r\n    Reshape.prototype.fixUnknownDimension = function (inputShape, outputShape) {\r\n        var errorMsg = 'Total size of new array must be unchanged.';\r\n        var finalShape = outputShape.slice();\r\n        var known = 1;\r\n        var unknown = null;\r\n        for (var i = 0; i < finalShape.length; ++i) {\r\n            var dim = finalShape[i];\r\n            if (this.isUnknown(dim)) {\r\n                if (unknown === null) {\r\n                    unknown = i;\r\n                }\r\n                else {\r\n                    throw new ValueError('Can only specifiy one unknown dimension.');\r\n                }\r\n            }\r\n            else {\r\n                known *= dim;\r\n            }\r\n        }\r\n        var originalSize = math_utils.arrayProd(inputShape);\r\n        if (unknown !== null) {\r\n            if (known === 0 || originalSize % known !== 0) {\r\n                throw new ValueError(errorMsg);\r\n            }\r\n            finalShape[unknown] = originalSize / known;\r\n        }\r\n        else if (originalSize !== known) {\r\n            throw new ValueError(errorMsg);\r\n        }\r\n        return finalShape;\r\n    };\r\n    Reshape.prototype.computeOutputShape = function (inputShape) {\r\n        var anyUnknownDims = false;\r\n        for (var i = 0; i < inputShape.length; ++i) {\r\n            if (this.isUnknown(inputShape[i])) {\r\n                anyUnknownDims = true;\r\n                break;\r\n            }\r\n        }\r\n        if (anyUnknownDims) {\r\n            return inputShape.slice(0, 1).concat(this.targetShape);\r\n        }\r\n        else {\r\n            return inputShape.slice(0, 1).concat(this.fixUnknownDimension(inputShape.slice(1), this.targetShape));\r\n        }\r\n    };\r\n    Reshape.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            _this.invokeCallHook(inputs, kwargs);\r\n            var input = generic_utils.getExactlyOneTensor(inputs);\r\n            var inputShape = K.shape(input);\r\n            var outputShape = inputShape.slice(0, 1).concat(_this.fixUnknownDimension(inputShape.slice(1), _this.targetShape));\r\n            return input.reshape(outputShape);\r\n        });\r\n    };\r\n    Reshape.prototype.getConfig = function () {\r\n        var config = {\r\n            targetShape: this.targetShape,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    Reshape.className = 'Reshape';\r\n    return Reshape;\r\n}(Layer));\r\nexport { Reshape };\r\nserialization.SerializationMap.register(Reshape);\r\n//# sourceMappingURL=core.js.map","map":"{\"version\":3,\"file\":\"core.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/layers/core.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/layers/core.d.ts","text":"import { serialization, Tensor } from '@tensorflow/tfjs-core';\r\nimport { Activation as ActivationFn, ActivationIdentifier } from '../activations';\r\nimport { Constraint, ConstraintIdentifier } from '../constraints';\r\nimport { Layer, LayerConfig } from '../engine/topology';\r\nimport { Initializer, InitializerIdentifier } from '../initializers';\r\nimport { Regularizer, RegularizerIdentifier } from '../regularizers';\r\nimport { Kwargs, Shape } from '../types';\r\nexport interface DropoutLayerConfig extends LayerConfig {\r\n    rate: number;\r\n    noiseShape?: number[];\r\n    seed?: number;\r\n}\r\nexport declare class Dropout extends Layer {\r\n    static className: string;\r\n    private readonly rate;\r\n    private readonly rateScalar;\r\n    private readonly noiseShape;\r\n    private readonly seed;\r\n    constructor(config: DropoutLayerConfig);\r\n    private getNoiseShape(input);\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface DenseLayerConfig extends LayerConfig {\r\n    units: number;\r\n    activation?: ActivationIdentifier;\r\n    useBias?: boolean;\r\n    kernelInitializer?: InitializerIdentifier | Initializer;\r\n    biasInitializer?: InitializerIdentifier | Initializer;\r\n    inputDim?: number;\r\n    kernelConstraint?: ConstraintIdentifier | Constraint;\r\n    biasConstraint?: ConstraintIdentifier | Constraint;\r\n    kernelRegularizer?: RegularizerIdentifier | Regularizer;\r\n    biasRegularizer?: RegularizerIdentifier | Regularizer;\r\n    activityRegularizer?: RegularizerIdentifier | Regularizer;\r\n}\r\nexport declare class Dense extends Layer {\r\n    static className: string;\r\n    private units;\r\n    private activation;\r\n    private useBias;\r\n    private kernelInitializer;\r\n    private biasInitializer;\r\n    private kernel;\r\n    private bias;\r\n    readonly DEFAULT_KERNEL_INITIALIZER: InitializerIdentifier;\r\n    readonly DEFAULT_BIAS_INITIALIZER: InitializerIdentifier;\r\n    private readonly kernelConstraint?;\r\n    private readonly biasConstraint?;\r\n    private readonly kernelRegularizer?;\r\n    private readonly biasRegularizer?;\r\n    constructor(config: DenseLayerConfig);\r\n    build(inputShape: Shape | Shape[]): void;\r\n    computeOutputShape(inputShape: Shape | Shape[]): Shape | Shape[];\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport declare class Flatten extends Layer {\r\n    static className: string;\r\n    constructor(config?: LayerConfig);\r\n    computeOutputShape(inputShape: Shape | Shape[]): Shape | Shape[];\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n}\r\nexport interface ActivationLayerConfig extends LayerConfig {\r\n    activation: ActivationIdentifier;\r\n}\r\nexport declare class Activation extends Layer {\r\n    static className: string;\r\n    activation: ActivationFn;\r\n    constructor(config: ActivationLayerConfig);\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface ReshapeLayerConfig extends LayerConfig {\r\n    targetShape: Shape;\r\n}\r\nexport interface RepeatVectorLayerConfig extends LayerConfig {\r\n    n: number;\r\n}\r\nexport declare class RepeatVector extends Layer {\r\n    static className: string;\r\n    readonly n: number;\r\n    constructor(config: RepeatVectorLayerConfig);\r\n    computeOutputShape(inputShape: Shape): Shape;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport declare class Reshape extends Layer {\r\n    static className: string;\r\n    private targetShape;\r\n    constructor(config: ReshapeLayerConfig);\r\n    private isUnknown(dim);\r\n    private fixUnknownDimension(inputShape, outputShape);\r\n    computeOutputShape(inputShape: Shape): Shape;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\n"}}
