{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as tfc from '@tensorflow/tfjs-core';\r\nimport { doc, serialization, tidy, util } from '@tensorflow/tfjs-core';\r\nimport { getActivation, serializeActivation } from '../activations';\r\nimport * as K from '../backend/tfjs_backend';\r\nimport { getConstraint, serializeConstraint } from '../constraints';\r\nimport { InputSpec } from '../engine/topology';\r\nimport { Layer } from '../engine/topology';\r\nimport { AttributeError, NotImplementedError, ValueError } from '../errors';\r\nimport { getInitializer, Initializer, Ones, serializeInitializer } from '../initializers';\r\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\r\nimport { SymbolicTensor } from '../types';\r\nimport * as generic_utils from '../utils/generic_utils';\r\nimport * as math_utils from '../utils/math_utils';\r\nimport { batchGetValue, batchSetValue } from '../variables';\r\nimport { deserialize } from './serialization';\r\nexport function rnn(stepFunction, inputs, initialStates, goBackwards, mask, constants, unroll, inputLength) {\r\n    if (goBackwards === void 0) { goBackwards = false; }\r\n    if (unroll === void 0) { unroll = false; }\r\n    var ndim = inputs.shape.length;\r\n    if (ndim < 3) {\r\n        throw new ValueError(\"Input should be at least 3D, but is \" + ndim + \"D.\");\r\n    }\r\n    var axes = [1, 0].concat(math_utils.range(2, ndim));\r\n    inputs = tfc.transpose(inputs, axes);\r\n    if (mask != null) {\r\n        throw new NotImplementedError('The rnn() function of the deeplearn.js backend does not support ' +\r\n            'masking yet.');\r\n    }\r\n    if (constants != null) {\r\n        throw new NotImplementedError('The rnn() functoin of the deeplearn.js backend does not support ' +\r\n            'constants yet.');\r\n    }\r\n    if (unroll) {\r\n        console.warn('Backend rnn(): the unroll = true option is not applicable to the ' +\r\n            'imperative deeplearn.js backend.');\r\n    }\r\n    if (goBackwards) {\r\n        inputs = tfc.reverse(inputs, 0);\r\n    }\r\n    var outputs;\r\n    var lastOutput;\r\n    var states = initialStates;\r\n    var timeSteps = inputs.shape[0];\r\n    for (var t = 0; t < timeSteps; ++t) {\r\n        var currentInput = K.sliceAlongFirstAxis(inputs, t, 1);\r\n        currentInput = currentInput.reshape(currentInput.shape.slice(1));\r\n        var stepOutputs = stepFunction(currentInput, states);\r\n        lastOutput = stepOutputs[0];\r\n        if (t === 0) {\r\n            outputs = lastOutput.reshape([1].concat(lastOutput.shape));\r\n        }\r\n        else {\r\n            outputs = K.concatAlongFirstAxis(outputs, lastOutput.reshape([1].concat(lastOutput.shape)));\r\n        }\r\n        states = stepOutputs[1];\r\n    }\r\n    return [\r\n        lastOutput,\r\n        tfc.transpose(outputs, [1, 0].concat(math_utils.range(2, outputs.shape.length))),\r\n        states\r\n    ];\r\n}\r\nvar RNN = (function (_super) {\r\n    tslib_1.__extends(RNN, _super);\r\n    function RNN(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        var cell;\r\n        if (config.cell == null) {\r\n            throw new ValueError('cell property is missing for the constructor of RNN.');\r\n        }\r\n        else if (Array.isArray(config.cell)) {\r\n            cell = new StackedRNNCells({ cells: config.cell });\r\n        }\r\n        else {\r\n            cell = config.cell;\r\n        }\r\n        if (cell.stateSize == null) {\r\n            throw new ValueError('The RNN cell should have an attribute `stateSize` (tuple of ' +\r\n                'integers, one integer per RNN state).');\r\n        }\r\n        _this.cell = cell;\r\n        _this.returnSequences =\r\n            config.returnSequences == null ? false : config.returnSequences;\r\n        _this.returnState = config.returnState == null ? false : config.returnState;\r\n        _this.goBackwards = config.goBackwards == null ? false : config.goBackwards;\r\n        _this._stateful = config.stateful == null ? false : config.stateful;\r\n        _this.unroll = config.unroll == null ? false : config.unroll;\r\n        _this.supportsMasking = true;\r\n        _this.inputSpec = [new InputSpec({ ndim: 3 })];\r\n        _this.stateSpec = null;\r\n        _this.states = null;\r\n        _this.numConstants = null;\r\n        return _this;\r\n    }\r\n    RNN.prototype.getStates = function () {\r\n        if (this.states == null) {\r\n            var numStates = Array.isArray(this.cell.stateSize) ? this.cell.stateSize.length : 1;\r\n            return math_utils.range(0, numStates).map(function (x) { return null; });\r\n        }\r\n        else {\r\n            return this.states;\r\n        }\r\n    };\r\n    RNN.prototype.setStates = function (states) {\r\n        this.states = states;\r\n    };\r\n    RNN.prototype.computeOutputShape = function (inputShape) {\r\n        if (generic_utils.isArrayOfShapes(inputShape)) {\r\n            inputShape = inputShape[0];\r\n        }\r\n        inputShape = inputShape;\r\n        var stateSize = this.cell.stateSize;\r\n        if (!Array.isArray(stateSize)) {\r\n            stateSize = [stateSize];\r\n        }\r\n        var outputDim = stateSize[0];\r\n        var outputShape;\r\n        if (this.returnSequences) {\r\n            outputShape = [inputShape[0], inputShape[1], outputDim];\r\n        }\r\n        else {\r\n            outputShape = [inputShape[0], outputDim];\r\n        }\r\n        if (this.returnState) {\r\n            var stateShape = [];\r\n            for (var _i = 0, stateSize_1 = stateSize; _i < stateSize_1.length; _i++) {\r\n                var dim = stateSize_1[_i];\r\n                stateShape.push([inputShape[0], dim]);\r\n            }\r\n            return [outputShape].concat(stateShape);\r\n        }\r\n        else {\r\n            return outputShape;\r\n        }\r\n    };\r\n    RNN.prototype.computeMask = function (inputs, mask) {\r\n        throw new NotImplementedError('computeMask has not been implemented for RNN yet');\r\n    };\r\n    RNN.prototype.build = function (inputShape) {\r\n        var constantShape = null;\r\n        if (this.numConstants != null) {\r\n            throw new NotImplementedError('Constants support is not implemented in RNN yet.');\r\n        }\r\n        if (generic_utils.isArrayOfShapes(inputShape)) {\r\n            inputShape = inputShape[0];\r\n        }\r\n        inputShape = inputShape;\r\n        var batchSize = this.stateful ? inputShape[0] : null;\r\n        var inputDim = inputShape[inputShape.length - 1];\r\n        this.inputSpec[0] = new InputSpec({ shape: [batchSize, null, inputDim] });\r\n        var stepInputShape = [inputShape[0]].concat(inputShape.slice(2));\r\n        if (constantShape != null) {\r\n            throw new NotImplementedError('Constants support is not implemented in RNN yet.');\r\n        }\r\n        else {\r\n            this.cell.build(stepInputShape);\r\n        }\r\n        var stateSize;\r\n        if (Array.isArray(this.cell.stateSize)) {\r\n            stateSize = this.cell.stateSize;\r\n        }\r\n        else {\r\n            stateSize = [this.cell.stateSize];\r\n        }\r\n        if (this.stateSpec != null) {\r\n            if (!util.arraysEqual(this.stateSpec.map(function (spec) { return spec.shape[spec.shape.length - 1]; }), stateSize)) {\r\n                throw new ValueError(\"An initialState was passed that is not compatible with \" +\r\n                    (\"cell.stateSize. Received stateSpec=\" + this.stateSpec + \"; \") +\r\n                    (\"However cell.stateSize is \" + this.cell.stateSize));\r\n            }\r\n        }\r\n        else {\r\n            this.stateSpec =\r\n                stateSize.map(function (dim) { return new InputSpec({ shape: [null, dim] }); });\r\n        }\r\n        if (this.stateful) {\r\n            throw new NotImplementedError('stateful RNN layer is not implemented yet');\r\n        }\r\n    };\r\n    RNN.prototype.resetStates = function (states) {\r\n        var _this = this;\r\n        tidy(function () {\r\n            if (!_this.stateful) {\r\n                throw new AttributeError('Cannot call resetState() on an RNN Layer that is not stateful.');\r\n            }\r\n            var batchSize = _this.inputSpec[0].shape[0];\r\n            if (batchSize == null) {\r\n                throw new ValueError('If an RNN is stateful, it needs to know its batch size. Specify ' +\r\n                    'the batch size of your input tensors: \\n' +\r\n                    '- If using a Sequential model, specify the batch size by ' +\r\n                    'passing a `batchInputShape` option to your first layer.\\n' +\r\n                    '- If using the functional API, specify the batch size by ' +\r\n                    'passing a `batchShape` option to your Input layer.');\r\n            }\r\n            if (_this.states == null) {\r\n                if (Array.isArray(_this.cell.stateSize)) {\r\n                    _this.states =\r\n                        _this.cell.stateSize.map(function (dim) { return tfc.zeros([batchSize, dim]); });\r\n                }\r\n                else {\r\n                    _this.states = [tfc.zeros([batchSize, _this.cell.stateSize])];\r\n                }\r\n            }\r\n            else if (states == null) {\r\n                if (Array.isArray(_this.cell.stateSize)) {\r\n                    _this.states =\r\n                        _this.cell.stateSize.map(function (dim) { return tfc.zeros([batchSize, dim]); });\r\n                }\r\n                else {\r\n                    _this.states[0] = tfc.zeros([batchSize, _this.cell.stateSize]);\r\n                }\r\n            }\r\n            else {\r\n                if (!Array.isArray(states)) {\r\n                    states = [states];\r\n                }\r\n                if (states.length !== _this.states.length) {\r\n                    throw new ValueError(\"Layer \" + _this.name + \" expects \" + _this.states.length + \" state(s), \" +\r\n                        (\"but it received \" + states.length + \" state value(s). Input \") +\r\n                        (\"received: \" + states));\r\n                }\r\n                for (var index = 0; index < _this.states.length; ++index) {\r\n                    var value = states[index];\r\n                    var dim = Array.isArray(_this.cell.stateSize) ?\r\n                        _this.cell.stateSize[index] :\r\n                        _this.cell.stateSize;\r\n                    var expectedShape = [batchSize, dim];\r\n                    if (!util.arraysEqual(value.shape, expectedShape)) {\r\n                        throw new ValueError(\"State \" + index + \" is incompatible with layer \" + _this.name + \": \" +\r\n                            (\"expected shape=\" + expectedShape + \", received shape=\" + value.shape));\r\n                    }\r\n                    _this.states[index] = value;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    RNN.prototype.standardizeArgs = function (inputs, initialState, constants) {\r\n        if (Array.isArray(inputs)) {\r\n            if (initialState != null || constants != null) {\r\n                throw new ValueError('When inputs is an array, neither initialState or constants ' +\r\n                    'should be provided');\r\n            }\r\n            if (this.numConstants != null) {\r\n                constants =\r\n                    inputs.slice(inputs.length - this.numConstants, inputs.length);\r\n                inputs = inputs.slice(0, inputs.length - this.numConstants);\r\n            }\r\n            if (inputs.length > 1) {\r\n                initialState = inputs.slice(1, inputs.length);\r\n            }\r\n            inputs = inputs[0];\r\n        }\r\n        function toListOrNull(x) {\r\n            if (x == null || Array.isArray(x)) {\r\n                return x;\r\n            }\r\n            else {\r\n                return [x];\r\n            }\r\n        }\r\n        initialState = toListOrNull(initialState);\r\n        constants = toListOrNull(constants);\r\n        return { inputs: inputs, initialState: initialState, constants: constants };\r\n    };\r\n    RNN.prototype.apply = function (inputs, kwargs) {\r\n        var initialState = kwargs == null ? null : kwargs['initialState'];\r\n        var constants = kwargs == null ? null : kwargs['constants'];\r\n        if (kwargs == null) {\r\n            kwargs = {};\r\n        }\r\n        var standardized = this.standardizeArgs(inputs, initialState, constants);\r\n        inputs = standardized.inputs;\r\n        initialState = standardized.initialState;\r\n        constants = standardized.constants;\r\n        var additionalInputs = [];\r\n        var additionalSpecs = [];\r\n        if (initialState != null) {\r\n            kwargs['initialState'] = initialState;\r\n            additionalInputs = additionalInputs.concat(initialState);\r\n            this.stateSpec = [];\r\n            for (var _i = 0, initialState_1 = initialState; _i < initialState_1.length; _i++) {\r\n                var state = initialState_1[_i];\r\n                this.stateSpec.push(new InputSpec({ shape: state.shape }));\r\n            }\r\n            additionalSpecs = additionalSpecs.concat(this.stateSpec);\r\n        }\r\n        if (constants != null) {\r\n            kwargs['constants'] = constants;\r\n            additionalInputs = additionalInputs.concat(constants);\r\n            this.numConstants = constants.length;\r\n        }\r\n        var isTensor = additionalInputs[0] instanceof SymbolicTensor;\r\n        if (isTensor) {\r\n            var fullInput = [inputs].concat(additionalInputs);\r\n            var fullInputSpec = this.inputSpec.concat(additionalSpecs);\r\n            var originalInputSpec = this.inputSpec;\r\n            this.inputSpec = fullInputSpec;\r\n            var output = _super.prototype.apply.call(this, fullInput, kwargs);\r\n            this.inputSpec = originalInputSpec;\r\n            return output;\r\n        }\r\n        else {\r\n            return _super.prototype.apply.call(this, inputs, kwargs);\r\n        }\r\n    };\r\n    RNN.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            var mask = kwargs == null ? null : kwargs['mask'];\r\n            var training = kwargs == null ? null : kwargs['training'];\r\n            var initialState = kwargs == null ? null : kwargs['initialState'];\r\n            inputs = generic_utils.getExactlyOneTensor(inputs);\r\n            if (initialState == null) {\r\n                if (_this.stateful) {\r\n                    throw new NotImplementedError('stateful RNN layer is not implemented yet.');\r\n                }\r\n                else {\r\n                    initialState = _this.getInitialState(inputs);\r\n                }\r\n            }\r\n            if (mask != null) {\r\n                throw new NotImplementedError('Masking is not implemented for RNN yet');\r\n            }\r\n            var numStates = Array.isArray(_this.cell.stateSize) ? _this.cell.stateSize.length : 1;\r\n            if (initialState.length !== numStates) {\r\n                throw new ValueError(\"RNN Layer has \" + numStates + \" state(s) but was passed \" +\r\n                    (initialState.length + \" initial state(s).\"));\r\n            }\r\n            var inputShape = inputs.shape;\r\n            var timesteps = inputShape[1];\r\n            if (_this.unroll) {\r\n                console.warn('Ignoring unroll = true for RNN layer, due to imperative backend.');\r\n            }\r\n            var cellCallKwargs = { training: training };\r\n            var step = function (inputs, states) {\r\n                var outputs = _this.cell.call([inputs].concat(states), cellCallKwargs);\r\n                return [outputs[0], outputs.slice(1)];\r\n            };\r\n            var rnnOutputs = rnn(step, inputs, initialState, _this.goBackwards, null, null, _this.unroll, timesteps);\r\n            var lastOutput = rnnOutputs[0];\r\n            var outputs = rnnOutputs[1];\r\n            var states = rnnOutputs[2];\r\n            if (_this.stateful) {\r\n                throw new NotImplementedError('stateful RNN layer is not implemented yet');\r\n            }\r\n            var output = _this.returnSequences ? outputs : lastOutput;\r\n            if (_this.returnState) {\r\n                return [output].concat(states);\r\n            }\r\n            else {\r\n                return output;\r\n            }\r\n        });\r\n    };\r\n    RNN.prototype.getInitialState = function (inputs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            var initialState = tfc.zeros(inputs.shape);\r\n            initialState = tfc.sum(initialState, [1, 2]);\r\n            initialState = K.expandDims(initialState);\r\n            if (Array.isArray(_this.cell.stateSize)) {\r\n                return _this.cell.stateSize.map(function (dim) { return dim > 1 ? K.tile(initialState, [1, dim]) : initialState; });\r\n            }\r\n            else {\r\n                return _this.cell.stateSize > 1 ?\r\n                    [K.tile(initialState, [1, _this.cell.stateSize])] :\r\n                    [initialState];\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(RNN.prototype, \"trainableWeights\", {\r\n        get: function () {\r\n            if (!this.trainable) {\r\n                return [];\r\n            }\r\n            return this.cell.trainableWeights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RNN.prototype, \"nonTrainableWeights\", {\r\n        get: function () {\r\n            if (!this.trainable) {\r\n                return this.cell.weights;\r\n            }\r\n            return this.cell.nonTrainableWeights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RNN.prototype.getConfig = function () {\r\n        var config = {\r\n            returnSequences: this.returnSequences,\r\n            returnState: this.returnState,\r\n            goBackwards: this.goBackwards,\r\n            stateful: this.stateful,\r\n            unroll: this.unroll,\r\n        };\r\n        if (this.numConstants != null) {\r\n            config.numConstants = this.numConstants;\r\n        }\r\n        var cellConfig = this.cell.getConfig();\r\n        config.cell = {\r\n            className: this.cell.getClassName(),\r\n            config: cellConfig,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    RNN.className = 'RNN';\r\n    return RNN;\r\n}(Layer));\r\nexport { RNN };\r\nserialization.SerializationMap.register(RNN);\r\nvar RNNCell = (function (_super) {\r\n    tslib_1.__extends(RNNCell, _super);\r\n    function RNNCell() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RNNCell = tslib_1.__decorate([\r\n        doc({ heading: 'Layers', subheading: 'Classes' })\r\n    ], RNNCell);\r\n    return RNNCell;\r\n}(Layer));\r\nexport { RNNCell };\r\nvar SimpleRNNCell = (function (_super) {\r\n    tslib_1.__extends(SimpleRNNCell, _super);\r\n    function SimpleRNNCell(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.DEFAULT_ACTIVATION = 'tanh';\r\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\r\n        _this.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\r\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\r\n        _this.units = config.units;\r\n        _this.activation = getActivation(config.activation == null ? _this.DEFAULT_ACTIVATION :\r\n            config.activation);\r\n        _this.useBias = config.useBias == null ? true : config.useBias;\r\n        _this.kernelInitializer = getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\r\n        _this.recurrentInitializer = getInitializer(config.recurrentInitializer || _this.DEFAULT_RECURRENT_INITIALIZER);\r\n        _this.biasInitializer =\r\n            getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\r\n        _this.kernelRegularizer = getRegularizer(config.kernelRegularizer);\r\n        _this.recurrentRegularizer = getRegularizer(config.recurrentRegularizer);\r\n        _this.biasRegularizer = getRegularizer(config.biasRegularizer);\r\n        _this.kernelConstraint = getConstraint(config.kernelConstraint);\r\n        _this.recurrentConstraint = getConstraint(config.recurrentConstraint);\r\n        _this.biasConstraint = getConstraint(config.biasConstraint);\r\n        _this.dropout = math_utils.min([1, math_utils.max([0, config.dropout == null ? 0 : config.dropout])]);\r\n        _this.recurrentDropout = math_utils.min([\r\n            1,\r\n            math_utils.max([0, config.recurrentDropout == null ? 0 : config.recurrentDropout])\r\n        ]);\r\n        _this.stateSize = _this.units;\r\n        return _this;\r\n    }\r\n    SimpleRNNCell.prototype.build = function (inputShape) {\r\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\r\n        this.kernel = this.addWeight('kernel', [inputShape[inputShape.length - 1], this.units], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\r\n        this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\r\n        if (this.useBias) {\r\n            this.bias = this.addWeight('bias', [this.units], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\r\n        }\r\n        else {\r\n            this.bias = null;\r\n        }\r\n        this.built = true;\r\n    };\r\n    SimpleRNNCell.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            inputs = inputs;\r\n            if (inputs.length !== 2) {\r\n                throw new ValueError(\"SimpleRNNCell expects 2 input Tensors, got \" + inputs.length + \".\");\r\n            }\r\n            var prevOutput = inputs[1];\r\n            inputs = inputs[0];\r\n            if (_this.dropout !== 0 || _this.recurrentDropout !== 0) {\r\n                throw new NotImplementedError('Dropout is not implemented for SimpleRNNCell yet');\r\n            }\r\n            var h = K.dot(inputs, _this.kernel.read());\r\n            if (_this.bias != null) {\r\n                h = K.biasAdd(h, _this.bias.read());\r\n            }\r\n            var output = tfc.add(h, K.dot(prevOutput, _this.recurrentKernel.read()));\r\n            if (_this.activation != null) {\r\n                output = _this.activation.apply(output);\r\n            }\r\n            return [output, output];\r\n        });\r\n    };\r\n    SimpleRNNCell.prototype.getConfig = function () {\r\n        var config = {\r\n            units: this.units,\r\n            activation: serializeActivation(this.activation),\r\n            useBias: this.useBias,\r\n            kernelInitializer: serializeInitializer(this.kernelInitializer),\r\n            recurrentInitializer: serializeInitializer(this.recurrentInitializer),\r\n            biasInitializer: serializeInitializer(this.biasInitializer),\r\n            kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\r\n            recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\r\n            biasRegularizer: serializeRegularizer(this.biasRegularizer),\r\n            activityRegularizer: serializeRegularizer(this.activityRegularizer),\r\n            kernelConstraint: serializeConstraint(this.kernelConstraint),\r\n            recurrentConstraint: serializeConstraint(this.recurrentConstraint),\r\n            biasConstraint: serializeConstraint(this.biasConstraint),\r\n            dropout: this.dropout,\r\n            recurrentDropout: this.recurrentDropout,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    SimpleRNNCell.className = 'SimpleRNNCell';\r\n    return SimpleRNNCell;\r\n}(RNNCell));\r\nexport { SimpleRNNCell };\r\nserialization.SerializationMap.register(SimpleRNNCell);\r\nvar SimpleRNN = (function (_super) {\r\n    tslib_1.__extends(SimpleRNN, _super);\r\n    function SimpleRNN(config) {\r\n        var _this = this;\r\n        config.cell = new SimpleRNNCell(config);\r\n        _this = _super.call(this, config) || this;\r\n        return _this;\r\n    }\r\n    SimpleRNN.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            var mask = kwargs == null ? null : kwargs['mask'];\r\n            var training = kwargs == null ? null : kwargs['training'];\r\n            var initialState = kwargs == null ? null : kwargs['initialState'];\r\n            return _super.prototype.call.call(_this, inputs, { mask: mask, training: training, initialState: initialState });\r\n        });\r\n    };\r\n    Object.defineProperty(SimpleRNN.prototype, \"units\", {\r\n        get: function () {\r\n            return this.cell.units;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"activation\", {\r\n        get: function () {\r\n            return this.cell.activation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"useBias\", {\r\n        get: function () {\r\n            return this.cell.useBias;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"kernelInitializer\", {\r\n        get: function () {\r\n            return this.cell.kernelInitializer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentInitializer\", {\r\n        get: function () {\r\n            return this.cell.recurrentInitializer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"biasInitializer\", {\r\n        get: function () {\r\n            return this.cell.biasInitializer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"kernelRegularizer\", {\r\n        get: function () {\r\n            return this.cell.kernelRegularizer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentRegularizer\", {\r\n        get: function () {\r\n            return this.cell.recurrentRegularizer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"biasRegularizer\", {\r\n        get: function () {\r\n            return this.cell.biasRegularizer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"kernelConstraint\", {\r\n        get: function () {\r\n            return this.cell.kernelConstraint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentConstraint\", {\r\n        get: function () {\r\n            return this.cell.recurrentConstraint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"biasConstraint\", {\r\n        get: function () {\r\n            return this.cell.biasConstraint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"dropout\", {\r\n        get: function () {\r\n            return this.cell.dropout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SimpleRNN.prototype, \"recurrentDropout\", {\r\n        get: function () {\r\n            return this.cell.recurrentDropout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SimpleRNN.prototype.getConfig = function () {\r\n        var config = {\r\n            units: this.units,\r\n            activation: serializeActivation(this.activation),\r\n            useBias: this.useBias,\r\n            kernelInitializer: serializeInitializer(this.kernelInitializer),\r\n            recurrentInitializer: serializeInitializer(this.recurrentInitializer),\r\n            biasInitializer: serializeInitializer(this.biasInitializer),\r\n            kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\r\n            recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\r\n            biasRegularizer: serializeRegularizer(this.biasRegularizer),\r\n            activityRegularizer: serializeRegularizer(this.activityRegularizer),\r\n            kernelConstraint: serializeConstraint(this.kernelConstraint),\r\n            recurrentConstraint: serializeConstraint(this.recurrentConstraint),\r\n            biasConstraint: serializeConstraint(this.biasConstraint),\r\n            dropout: this.dropout,\r\n            recurrentDropout: this.recurrentDropout,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        delete baseConfig['cell'];\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    SimpleRNN.className = 'SimpleRNN';\r\n    return SimpleRNN;\r\n}(RNN));\r\nexport { SimpleRNN };\r\nserialization.SerializationMap.register(SimpleRNN);\r\nvar GRUCell = (function (_super) {\r\n    tslib_1.__extends(GRUCell, _super);\r\n    function GRUCell(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.DEFAULT_ACTIVATION = 'tanh';\r\n        _this.DEFAULT_RECURRENT_ACTIVATION = 'hardSigmoid';\r\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\r\n        _this.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\r\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\r\n        _this.units = config.units;\r\n        _this.activation = getActivation(config.activation === undefined ? _this.DEFAULT_ACTIVATION :\r\n            config.activation);\r\n        _this.recurrentActivation = getActivation(config.activation === undefined ? _this.DEFAULT_RECURRENT_ACTIVATION :\r\n            config.recurrentActivation);\r\n        _this.useBias = config.useBias == null ? true : config.useBias;\r\n        _this.kernelInitializer = getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\r\n        _this.recurrentInitializer = getInitializer(config.recurrentInitializer || _this.DEFAULT_RECURRENT_INITIALIZER);\r\n        _this.biasInitializer =\r\n            getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\r\n        _this.kernelRegularizer = getRegularizer(config.kernelRegularizer);\r\n        _this.recurrentRegularizer = getRegularizer(config.recurrentRegularizer);\r\n        _this.biasRegularizer = getRegularizer(config.biasRegularizer);\r\n        _this.kernelConstraint = getConstraint(config.kernelConstraint);\r\n        _this.recurrentConstraint = getConstraint(config.recurrentConstraint);\r\n        _this.biasConstraint = getConstraint(config.biasConstraint);\r\n        _this.dropout = math_utils.min([1, math_utils.max([0, config.dropout == null ? 0 : config.dropout])]);\r\n        _this.recurrentDropout = math_utils.min([\r\n            1,\r\n            math_utils.max([0, config.recurrentDropout == null ? 0 : config.recurrentDropout])\r\n        ]);\r\n        _this.implementation = config.implementation;\r\n        _this.stateSize = _this.units;\r\n        return _this;\r\n    }\r\n    GRUCell.prototype.build = function (inputShape) {\r\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\r\n        var inputDim = inputShape[inputShape.length - 1];\r\n        this.kernel = this.addWeight('kernel', [inputDim, this.units * 3], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\r\n        this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units * 3], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\r\n        if (this.useBias) {\r\n            this.bias = this.addWeight('bias', [this.units * 3], null, this.biasInitializer, this.biasRegularizer, true, this.biasConstraint);\r\n        }\r\n        else {\r\n            this.bias = null;\r\n        }\r\n        this.built = true;\r\n    };\r\n    GRUCell.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            if (_this.dropout !== 0 || _this.recurrentDropout !== 0) {\r\n                throw new NotImplementedError('Dropout is not implemented for GRUCell yet');\r\n            }\r\n            inputs = inputs;\r\n            if (inputs.length !== 2) {\r\n                throw new ValueError(\"GRUCell expects 2 input Tensors (inputs, h, c), got \" +\r\n                    (inputs.length + \".\"));\r\n            }\r\n            var hTMinus1 = inputs[1];\r\n            inputs = inputs[0];\r\n            var z;\r\n            var r;\r\n            var hh;\r\n            if (_this.implementation === 1) {\r\n                var kernelZ = K.sliceAlongLastAxis(_this.kernel.read(), 0, _this.units);\r\n                var kernelR = K.sliceAlongLastAxis(_this.kernel.read(), _this.units, _this.units);\r\n                var kernelH = K.sliceAlongLastAxis(_this.kernel.read(), _this.units * 2, _this.units);\r\n                var recurrentKernelZ = K.sliceAlongLastAxis(_this.recurrentKernel.read(), 0, _this.units);\r\n                var recurrentKernelR = K.sliceAlongLastAxis(_this.recurrentKernel.read(), _this.units, _this.units);\r\n                var recurrentKernelH = K.sliceAlongLastAxis(_this.recurrentKernel.read(), _this.units * 2, _this.units);\r\n                var inputsZ = inputs;\r\n                var inputsR = inputs;\r\n                var inputsH = inputs;\r\n                var xZ = K.dot(inputsZ, kernelZ);\r\n                var xR = K.dot(inputsR, kernelR);\r\n                var xH = K.dot(inputsH, kernelH);\r\n                if (_this.useBias) {\r\n                    var biasZ = K.sliceAlongFirstAxis(_this.bias.read(), 0, _this.units);\r\n                    var biasR = K.sliceAlongFirstAxis(_this.bias.read(), _this.units, _this.units);\r\n                    var biasH = K.sliceAlongFirstAxis(_this.bias.read(), _this.units * 2, _this.units);\r\n                    xZ = K.biasAdd(xZ, biasZ);\r\n                    xR = K.biasAdd(xR, biasR);\r\n                    xH = K.biasAdd(xH, biasH);\r\n                }\r\n                var hTMinus1Z = hTMinus1;\r\n                var hTMinus1R = hTMinus1;\r\n                var hTMinus1H = hTMinus1;\r\n                z = _this.recurrentActivation.apply(tfc.add(xZ, K.dot(hTMinus1Z, recurrentKernelZ)));\r\n                r = _this.recurrentActivation.apply(tfc.add(xR, K.dot(hTMinus1R, recurrentKernelR)));\r\n                hh = _this.activation.apply(tfc.add(xH, K.dot(tfc.mul(r, hTMinus1H), recurrentKernelH)));\r\n            }\r\n            else {\r\n                var matrixX = K.dot(inputs, _this.kernel.read());\r\n                if (_this.useBias) {\r\n                    matrixX = K.biasAdd(matrixX, _this.bias.read());\r\n                }\r\n                var matrixInner = K.dot(hTMinus1, K.sliceAlongLastAxis(_this.recurrentKernel.read(), 0, 2 * _this.units));\r\n                var xZ = K.sliceAlongLastAxis(matrixX, 0, _this.units);\r\n                var xR = K.sliceAlongLastAxis(matrixX, _this.units, _this.units);\r\n                var recurrentZ = K.sliceAlongLastAxis(matrixInner, 0, _this.units);\r\n                var recurrentR = K.sliceAlongLastAxis(matrixInner, _this.units, _this.units);\r\n                z = _this.recurrentActivation.apply(tfc.add(xZ, recurrentZ));\r\n                r = _this.recurrentActivation.apply(tfc.add(xR, recurrentR));\r\n                var xH = K.sliceAlongLastAxis(matrixX, 2 * _this.units, _this.units);\r\n                var recurrentH = K.dot(tfc.mul(r, hTMinus1), K.sliceAlongLastAxis(_this.recurrentKernel.read(), 2 * _this.units, _this.units));\r\n                hh = _this.activation.apply(tfc.add(xH, recurrentH));\r\n            }\r\n            var h = tfc.add(tfc.mul(z, hTMinus1), tfc.mul(K.scalarPlusArray(K.getScalar(1), tfc.neg(z)), hh));\r\n            return [h, h];\r\n        });\r\n    };\r\n    GRUCell.prototype.getConfig = function () {\r\n        var config = {\r\n            units: this.units,\r\n            activation: serializeActivation(this.activation),\r\n            useBias: this.useBias,\r\n            kernelInitializer: serializeInitializer(this.kernelInitializer),\r\n            recurrentInitializer: serializeInitializer(this.recurrentInitializer),\r\n            biasInitializer: serializeInitializer(this.biasInitializer),\r\n            kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\r\n            recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\r\n            biasRegularizer: serializeRegularizer(this.biasRegularizer),\r\n            activityRegularizer: serializeRegularizer(this.activityRegularizer),\r\n            kernelConstraint: serializeConstraint(this.kernelConstraint),\r\n            recurrentConstraint: serializeConstraint(this.recurrentConstraint),\r\n            biasConstraint: serializeConstraint(this.biasConstraint),\r\n            dropout: this.dropout,\r\n            recurrentDropout: this.recurrentDropout,\r\n            implementation: this.implementation,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    GRUCell.className = 'GRUCell';\r\n    return GRUCell;\r\n}(RNNCell));\r\nexport { GRUCell };\r\nserialization.SerializationMap.register(GRUCell);\r\nvar GRU = (function (_super) {\r\n    tslib_1.__extends(GRU, _super);\r\n    function GRU(config) {\r\n        var _this = this;\r\n        if (config.implementation === 0) {\r\n            console.warn('`implementation=0` has been deprecated, and now defaults to ' +\r\n                '`implementation=1`. Please update your layer call.');\r\n        }\r\n        config.cell = new GRUCell(config);\r\n        _this = _super.call(this, config) || this;\r\n        return _this;\r\n    }\r\n    GRU.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            var mask = kwargs == null ? null : kwargs['mask'];\r\n            var training = kwargs == null ? null : kwargs['training'];\r\n            var initialState = kwargs == null ? null : kwargs['initialState'];\r\n            return _super.prototype.call.call(_this, inputs, { mask: mask, training: training, initialState: initialState });\r\n        });\r\n    };\r\n    Object.defineProperty(GRU.prototype, \"units\", {\r\n        get: function () {\r\n            return this.cell.units;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"activation\", {\r\n        get: function () {\r\n            return this.cell.activation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"useBias\", {\r\n        get: function () {\r\n            return this.cell.useBias;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"kernelInitializer\", {\r\n        get: function () {\r\n            return this.cell.kernelInitializer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"recurrentInitializer\", {\r\n        get: function () {\r\n            return this.cell.recurrentInitializer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"biasInitializer\", {\r\n        get: function () {\r\n            return this.cell.biasInitializer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"kernelRegularizer\", {\r\n        get: function () {\r\n            return this.cell.kernelRegularizer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"recurrentRegularizer\", {\r\n        get: function () {\r\n            return this.cell.recurrentRegularizer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"biasRegularizer\", {\r\n        get: function () {\r\n            return this.cell.biasRegularizer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"kernelConstraint\", {\r\n        get: function () {\r\n            return this.cell.kernelConstraint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"recurrentConstraint\", {\r\n        get: function () {\r\n            return this.cell.recurrentConstraint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"biasConstraint\", {\r\n        get: function () {\r\n            return this.cell.biasConstraint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"dropout\", {\r\n        get: function () {\r\n            return this.cell.dropout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"recurrentDropout\", {\r\n        get: function () {\r\n            return this.cell.recurrentDropout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GRU.prototype, \"implementation\", {\r\n        get: function () {\r\n            return this.cell.implementation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GRU.prototype.getConfig = function () {\r\n        var config = {\r\n            units: this.units,\r\n            activation: serializeActivation(this.activation),\r\n            useBias: this.useBias,\r\n            kernelInitializer: serializeInitializer(this.kernelInitializer),\r\n            recurrentInitializer: serializeInitializer(this.recurrentInitializer),\r\n            biasInitializer: serializeInitializer(this.biasInitializer),\r\n            kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\r\n            recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\r\n            biasRegularizer: serializeRegularizer(this.biasRegularizer),\r\n            activityRegularizer: serializeRegularizer(this.activityRegularizer),\r\n            kernelConstraint: serializeConstraint(this.kernelConstraint),\r\n            recurrentConstraint: serializeConstraint(this.recurrentConstraint),\r\n            biasConstraint: serializeConstraint(this.biasConstraint),\r\n            dropout: this.dropout,\r\n            recurrentDropout: this.recurrentDropout,\r\n            implementation: this.implementation,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        delete baseConfig['cell'];\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    GRU.fromConfig = function (cls, config) {\r\n        if (config['implmentation'] === 0) {\r\n            config['implementation'] = 1;\r\n        }\r\n        return new cls(config);\r\n    };\r\n    GRU.className = 'GRU';\r\n    return GRU;\r\n}(RNN));\r\nexport { GRU };\r\nserialization.SerializationMap.register(GRU);\r\nvar LSTMCell = (function (_super) {\r\n    tslib_1.__extends(LSTMCell, _super);\r\n    function LSTMCell(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.DEFAULT_ACTIVATION = 'tanh';\r\n        _this.DEFAULT_RECURRENT_ACTIVATION = 'hardSigmoid';\r\n        _this.DEFAULT_KERNEL_INITIALIZER = 'glorotNormal';\r\n        _this.DEFAULT_RECURRENT_INITIALIZER = 'orthogonal';\r\n        _this.DEFAULT_BIAS_INITIALIZER = 'zeros';\r\n        _this.units = config.units;\r\n        _this.activation = getActivation(config.activation === undefined ? _this.DEFAULT_ACTIVATION :\r\n            config.activation);\r\n        _this.recurrentActivation = getActivation(config.activation === undefined ? _this.DEFAULT_RECURRENT_ACTIVATION :\r\n            config.recurrentActivation);\r\n        _this.useBias = config.useBias == null ? true : config.useBias;\r\n        _this.kernelInitializer = getInitializer(config.kernelInitializer || _this.DEFAULT_KERNEL_INITIALIZER);\r\n        _this.recurrentInitializer = getInitializer(config.recurrentInitializer || _this.DEFAULT_RECURRENT_INITIALIZER);\r\n        _this.biasInitializer =\r\n            getInitializer(config.biasInitializer || _this.DEFAULT_BIAS_INITIALIZER);\r\n        _this.unitForgetBias = config.unitForgetBias;\r\n        _this.kernelRegularizer = getRegularizer(config.kernelRegularizer);\r\n        _this.recurrentRegularizer = getRegularizer(config.recurrentRegularizer);\r\n        _this.biasRegularizer = getRegularizer(config.biasRegularizer);\r\n        _this.kernelConstraint = getConstraint(config.kernelConstraint);\r\n        _this.recurrentConstraint = getConstraint(config.recurrentConstraint);\r\n        _this.biasConstraint = getConstraint(config.biasConstraint);\r\n        _this.dropout = math_utils.min([1, math_utils.max([0, config.dropout == null ? 0 : config.dropout])]);\r\n        _this.recurrentDropout = math_utils.min([\r\n            1,\r\n            math_utils.max([0, config.recurrentDropout == null ? 0 : config.recurrentDropout])\r\n        ]);\r\n        _this.implementation = config.implementation;\r\n        _this.stateSize = [_this.units, _this.units];\r\n        return _this;\r\n    }\r\n    LSTMCell.prototype.build = function (inputShape) {\r\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\r\n        var inputDim = inputShape[inputShape.length - 1];\r\n        this.kernel = this.addWeight('kernel', [inputDim, this.units * 4], null, this.kernelInitializer, this.kernelRegularizer, true, this.kernelConstraint);\r\n        this.recurrentKernel = this.addWeight('recurrent_kernel', [this.units, this.units * 4], null, this.recurrentInitializer, this.recurrentRegularizer, true, this.recurrentConstraint);\r\n        var biasInitializer;\r\n        if (this.useBias) {\r\n            if (this.unitForgetBias) {\r\n                var capturedBiasInit_1 = this.biasInitializer;\r\n                var capturedUnits_1 = this.units;\r\n                biasInitializer = new (_a = (function (_super) {\r\n                        tslib_1.__extends(CustomInit, _super);\r\n                        function CustomInit() {\r\n                            return _super !== null && _super.apply(this, arguments) || this;\r\n                        }\r\n                        CustomInit.prototype.apply = function (shape, dtype) {\r\n                            var bI = capturedBiasInit_1.apply([capturedUnits_1]);\r\n                            var bF = (new Ones()).apply([capturedUnits_1]);\r\n                            var bCAndH = capturedBiasInit_1.apply([capturedUnits_1 * 2]);\r\n                            return K.concatAlongFirstAxis(K.concatAlongFirstAxis(bI, bF), bCAndH);\r\n                        };\r\n                        return CustomInit;\r\n                    }(Initializer)),\r\n                    _a.className = 'CustomInit',\r\n                    _a)();\r\n            }\r\n            else {\r\n                biasInitializer = this.biasInitializer;\r\n            }\r\n            this.bias = this.addWeight('bias', [this.units * 4], null, biasInitializer, this.biasRegularizer, true, this.biasConstraint);\r\n        }\r\n        else {\r\n            this.bias = null;\r\n        }\r\n        this.built = true;\r\n        var _a;\r\n    };\r\n    LSTMCell.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            if (_this.dropout !== 0 || _this.recurrentDropout !== 0) {\r\n                throw new NotImplementedError('Dropout is not implemented for LSTMCell yet');\r\n            }\r\n            inputs = inputs;\r\n            if (inputs.length !== 3) {\r\n                throw new ValueError(\"LSTMCell expects 3 input Tensors (inputs, h, c), got \" +\r\n                    (inputs.length + \".\"));\r\n            }\r\n            var hTMinus1 = inputs[1];\r\n            var cTMinus1 = inputs[2];\r\n            inputs = inputs[0];\r\n            var i;\r\n            var f;\r\n            var c;\r\n            var o;\r\n            if (_this.implementation === 1) {\r\n                var kernelI = K.sliceAlongLastAxis(_this.kernel.read(), 0, _this.units);\r\n                var kernelF = K.sliceAlongLastAxis(_this.kernel.read(), _this.units, _this.units);\r\n                var kernelC = K.sliceAlongLastAxis(_this.kernel.read(), _this.units * 2, _this.units);\r\n                var kernelO = K.sliceAlongLastAxis(_this.kernel.read(), _this.units * 3, _this.units);\r\n                var recurrentKernelI = K.sliceAlongLastAxis(_this.recurrentKernel.read(), 0, _this.units);\r\n                var recurrentKernelF = K.sliceAlongLastAxis(_this.recurrentKernel.read(), _this.units, _this.units);\r\n                var recurrentKernelC = K.sliceAlongLastAxis(_this.recurrentKernel.read(), _this.units * 2, _this.units);\r\n                var recurrentKernelO = K.sliceAlongLastAxis(_this.recurrentKernel.read(), _this.units * 3, _this.units);\r\n                var inputsI = inputs;\r\n                var inputsF = inputs;\r\n                var inputsC = inputs;\r\n                var inputsO = inputs;\r\n                var xI = K.dot(inputsI, kernelI);\r\n                var xF = K.dot(inputsF, kernelF);\r\n                var xC = K.dot(inputsC, kernelC);\r\n                var xO = K.dot(inputsO, kernelO);\r\n                if (_this.useBias) {\r\n                    var biasI = K.sliceAlongFirstAxis(_this.bias.read(), 0, _this.units);\r\n                    var biasF = K.sliceAlongFirstAxis(_this.bias.read(), _this.units, _this.units);\r\n                    var biasC = K.sliceAlongFirstAxis(_this.bias.read(), _this.units * 2, _this.units);\r\n                    var biasO = K.sliceAlongFirstAxis(_this.bias.read(), _this.units * 3, _this.units);\r\n                    xI = K.biasAdd(xI, biasI);\r\n                    xF = K.biasAdd(xF, biasF);\r\n                    xC = K.biasAdd(xC, biasC);\r\n                    xO = K.biasAdd(xO, biasO);\r\n                }\r\n                var hTMinus1I = hTMinus1;\r\n                var hTMinus1F = hTMinus1;\r\n                var hTMinus1C = hTMinus1;\r\n                var hTMinus1O = hTMinus1;\r\n                i = _this.recurrentActivation.apply(tfc.add(xI, K.dot(hTMinus1I, recurrentKernelI)));\r\n                f = _this.recurrentActivation.apply(tfc.add(xF, K.dot(hTMinus1F, recurrentKernelF)));\r\n                c = tfc.add(tfc.mul(f, cTMinus1), tfc.mul(i, _this.activation.apply(tfc.add(xC, K.dot(hTMinus1C, recurrentKernelC)))));\r\n                o = _this.recurrentActivation.apply(tfc.add(xO, K.dot(hTMinus1O, recurrentKernelO)));\r\n            }\r\n            else {\r\n                var z = K.dot(inputs, _this.kernel.read());\r\n                z = tfc.add(z, K.dot(hTMinus1, _this.recurrentKernel.read()));\r\n                if (_this.useBias) {\r\n                    z = K.biasAdd(z, _this.bias.read());\r\n                }\r\n                var z0 = K.sliceAlongLastAxis(z, 0, _this.units);\r\n                var z1 = K.sliceAlongLastAxis(z, _this.units, _this.units);\r\n                var z2 = K.sliceAlongLastAxis(z, _this.units * 2, _this.units);\r\n                var z3 = K.sliceAlongLastAxis(z, _this.units * 3, _this.units);\r\n                i = _this.recurrentActivation.apply(z0);\r\n                f = _this.recurrentActivation.apply(z1);\r\n                c = tfc.add(tfc.mul(f, cTMinus1), tfc.mul(i, _this.activation.apply(z2)));\r\n                o = _this.recurrentActivation.apply(z3);\r\n            }\r\n            var h = tfc.mul(o, _this.activation.apply(c));\r\n            return [h, h, c];\r\n        });\r\n    };\r\n    LSTMCell.prototype.getConfig = function () {\r\n        var config = {\r\n            units: this.units,\r\n            activation: serializeActivation(this.activation),\r\n            useBias: this.useBias,\r\n            kernelInitializer: serializeInitializer(this.kernelInitializer),\r\n            recurrentInitializer: serializeInitializer(this.recurrentInitializer),\r\n            biasInitializer: serializeInitializer(this.biasInitializer),\r\n            unitForgetBias: this.unitForgetBias,\r\n            kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\r\n            recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\r\n            biasRegularizer: serializeRegularizer(this.biasRegularizer),\r\n            activityRegularizer: serializeRegularizer(this.activityRegularizer),\r\n            kernelConstraint: serializeConstraint(this.kernelConstraint),\r\n            recurrentConstraint: serializeConstraint(this.recurrentConstraint),\r\n            biasConstraint: serializeConstraint(this.biasConstraint),\r\n            dropout: this.dropout,\r\n            recurrentDropout: this.recurrentDropout,\r\n            implementation: this.implementation,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    LSTMCell.className = 'LSTMCell';\r\n    return LSTMCell;\r\n}(RNNCell));\r\nexport { LSTMCell };\r\nserialization.SerializationMap.register(LSTMCell);\r\nvar LSTM = (function (_super) {\r\n    tslib_1.__extends(LSTM, _super);\r\n    function LSTM(config) {\r\n        var _this = this;\r\n        if (config.implementation === 0) {\r\n            console.warn('`implementation=0` has been deprecated, and now defaults to ' +\r\n                '`implementation=1`. Please update your layer call.');\r\n        }\r\n        config.cell = new LSTMCell(config);\r\n        _this = _super.call(this, config) || this;\r\n        return _this;\r\n    }\r\n    LSTM.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            var mask = kwargs == null ? null : kwargs['mask'];\r\n            var training = kwargs == null ? null : kwargs['training'];\r\n            var initialState = kwargs == null ? null : kwargs['initialState'];\r\n            return _super.prototype.call.call(_this, inputs, { mask: mask, training: training, initialState: initialState });\r\n        });\r\n    };\r\n    Object.defineProperty(LSTM.prototype, \"units\", {\r\n        get: function () {\r\n            return this.cell.units;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"activation\", {\r\n        get: function () {\r\n            return this.cell.activation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"useBias\", {\r\n        get: function () {\r\n            return this.cell.useBias;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"kernelInitializer\", {\r\n        get: function () {\r\n            return this.cell.kernelInitializer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"recurrentInitializer\", {\r\n        get: function () {\r\n            return this.cell.recurrentInitializer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"biasInitializer\", {\r\n        get: function () {\r\n            return this.cell.biasInitializer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"unitForgetBias\", {\r\n        get: function () {\r\n            return this.cell.unitForgetBias;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"kernelRegularizer\", {\r\n        get: function () {\r\n            return this.cell.kernelRegularizer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"recurrentRegularizer\", {\r\n        get: function () {\r\n            return this.cell.recurrentRegularizer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"biasRegularizer\", {\r\n        get: function () {\r\n            return this.cell.biasRegularizer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"kernelConstraint\", {\r\n        get: function () {\r\n            return this.cell.kernelConstraint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"recurrentConstraint\", {\r\n        get: function () {\r\n            return this.cell.recurrentConstraint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"biasConstraint\", {\r\n        get: function () {\r\n            return this.cell.biasConstraint;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"dropout\", {\r\n        get: function () {\r\n            return this.cell.dropout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"recurrentDropout\", {\r\n        get: function () {\r\n            return this.cell.recurrentDropout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LSTM.prototype, \"implementation\", {\r\n        get: function () {\r\n            return this.cell.implementation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LSTM.prototype.getConfig = function () {\r\n        var config = {\r\n            units: this.units,\r\n            activation: serializeActivation(this.activation),\r\n            useBias: this.useBias,\r\n            kernelInitializer: serializeInitializer(this.kernelInitializer),\r\n            recurrentInitializer: serializeInitializer(this.recurrentInitializer),\r\n            biasInitializer: serializeInitializer(this.biasInitializer),\r\n            unitForgetBias: this.unitForgetBias,\r\n            kernelRegularizer: serializeRegularizer(this.kernelRegularizer),\r\n            recurrentRegularizer: serializeRegularizer(this.recurrentRegularizer),\r\n            biasRegularizer: serializeRegularizer(this.biasRegularizer),\r\n            activityRegularizer: serializeRegularizer(this.activityRegularizer),\r\n            kernelConstraint: serializeConstraint(this.kernelConstraint),\r\n            recurrentConstraint: serializeConstraint(this.recurrentConstraint),\r\n            biasConstraint: serializeConstraint(this.biasConstraint),\r\n            dropout: this.dropout,\r\n            recurrentDropout: this.recurrentDropout,\r\n            implementation: this.implementation,\r\n        };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        delete baseConfig['cell'];\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    LSTM.fromConfig = function (cls, config) {\r\n        if (config['implmentation'] === 0) {\r\n            config['implementation'] = 1;\r\n        }\r\n        return new cls(config);\r\n    };\r\n    LSTM.className = 'LSTM';\r\n    return LSTM;\r\n}(RNN));\r\nexport { LSTM };\r\nserialization.SerializationMap.register(LSTM);\r\nvar StackedRNNCells = (function (_super) {\r\n    tslib_1.__extends(StackedRNNCells, _super);\r\n    function StackedRNNCells(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.cells = config.cells;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StackedRNNCells.prototype, \"stateSize\", {\r\n        get: function () {\r\n            var stateSize = [];\r\n            for (var _i = 0, _a = this.cells.slice().reverse(); _i < _a.length; _i++) {\r\n                var cell = _a[_i];\r\n                if (Array.isArray(cell.stateSize)) {\r\n                    stateSize.push.apply(stateSize, cell.stateSize);\r\n                }\r\n                else {\r\n                    stateSize.push(cell.stateSize);\r\n                }\r\n            }\r\n            return stateSize;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StackedRNNCells.prototype.call = function (inputs, kwargs) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            inputs = inputs;\r\n            var states = inputs.slice(1);\r\n            var nestedStates = [];\r\n            for (var _i = 0, _a = _this.cells.slice().reverse(); _i < _a.length; _i++) {\r\n                var cell = _a[_i];\r\n                if (Array.isArray(cell.stateSize)) {\r\n                    nestedStates.push(states.splice(0, cell.stateSize.length));\r\n                }\r\n                else {\r\n                    nestedStates.push(states.splice(0, 1));\r\n                }\r\n            }\r\n            nestedStates.reverse();\r\n            var newNestedStates = [];\r\n            var callInputs;\r\n            for (var i = 0; i < _this.cells.length; ++i) {\r\n                var cell = _this.cells[i];\r\n                states = nestedStates[i];\r\n                if (i === 0) {\r\n                    callInputs = [inputs[0]].concat(states);\r\n                }\r\n                else {\r\n                    callInputs = [callInputs[0]].concat(states);\r\n                }\r\n                callInputs = cell.call(callInputs, kwargs);\r\n                newNestedStates.push(callInputs.slice(1));\r\n            }\r\n            states = [];\r\n            for (var _b = 0, _c = newNestedStates.slice().reverse(); _b < _c.length; _b++) {\r\n                var cellStates = _c[_b];\r\n                states.push.apply(states, cellStates);\r\n            }\r\n            return [callInputs[0]].concat(states);\r\n        });\r\n    };\r\n    StackedRNNCells.prototype.build = function (inputShape) {\r\n        if (generic_utils.isArrayOfShapes(inputShape)) {\r\n            inputShape = inputShape[0];\r\n        }\r\n        inputShape = inputShape;\r\n        var outputDim;\r\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\r\n            var cell = _a[_i];\r\n            cell.build(inputShape);\r\n            if (Array.isArray(cell.stateSize)) {\r\n                outputDim = cell.stateSize[0];\r\n            }\r\n            else {\r\n                outputDim = cell.stateSize;\r\n            }\r\n            inputShape = [inputShape[0], outputDim];\r\n        }\r\n        this.built = true;\r\n    };\r\n    StackedRNNCells.prototype.getConfig = function () {\r\n        var cellConfigs = [];\r\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\r\n            var cell = _a[_i];\r\n            cellConfigs.push({\r\n                'className': this.getClassName(),\r\n                'config': cell.getConfig(),\r\n            });\r\n        }\r\n        var config = { 'cells': cellConfigs };\r\n        var baseConfig = _super.prototype.getConfig.call(this);\r\n        Object.assign(config, baseConfig);\r\n        return config;\r\n    };\r\n    StackedRNNCells.fromConfig = function (cls, config, customObjects) {\r\n        if (customObjects === void 0) { customObjects = {}; }\r\n        var cells = [];\r\n        for (var _i = 0, _a = config['cells']; _i < _a.length; _i++) {\r\n            var cellConfig = _a[_i];\r\n            cells.push(deserialize(cellConfig, customObjects));\r\n        }\r\n        return new cls({ cells: cells });\r\n    };\r\n    Object.defineProperty(StackedRNNCells.prototype, \"trainableWeights\", {\r\n        get: function () {\r\n            if (!this.trainable) {\r\n                return [];\r\n            }\r\n            var weights = [];\r\n            for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\r\n                var cell = _a[_i];\r\n                weights.push.apply(weights, cell.trainableWeights);\r\n            }\r\n            return weights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StackedRNNCells.prototype, \"nonTrainableWeights\", {\r\n        get: function () {\r\n            var weights = [];\r\n            for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\r\n                var cell = _a[_i];\r\n                weights.push.apply(weights, cell.nonTrainableWeights);\r\n            }\r\n            if (!this.trainable) {\r\n                var trainableWeights = [];\r\n                for (var _b = 0, _c = this.cells; _b < _c.length; _b++) {\r\n                    var cell = _c[_b];\r\n                    trainableWeights.push.apply(trainableWeights, cell.trainableWeights);\r\n                }\r\n                return trainableWeights.concat(weights);\r\n            }\r\n            return weights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StackedRNNCells.prototype.getWeights = function () {\r\n        var weights = [];\r\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\r\n            var cell = _a[_i];\r\n            weights.push.apply(weights, cell.weights);\r\n        }\r\n        return batchGetValue(weights);\r\n    };\r\n    StackedRNNCells.prototype.setWeights = function (weights) {\r\n        var tuples = [];\r\n        for (var _i = 0, _a = this.cells; _i < _a.length; _i++) {\r\n            var cell = _a[_i];\r\n            var numParams = cell.weights.length;\r\n            var inputWeights = weights.splice(numParams);\r\n            for (var i = 0; i < cell.weights.length; ++i) {\r\n                tuples.push([cell.weights[i], inputWeights[i]]);\r\n            }\r\n        }\r\n        batchSetValue(tuples);\r\n    };\r\n    StackedRNNCells.className = 'StackedRNNCells';\r\n    return StackedRNNCells;\r\n}(RNNCell));\r\nexport { StackedRNNCells };\r\nserialization.SerializationMap.register(StackedRNNCells);\r\n//# sourceMappingURL=recurrent.js.map","map":"{\"version\":3,\"file\":\"recurrent.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/layers/recurrent.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/layers/recurrent.d.ts","text":"import * as tfc from '@tensorflow/tfjs-core';\r\nimport { serialization, Tensor } from '@tensorflow/tfjs-core';\r\nimport { Activation, ActivationIdentifier } from '../activations';\r\nimport { Constraint, ConstraintIdentifier } from '../constraints';\r\nimport { InputSpec } from '../engine/topology';\r\nimport { Layer, LayerConfig } from '../engine/topology';\r\nimport { Initializer, InitializerIdentifier } from '../initializers';\r\nimport { Regularizer, RegularizerIdentifier } from '../regularizers';\r\nimport { Kwargs, RnnStepFunction, Shape, SymbolicTensor } from '../types';\r\nimport { LayerVariable } from '../variables';\r\nexport declare function rnn(stepFunction: RnnStepFunction, inputs: Tensor, initialStates: Tensor[], goBackwards?: boolean, mask?: Tensor, constants?: Tensor[], unroll?: boolean, inputLength?: number): [Tensor, Tensor, Tensor[]];\r\nexport interface BaseRNNLayerConfig extends LayerConfig {\r\n    cell?: RNNCell | RNNCell[];\r\n    returnSequences?: boolean;\r\n    returnState?: boolean;\r\n    goBackwards?: boolean;\r\n    stateful?: boolean;\r\n    unroll?: boolean;\r\n    inputDim?: number;\r\n    inputLength?: number;\r\n}\r\nexport interface RNNLayerConfig extends BaseRNNLayerConfig {\r\n    cell: RNNCell | RNNCell[];\r\n}\r\nexport declare class RNN extends Layer {\r\n    static className: string;\r\n    readonly cell: RNNCell;\r\n    readonly returnSequences: boolean;\r\n    readonly returnState: boolean;\r\n    readonly goBackwards: boolean;\r\n    readonly unroll: boolean;\r\n    stateSpec: InputSpec[];\r\n    states: Tensor[];\r\n    private numConstants;\r\n    constructor(config: RNNLayerConfig);\r\n    getStates(): Tensor[];\r\n    setStates(states: Tensor[]): void;\r\n    computeOutputShape(inputShape: Shape | Shape[]): Shape | Shape[];\r\n    computeMask(inputs: Tensor | Tensor[], mask?: Tensor | Tensor[]): Tensor;\r\n    build(inputShape: Shape | Shape[]): void;\r\n    resetStates(states?: Tensor | Tensor[]): void;\r\n    protected standardizeArgs(inputs: Tensor | Tensor[] | SymbolicTensor | SymbolicTensor[], initialState: Tensor | Tensor[] | SymbolicTensor | SymbolicTensor[], constants: Tensor | Tensor[] | SymbolicTensor | SymbolicTensor[]): {\r\n        inputs: Tensor | SymbolicTensor;\r\n        initialState: Tensor[] | SymbolicTensor[];\r\n        constants: Tensor[] | SymbolicTensor[];\r\n    };\r\n    apply(inputs: Tensor | Tensor[] | SymbolicTensor | SymbolicTensor[], kwargs?: Kwargs): Tensor | Tensor[] | SymbolicTensor | SymbolicTensor[];\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getInitialState(inputs: Tensor): Tensor[];\r\n    readonly trainableWeights: LayerVariable[];\r\n    readonly nonTrainableWeights: LayerVariable[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport declare abstract class RNNCell extends Layer {\r\n    stateSize: number | number[];\r\n}\r\nexport interface SimpleRNNCellLayerConfig extends LayerConfig {\r\n    units: number;\r\n    activation?: ActivationIdentifier;\r\n    useBias?: boolean;\r\n    kernelInitializer?: InitializerIdentifier | Initializer;\r\n    recurrentInitializer?: InitializerIdentifier | Initializer;\r\n    biasInitializer?: InitializerIdentifier | Initializer;\r\n    kernelRegularizer?: RegularizerIdentifier | Regularizer;\r\n    recurrentRegularizer?: RegularizerIdentifier | Regularizer;\r\n    biasRegularizer?: RegularizerIdentifier | Regularizer;\r\n    kernelConstraint?: ConstraintIdentifier | Constraint;\r\n    recurrentConstraint?: ConstraintIdentifier | Constraint;\r\n    biasConstraint?: ConstraintIdentifier | Constraint;\r\n    dropout?: number;\r\n    recurrentDropout?: number;\r\n}\r\nexport declare class SimpleRNNCell extends RNNCell {\r\n    static className: string;\r\n    readonly units: number;\r\n    readonly activation: Activation;\r\n    readonly useBias: boolean;\r\n    readonly kernelInitializer: Initializer;\r\n    readonly recurrentInitializer: Initializer;\r\n    readonly biasInitializer: Initializer;\r\n    readonly kernelConstraint: Constraint;\r\n    readonly recurrentConstraint: Constraint;\r\n    readonly biasConstraint: Constraint;\r\n    readonly kernelRegularizer: Regularizer;\r\n    readonly recurrentRegularizer: Regularizer;\r\n    readonly biasRegularizer: Regularizer;\r\n    readonly dropout: number;\r\n    readonly recurrentDropout: number;\r\n    readonly stateSize: number;\r\n    kernel: LayerVariable;\r\n    recurrentKernel: LayerVariable;\r\n    bias: LayerVariable;\r\n    readonly DEFAULT_ACTIVATION: string;\r\n    readonly DEFAULT_KERNEL_INITIALIZER: string;\r\n    readonly DEFAULT_RECURRENT_INITIALIZER: string;\r\n    readonly DEFAULT_BIAS_INITIALIZER: InitializerIdentifier;\r\n    constructor(config: SimpleRNNCellLayerConfig);\r\n    build(inputShape: Shape | Shape[]): void;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface SimpleRNNLayerConfig extends BaseRNNLayerConfig {\r\n    units: number;\r\n    activation?: ActivationIdentifier;\r\n    useBias?: boolean;\r\n    kernelInitializer?: InitializerIdentifier | Initializer;\r\n    recurrentInitializer?: InitializerIdentifier | Initializer;\r\n    biasInitializer?: InitializerIdentifier | Initializer;\r\n    kernelRegularizer?: RegularizerIdentifier | Regularizer;\r\n    recurrentRegularizer?: RegularizerIdentifier | Regularizer;\r\n    biasRegularizer?: RegularizerIdentifier | Regularizer;\r\n    kernelConstraint?: ConstraintIdentifier | Constraint;\r\n    recurrentConstraint?: ConstraintIdentifier | Constraint;\r\n    biasConstraint?: ConstraintIdentifier | Constraint;\r\n    dropout?: number;\r\n    recurrentDropout?: number;\r\n}\r\nexport declare class SimpleRNN extends RNN {\r\n    static className: string;\r\n    constructor(config: SimpleRNNLayerConfig);\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    readonly units: number;\r\n    readonly activation: Activation;\r\n    readonly useBias: boolean;\r\n    readonly kernelInitializer: Initializer;\r\n    readonly recurrentInitializer: Initializer;\r\n    readonly biasInitializer: Initializer;\r\n    readonly kernelRegularizer: Regularizer;\r\n    readonly recurrentRegularizer: Regularizer;\r\n    readonly biasRegularizer: Regularizer;\r\n    readonly kernelConstraint: Constraint;\r\n    readonly recurrentConstraint: Constraint;\r\n    readonly biasConstraint: Constraint;\r\n    readonly dropout: number;\r\n    readonly recurrentDropout: number;\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface GRUCellLayerConfig extends SimpleRNNCellLayerConfig {\r\n    recurrentActivation?: string;\r\n    implementation?: number;\r\n}\r\nexport declare class GRUCell extends RNNCell {\r\n    static className: string;\r\n    readonly units: number;\r\n    readonly activation: Activation;\r\n    readonly recurrentActivation: Activation;\r\n    readonly useBias: boolean;\r\n    readonly kernelInitializer: Initializer;\r\n    readonly recurrentInitializer: Initializer;\r\n    readonly biasInitializer: Initializer;\r\n    readonly kernelRegularizer: Regularizer;\r\n    readonly recurrentRegularizer: Regularizer;\r\n    readonly biasRegularizer: Regularizer;\r\n    readonly kernelConstraint: Constraint;\r\n    readonly recurrentConstraint: Constraint;\r\n    readonly biasConstraint: Constraint;\r\n    readonly dropout: number;\r\n    readonly recurrentDropout: number;\r\n    readonly stateSize: number;\r\n    readonly implementation: number;\r\n    readonly DEFAULT_ACTIVATION: string;\r\n    readonly DEFAULT_RECURRENT_ACTIVATION: string;\r\n    readonly DEFAULT_KERNEL_INITIALIZER: string;\r\n    readonly DEFAULT_RECURRENT_INITIALIZER: string;\r\n    readonly DEFAULT_BIAS_INITIALIZER: InitializerIdentifier;\r\n    kernel: LayerVariable;\r\n    recurrentKernel: LayerVariable;\r\n    bias: LayerVariable;\r\n    constructor(config: GRUCellLayerConfig);\r\n    build(inputShape: Shape | Shape[]): void;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface GRULayerConfig extends SimpleRNNLayerConfig {\r\n    implementation?: number;\r\n}\r\nexport declare class GRU extends RNN {\r\n    static className: string;\r\n    constructor(config: GRULayerConfig);\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    readonly units: number;\r\n    readonly activation: Activation;\r\n    readonly useBias: boolean;\r\n    readonly kernelInitializer: Initializer;\r\n    readonly recurrentInitializer: Initializer;\r\n    readonly biasInitializer: Initializer;\r\n    readonly kernelRegularizer: Regularizer;\r\n    readonly recurrentRegularizer: Regularizer;\r\n    readonly biasRegularizer: Regularizer;\r\n    readonly kernelConstraint: Constraint;\r\n    readonly recurrentConstraint: Constraint;\r\n    readonly biasConstraint: Constraint;\r\n    readonly dropout: number;\r\n    readonly recurrentDropout: number;\r\n    readonly implementation: number;\r\n    getConfig(): serialization.ConfigDict;\r\n    static fromConfig<T extends serialization.Serializable>(cls: serialization.SerializableConstructor<T>, config: serialization.ConfigDict): T;\r\n}\r\nexport interface LSTMCellLayerConfig extends SimpleRNNCellLayerConfig {\r\n    recurrentActivation?: ActivationIdentifier;\r\n    unitForgetBias?: boolean;\r\n    implementation?: 1 | 2;\r\n}\r\nexport declare class LSTMCell extends RNNCell {\r\n    static className: string;\r\n    readonly units: number;\r\n    readonly activation: Activation;\r\n    readonly recurrentActivation: Activation;\r\n    readonly useBias: boolean;\r\n    readonly kernelInitializer: Initializer;\r\n    readonly recurrentInitializer: Initializer;\r\n    readonly biasInitializer: Initializer;\r\n    readonly unitForgetBias: boolean;\r\n    readonly kernelConstraint: Constraint;\r\n    readonly recurrentConstraint: Constraint;\r\n    readonly biasConstraint: Constraint;\r\n    readonly kernelRegularizer: Regularizer;\r\n    readonly recurrentRegularizer: Regularizer;\r\n    readonly biasRegularizer: Regularizer;\r\n    readonly dropout: number;\r\n    readonly recurrentDropout: number;\r\n    readonly stateSize: number[];\r\n    readonly implementation: number;\r\n    readonly DEFAULT_ACTIVATION: string;\r\n    readonly DEFAULT_RECURRENT_ACTIVATION: string;\r\n    readonly DEFAULT_KERNEL_INITIALIZER: string;\r\n    readonly DEFAULT_RECURRENT_INITIALIZER: string;\r\n    readonly DEFAULT_BIAS_INITIALIZER: string;\r\n    kernel: LayerVariable;\r\n    recurrentKernel: LayerVariable;\r\n    bias: LayerVariable;\r\n    constructor(config: LSTMCellLayerConfig);\r\n    build(inputShape: Shape | Shape[]): void;\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    getConfig(): serialization.ConfigDict;\r\n}\r\nexport interface LSTMLayerConfig extends SimpleRNNLayerConfig {\r\n    unitForgetBias?: boolean;\r\n    implementation?: 1 | 2;\r\n}\r\nexport declare class LSTM extends RNN {\r\n    static className: string;\r\n    constructor(config: LSTMLayerConfig);\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    readonly units: number;\r\n    readonly activation: Activation;\r\n    readonly useBias: boolean;\r\n    readonly kernelInitializer: Initializer;\r\n    readonly recurrentInitializer: Initializer;\r\n    readonly biasInitializer: Initializer;\r\n    readonly unitForgetBias: boolean;\r\n    readonly kernelRegularizer: Regularizer;\r\n    readonly recurrentRegularizer: Regularizer;\r\n    readonly biasRegularizer: Regularizer;\r\n    readonly kernelConstraint: Constraint;\r\n    readonly recurrentConstraint: Constraint;\r\n    readonly biasConstraint: Constraint;\r\n    readonly dropout: number;\r\n    readonly recurrentDropout: number;\r\n    readonly implementation: number;\r\n    getConfig(): serialization.ConfigDict;\r\n    static fromConfig<T extends serialization.Serializable>(cls: serialization.SerializableConstructor<T>, config: serialization.ConfigDict): T;\r\n}\r\nexport interface StackedRNNCellsConfig extends LayerConfig {\r\n    cells: RNNCell[];\r\n}\r\nexport declare class StackedRNNCells extends RNNCell {\r\n    static className: string;\r\n    protected cells: RNNCell[];\r\n    constructor(config: StackedRNNCellsConfig);\r\n    readonly stateSize: number[];\r\n    call(inputs: Tensor | Tensor[], kwargs: Kwargs): Tensor | Tensor[];\r\n    build(inputShape: Shape | Shape[]): void;\r\n    getConfig(): serialization.ConfigDict;\r\n    static fromConfig<T extends serialization.Serializable>(cls: serialization.SerializableConstructor<T>, config: serialization.ConfigDict, customObjects?: tfc.serialization.ConfigDict): T;\r\n    readonly trainableWeights: LayerVariable[];\r\n    readonly nonTrainableWeights: LayerVariable[];\r\n    getWeights(): Tensor[];\r\n    setWeights(weights: Tensor[]): void;\r\n}\r\n"}}
