{"code":"import * as tslib_1 from \"tslib\";\r\nimport { abs, add, doc, serialization, sum, tidy, zeros } from '@tensorflow/tfjs-core';\r\nimport * as K from './backend/tfjs_backend';\r\nimport { deserializeKerasObject, serializeKerasObject } from './utils/generic_utils';\r\nvar Regularizer = (function (_super) {\r\n    tslib_1.__extends(Regularizer, _super);\r\n    function Regularizer() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Regularizer;\r\n}(serialization.Serializable));\r\nexport { Regularizer };\r\nvar L1L2 = (function (_super) {\r\n    tslib_1.__extends(L1L2, _super);\r\n    function L1L2(config) {\r\n        var _this = _super.call(this) || this;\r\n        var l1 = config == null || config.l1 == null ? 0.01 : config.l1;\r\n        var l2 = config == null || config.l2 == null ? 0.01 : config.l2;\r\n        _this.hasL1 = l1 !== 0;\r\n        _this.hasL2 = l2 !== 0;\r\n        _this.l1 = K.getScalar(l1);\r\n        _this.l2 = K.getScalar(l2);\r\n        return _this;\r\n    }\r\n    L1L2.prototype.apply = function (x) {\r\n        var _this = this;\r\n        return tidy(function () {\r\n            var regularization = zeros([1]);\r\n            if (_this.hasL1) {\r\n                regularization =\r\n                    add(regularization, sum(K.scalarTimesArray(_this.l1, abs(x))));\r\n            }\r\n            if (_this.hasL2) {\r\n                regularization =\r\n                    add(regularization, sum(K.scalarTimesArray(_this.l2, K.square(x))));\r\n            }\r\n            return regularization.asScalar();\r\n        });\r\n    };\r\n    L1L2.prototype.getConfig = function () {\r\n        return { 'l1': this.l1.dataSync()[0], 'l2': this.l2.dataSync()[0] };\r\n    };\r\n    L1L2.fromConfig = function (cls, config) {\r\n        return new cls({ l1: config.l1, l2: config.l2 });\r\n    };\r\n    L1L2.className = 'L1L2';\r\n    L1L2 = tslib_1.__decorate([\r\n        doc({ heading: 'Regularizers', namespace: 'regularizers' })\r\n    ], L1L2);\r\n    return L1L2;\r\n}(Regularizer));\r\nexport { L1L2 };\r\nserialization.SerializationMap.register(L1L2);\r\nexport function l1(config) {\r\n    return new L1L2({ l1: config != null ? config.l1 : null, l2: 0 });\r\n}\r\nexport function l2(config) {\r\n    return new L1L2({ l2: config != null ? config.l2 : null, l1: 0 });\r\n}\r\nexport var REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\r\n    'l1l2': 'L1L2'\r\n};\r\nexport function serializeRegularizer(constraint) {\r\n    return serializeKerasObject(constraint);\r\n}\r\nexport function deserializeRegularizer(config, customObjects) {\r\n    if (customObjects === void 0) { customObjects = {}; }\r\n    return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'regularizer');\r\n}\r\nexport function getRegularizer(identifier) {\r\n    if (identifier == null) {\r\n        return null;\r\n    }\r\n    if (typeof identifier === 'string') {\r\n        var className = identifier in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\r\n            REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\r\n            identifier;\r\n        var config = { className: className, config: {} };\r\n        return deserializeRegularizer(config);\r\n    }\r\n    else if (identifier instanceof Regularizer) {\r\n        return identifier;\r\n    }\r\n    else {\r\n        return deserializeRegularizer(identifier);\r\n    }\r\n}\r\n//# sourceMappingURL=regularizers.js.map","map":"{\"version\":3,\"file\":\"regularizers.js\",\"sourceRoot\":\"\",\"sources\":[\"src/regularizers.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/smilkov/code/tfjs-layers/regularizers.d.ts","text":"import { Scalar, serialization, Tensor } from '@tensorflow/tfjs-core';\r\nexport declare abstract class Regularizer extends serialization.Serializable {\r\n    abstract apply(x: Tensor): Scalar;\r\n}\r\nexport interface L1L2Config {\r\n    l1?: number;\r\n    l2?: number;\r\n}\r\nexport interface L1Config {\r\n    l1: number;\r\n}\r\nexport interface L2Config {\r\n    l2: number;\r\n}\r\nexport declare class L1L2 extends Regularizer {\r\n    static className: string;\r\n    private readonly l1;\r\n    private readonly l2;\r\n    private readonly hasL1;\r\n    private readonly hasL2;\r\n    constructor(config?: L1L2Config);\r\n    apply(x: Tensor): Scalar;\r\n    getConfig(): serialization.ConfigDict;\r\n    static fromConfig<T extends serialization.Serializable>(cls: serialization.SerializableConstructor<T>, config: serialization.ConfigDict): T;\r\n}\r\nexport declare function l1(config?: L1Config): L1L2;\r\nexport declare function l2(config: L2Config): L1L2;\r\nexport declare type RegularizerIdentifier = 'l1l2' | string;\r\nexport declare const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP: {\r\n    [identifier in RegularizerIdentifier]: string;\r\n};\r\nexport declare function serializeRegularizer(constraint: Regularizer): serialization.ConfigDictValue;\r\nexport declare function deserializeRegularizer(config: serialization.ConfigDict, customObjects?: serialization.ConfigDict): Regularizer;\r\nexport declare function getRegularizer(identifier: RegularizerIdentifier | serialization.ConfigDict | Regularizer): Regularizer;\r\n"}}
